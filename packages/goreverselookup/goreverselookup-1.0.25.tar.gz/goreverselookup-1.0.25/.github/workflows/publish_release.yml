name: CD

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ["3.10", "3.11"]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Get the release tag version
      id: vars
      run: |
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Update pyproject.toml
      run: |
        # Extract the tag version
        TAG_VERSION=${{ steps.vars.outputs.tag }}
        echo $TAG_VERSION
        # Update pyproject.toml with the new version
        sed -i "s/version = .*/version = \"$TAG_VERSION\"/g" pyproject.toml

    - name: Build
      run: |
        python -m build

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          pycounts

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}