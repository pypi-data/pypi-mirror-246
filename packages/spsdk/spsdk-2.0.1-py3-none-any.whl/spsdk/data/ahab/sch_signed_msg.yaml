# Copyright 2023 NXP
#
# SPDX-License-Identifier: BSD-3-Clause
---
type: object
required:
  - family
  - output
  - srk_set
  - fuse_version
  - sw_version
  - srk_table
  - signing_key
  - used_srk_id
  - srk_revoke_mask
  - message
properties:
  family:
    type: string
    title: MCU family
    description:
      Family identifier including the chip revision. If revision is not
      present, latest revision is used as default.
    enum:
      - mx93
      - rt118x
    template_value: rt118x
  revision:
    type: string
    title: MCU revision
    description: Revision of silicon
    enum:
      - a0
    template_value: a0
  output:
    type: string
    title: Output file name
    description: Output Signed Message file name
    format: file_name
    template_value: signed_message.bin

  srk_set:
    type: string
    template_title: Settings of Signed Message
    title: Super Root Key (SRK) set
    description: Defines which set is used to authenticate the signed message.
    enum: [none, oem, nxp]
    template_value: oem
  used_srk_id:
    type: [number, string]
    title: Used SRK
    description: Which key from SRK set is being used.
    format: number
    template_value: 0
  srk_revoke_mask:
    type: [number, string]
    title: SRK revoke mask
    description:
      Bitmask to indicate which SRKs to revoke. Bit set to 1 means revoke
      key. Bit 0 = revoke SRK_0, bit 1 = revoke SRK_1 etc.
    format: number
    template_value: 0x00
  fuse_version:
    type: [number, string]
    title: Fuse version
    description:
      The value must be equal or greater than the version stored in fuses
      to allow loading this container.
    format: number
    template_value: 0
  sw_version:
    type: [number, string]
    title: Software version
    description:
      Number used by Privileged Host Boot Companion (PHBC) to select between
      multiple images with same Fuse version field.
    format: number
    template_value: 0
  signing_key:
    type: string
    title: Signed Message container signing key
    description:
      Private key used for sign the container header. Header can be signed by SRK.
      The referenced SRK must not have been revoked.
    format: file
    template_value: my_signing_key.pem
  signature_provider:
    type: string
    title: Signature Provider
    description: Signature provider configuration in format 'type=<sp_type>;<key1>=<value1>;<key2>=<value2>". The signature provider could be used instead of definition of 'signing_key'.
    template_value: type=file;file_path=my_prv_key.pem

  srk_table:
    type: object
    title: SRK Table
    template_title: Configuration of Signed Message SRK table
    description: "SRK (Super Root key) table definition."
    required: [srk_array]
    properties:
      srk_array:
        type: array
        title: Super Root Key (SRK) table
        description:
          "Table containing the used SRK records. All SRKs must be of the same
          type. Supported signing algorithms are: RSASSA-PSS or ECDSA. Supported hash algorithms:
          sha256, sha384, sha512. Supported key sizes/curves: prime256v1, sec384r1, sec512r1,
          rsa2048, rsa4096. Certificate may be of Certificate Authority."
        minItems: 4
        maxItems: 4
        items:
          type: string
          title: SRK key
          description: Path to SRK Key file.
          format: file
          template_value:
            - my_srk_public_key0.pub
            - my_srk_public_key1.pub
            - my_srk_public_key2.pub
            - my_srk_public_key3.pub

  iv_path:
          type: string
          title: IV file path
          description:
            "Used only for encrypted messages. Fixed size at 256 bits. If defined the encryption is used for this Signed message.
            The HEX format is accepted."
          format: file
          template_value: my_IV.txt

  message:
    type: object
    template_title: Settings of Message
    required: [uuid, command]
    properties:
      cert_version:
        type: [number, string]
        title: Certificate version
        description: Certificate version
        format: number
        template_value: 0x00
      cert_permission:
        type: [number, string]
        title: Certificate permission
        description: Certificate permission, to be used in future. The stated permission must allow the operation requested by the signed message.
        format: number
        template_value: 0x00
      issue_date:
        type: string
        pattern: ^\d{4}-\d{2}$
        title: Issue date
        description: "Optional Issue date of message, if not defined the current date is used. The format must be following: 'YYYY-MM'"
        template_value: 2022-10
      uuid:
        type: string
        title: Device UUID
        description: Unique identifier of the chip. It could be retrieve by BLHOST command from chip or also the debug authentication protocol could provide this value. Hex string format (hexadecimal string without '0x').
        template_value: "00001111aaaabbbb22223333ccccbbbb"
      command:
        oneOf:
          - type: object
            required: [RETURN_LIFECYCLE_UPDATE_REQ]
            properties:
              RETURN_LIFECYCLE_UPDATE_REQ:
                type: [number,string]
                title: Life Cycle
                description: Value of life cycle to be moved on. The value 16 is used for OEM keys (FIELD_RETURN_OEM) and 32 for NXP keys(FIELD_RETURN_NXP).
                template_value: 0x10
          - type: object
            template_title: The 'Write secure fuse request' is message for NXP use, not usable for OEM
            required: [WRITE_SEC_FUSE_REQ]
            properties:
              WRITE_SEC_FUSE_REQ:
                type: object
                title: Secure Fuse
                description: Description of secure fuse to write (burn)
                required: [id, data]
                properties:
                  id:
                    type: [number,string]
                    title: Fuse ID
                    description: Fuse ID (address), maximal 16 bit value is allowed.
                    template_value: 0x0
                  flags:
                    type: [number,string]
                    title: Fuse flags
                    description: Fuse flags, maximal 8 bit value is allowed.
                    template_value: 0x0
                  data:
                    type: array
                    title: Fuse data
                    description: Fuse data, maximal 32 bit value is allowed in each item.
                    minItems: 1
                    items:
                      type: [number,string]
                      format: number
                      template_value: ["0xA5A5A5A5", "0x01"]

