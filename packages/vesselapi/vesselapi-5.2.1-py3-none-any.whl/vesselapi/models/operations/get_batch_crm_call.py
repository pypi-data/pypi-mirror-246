"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import call as shared_call
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional
from vesselapi import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetBatchCrmCallRequestBody:
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessToken') }})
    r"""The token for the customer's CRM account. This was generated when they connected their account."""
    ids: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ids') }})
    r"""List of call Ids."""
    all_fields: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allFields'), 'exclude': lambda f: f is None }})
    r"""Returns all fields including non-unifiable and custom fields under the \\"additional\\" property in the response"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetBatchCrmCallResponseBody:
    r"""OK"""
    calls: Optional[List[shared_call.Call]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calls'), 'exclude': lambda f: f is None }})
    invalid_ids: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidIds'), 'exclude': lambda f: f is None }})
    r"""Ids that didn't return anything. Will be an empty array if all Ids are valid."""
    



@dataclasses.dataclass
class GetBatchCrmCallResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    response_body: Optional[GetBatchCrmCallResponseBody] = dataclasses.field(default=None)
    r"""OK"""
    

