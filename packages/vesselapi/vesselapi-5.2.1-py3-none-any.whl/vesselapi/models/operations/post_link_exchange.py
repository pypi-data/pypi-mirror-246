"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional
from vesselapi import utils


@dataclasses.dataclass
class PostLinkExchangeSecurity:
    vessel_api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'vessel-api-token' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostLinkExchangeRequestBody:
    public_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicToken') }})
    


class IntegrationID(str, Enum):
    SALESFORCE = 'salesforce'
    HUBSPOT = 'hubspot'
    PIPEDRIVE = 'pipedrive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostLinkExchangeResponseBody:
    r"""Exchange for access token"""
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessToken') }})
    connection_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectionId') }})
    integration_id: IntegrationID = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrationId') }})
    native_org_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nativeOrgId') }})
    native_org_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nativeOrgURL') }})
    



@dataclasses.dataclass
class PostLinkExchangeResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    response_body: Optional[PostLinkExchangeResponseBody] = dataclasses.field(default=None)
    r"""Exchange for access token"""
    

