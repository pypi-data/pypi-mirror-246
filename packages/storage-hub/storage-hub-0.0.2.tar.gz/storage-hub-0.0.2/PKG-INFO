Metadata-Version: 2.1
Name: storage-hub
Version: 0.0.2
Summary: soon
Home-page: https://github.com/VitailOG/storage-hub
Author: Vitaliy Zakharkiv
Author-email: vzaharkiv28@mail.com
License: MIT
Keywords: pypi,cicd,python
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Description-Content-Type: text/markdown

\n# Бібліотека FastAPI Storage

<p align="center">
  <img src="asserts/logo.png" alt="Logo">
</p>

**FastAPI Storage** - це бібліотека для операцій із сховищем в FastAPI додатках. Надає зручні абстракції та утиліти для роботи з різними бекендами зберігання, що дозволяє легко інтегрувати функціонал зберігання в проекти на FastAPI.

## Основні Особливості

- **Різноманітні Бекенди:** FastAPI Storage підтримує різні бекенди зберігання, включаючи локальні файлові системи, хмарні сервіси (наприклад, Amazon S3, Google Cloud Storage) та інші.

- **Проста Інтеграція:** Інтегруйте операції зберігання в FastAPI додаток з мінімальними змінами коду для плавного розвитку.

- **Підтримка Асинхронності:** Використовуйте можливості асинхронного програмування з вбудованою підтримкою асинхронних операцій зберігання для ефективної та реактивної поведінки додатка.

- **Можливість Кастомізації:** Налаштовуйте бібліотеку згідно з конкретними вимогами вашого проекту, розширюючи та налаштовуючи її функціонал.

## Встановлення

Встановіть бібліотеку за допомогою pip:

```bash
pip install storage_hub
```

## Ідея (потім видалити)

В результаті я бачу гнучку бібліотеку для взаємодії із файлами.
Вона повина надавати клієнтам використовувати різні сховища в одному проєкті 
(за основу пропоную розглянути реалізацію джанго із мульти бд),
надавити права на разні операції або на цілу групу операцій(читання або запис).

## Принцип робити (потребує узгодження із усіма)
Вся розробка має основні вітки як main, test, develop(поки більшого не бачу сенсу).
Для кожної задачі створюється окрема вітка і після її завершення 
відбуватиметься pull request із подальшим рев'ю від інших чуваків. після чого відбуватиметься мердж в test.
Існує поточні задачі, якщо є пропозиції внести її і узгодити із усіма.

## Поточні задачі
- [ ] Спроектувати архітектуру
- [ ] Налаштувати CI/CD
- [ ] Налаштувати Доки

## Пропозиції
- [ ] Пункт 1
- [x] Пункт 2
