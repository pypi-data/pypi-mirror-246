#  Copyright (c) 2023.  OceanDSL (https://oceandsl.uni-kiel.de)
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# Generated from Configuration.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,30,240,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,
        16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,3,20,138,8,20,1,20,5,
        20,141,8,20,10,20,12,20,144,9,20,1,21,3,21,147,8,21,1,21,1,21,1,
        22,3,22,152,8,22,1,22,3,22,155,8,22,1,22,1,22,1,22,1,22,3,22,161,
        8,22,1,22,3,22,164,8,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,3,23,175,8,23,1,24,4,24,178,8,24,11,24,12,24,179,1,25,1,25,
        1,25,1,25,5,25,186,8,25,10,25,12,25,189,9,25,1,25,1,25,1,25,1,25,
        1,25,5,25,196,8,25,10,25,12,25,199,9,25,1,25,3,25,202,8,25,1,26,
        4,26,205,8,26,11,26,12,26,206,1,26,1,26,1,27,1,27,1,27,1,27,5,27,
        215,8,27,10,27,12,27,218,9,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,28,5,28,229,8,28,10,28,12,28,232,9,28,1,28,3,28,235,8,28,
        1,28,1,28,1,29,1,29,1,216,0,30,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
        8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
        19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
        30,1,0,9,3,0,65,90,95,95,97,122,6,0,42,42,45,45,47,57,65,90,94,95,
        97,122,2,0,69,69,101,101,1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,
        92,3,0,9,10,13,13,32,32,3,0,10,10,13,13,124,124,3,0,10,10,13,13,
        63,63,256,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,1,61,1,0,0,0,3,75,1,0,0,0,5,77,1,0,0,0,7,86,1,0,0,0,9,88,1,
        0,0,0,11,96,1,0,0,0,13,98,1,0,0,0,15,106,1,0,0,0,17,108,1,0,0,0,
        19,110,1,0,0,0,21,116,1,0,0,0,23,118,1,0,0,0,25,120,1,0,0,0,27,122,
        1,0,0,0,29,124,1,0,0,0,31,126,1,0,0,0,33,128,1,0,0,0,35,130,1,0,
        0,0,37,132,1,0,0,0,39,134,1,0,0,0,41,137,1,0,0,0,43,146,1,0,0,0,
        45,151,1,0,0,0,47,174,1,0,0,0,49,177,1,0,0,0,51,201,1,0,0,0,53,204,
        1,0,0,0,55,210,1,0,0,0,57,224,1,0,0,0,59,238,1,0,0,0,61,62,5,99,
        0,0,62,63,5,111,0,0,63,64,5,110,0,0,64,65,5,102,0,0,65,66,5,105,
        0,0,66,67,5,103,0,0,67,68,5,117,0,0,68,69,5,114,0,0,69,70,5,97,0,
        0,70,71,5,116,0,0,71,72,5,105,0,0,72,73,5,111,0,0,73,74,5,110,0,
        0,74,2,1,0,0,0,75,76,5,58,0,0,76,4,1,0,0,0,77,78,5,97,0,0,78,79,
        5,99,0,0,79,80,5,116,0,0,80,81,5,105,0,0,81,82,5,118,0,0,82,83,5,
        97,0,0,83,84,5,116,0,0,84,85,5,101,0,0,85,6,1,0,0,0,86,87,5,44,0,
        0,87,8,1,0,0,0,88,89,5,105,0,0,89,90,5,110,0,0,90,91,5,99,0,0,91,
        92,5,108,0,0,92,93,5,117,0,0,93,94,5,100,0,0,94,95,5,101,0,0,95,
        10,1,0,0,0,96,97,5,33,0,0,97,12,1,0,0,0,98,99,5,102,0,0,99,100,5,
        101,0,0,100,101,5,97,0,0,101,102,5,116,0,0,102,103,5,117,0,0,103,
        104,5,114,0,0,104,105,5,101,0,0,105,14,1,0,0,0,106,107,5,123,0,0,
        107,16,1,0,0,0,108,109,5,125,0,0,109,18,1,0,0,0,110,111,5,103,0,
        0,111,112,5,114,0,0,112,113,5,111,0,0,113,114,5,117,0,0,114,115,
        5,112,0,0,115,20,1,0,0,0,116,117,5,91,0,0,117,22,1,0,0,0,118,119,
        5,93,0,0,119,24,1,0,0,0,120,121,5,46,0,0,121,26,1,0,0,0,122,123,
        5,43,0,0,123,28,1,0,0,0,124,125,5,45,0,0,125,30,1,0,0,0,126,127,
        5,42,0,0,127,32,1,0,0,0,128,129,5,47,0,0,129,34,1,0,0,0,130,131,
        5,37,0,0,131,36,1,0,0,0,132,133,5,40,0,0,133,38,1,0,0,0,134,135,
        5,41,0,0,135,40,1,0,0,0,136,138,7,0,0,0,137,136,1,0,0,0,138,142,
        1,0,0,0,139,141,7,1,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,140,
        1,0,0,0,142,143,1,0,0,0,143,42,1,0,0,0,144,142,1,0,0,0,145,147,5,
        45,0,0,146,145,1,0,0,0,146,147,1,0,0,0,147,148,1,0,0,0,148,149,3,
        49,24,0,149,44,1,0,0,0,150,152,5,45,0,0,151,150,1,0,0,0,151,152,
        1,0,0,0,152,154,1,0,0,0,153,155,3,49,24,0,154,153,1,0,0,0,154,155,
        1,0,0,0,155,156,1,0,0,0,156,157,5,46,0,0,157,163,3,49,24,0,158,160,
        7,2,0,0,159,161,5,45,0,0,160,159,1,0,0,0,160,161,1,0,0,0,161,162,
        1,0,0,0,162,164,3,49,24,0,163,158,1,0,0,0,163,164,1,0,0,0,164,46,
        1,0,0,0,165,166,5,116,0,0,166,167,5,114,0,0,167,168,5,117,0,0,168,
        175,5,101,0,0,169,170,5,102,0,0,170,171,5,97,0,0,171,172,5,108,0,
        0,172,173,5,115,0,0,173,175,5,101,0,0,174,165,1,0,0,0,174,169,1,
        0,0,0,175,48,1,0,0,0,176,178,7,3,0,0,177,176,1,0,0,0,178,179,1,0,
        0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,50,1,0,0,0,181,187,5,34,
        0,0,182,183,5,92,0,0,183,186,9,0,0,0,184,186,8,4,0,0,185,182,1,0,
        0,0,185,184,1,0,0,0,186,189,1,0,0,0,187,185,1,0,0,0,187,188,1,0,
        0,0,188,190,1,0,0,0,189,187,1,0,0,0,190,202,5,34,0,0,191,197,5,39,
        0,0,192,193,5,92,0,0,193,196,9,0,0,0,194,196,8,5,0,0,195,192,1,0,
        0,0,195,194,1,0,0,0,196,199,1,0,0,0,197,195,1,0,0,0,197,198,1,0,
        0,0,198,200,1,0,0,0,199,197,1,0,0,0,200,202,5,39,0,0,201,181,1,0,
        0,0,201,191,1,0,0,0,202,52,1,0,0,0,203,205,7,6,0,0,204,203,1,0,0,
        0,205,206,1,0,0,0,206,204,1,0,0,0,206,207,1,0,0,0,207,208,1,0,0,
        0,208,209,6,26,0,0,209,54,1,0,0,0,210,211,5,47,0,0,211,212,5,42,
        0,0,212,216,1,0,0,0,213,215,9,0,0,0,214,213,1,0,0,0,215,218,1,0,
        0,0,216,217,1,0,0,0,216,214,1,0,0,0,217,219,1,0,0,0,218,216,1,0,
        0,0,219,220,5,42,0,0,220,221,5,47,0,0,221,222,1,0,0,0,222,223,6,
        27,0,0,223,56,1,0,0,0,224,225,5,47,0,0,225,226,5,47,0,0,226,230,
        1,0,0,0,227,229,8,7,0,0,228,227,1,0,0,0,229,232,1,0,0,0,230,228,
        1,0,0,0,230,231,1,0,0,0,231,234,1,0,0,0,232,230,1,0,0,0,233,235,
        7,8,0,0,234,233,1,0,0,0,234,235,1,0,0,0,235,236,1,0,0,0,236,237,
        6,28,0,0,237,58,1,0,0,0,238,239,9,0,0,0,239,60,1,0,0,0,20,0,137,
        140,142,146,151,154,160,163,174,179,185,187,195,197,201,206,216,
        230,234,1,6,0,0
    ]

class ConfigurationLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    ID = 21
    ELONG = 22
    EDOUBLE = 23
    EBoolean = 24
    INT = 25
    STRING = 26
    WS = 27
    ML_COMMENT = 28
    SL_COMMENT = 29
    ANY_OTHER = 30

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'configuration'", "':'", "'activate'", "','", "'include'", 
            "'!'", "'feature'", "'{'", "'}'", "'group'", "'['", "']'", "'.'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "ELONG", "EDOUBLE", "EBoolean", "INT", "STRING", "WS", 
            "ML_COMMENT", "SL_COMMENT", "ANY_OTHER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "ID", "ELONG", "EDOUBLE", "EBoolean", "INT", "STRING", 
                  "WS", "ML_COMMENT", "SL_COMMENT", "ANY_OTHER" ]

    grammarFileName = "Configuration.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


