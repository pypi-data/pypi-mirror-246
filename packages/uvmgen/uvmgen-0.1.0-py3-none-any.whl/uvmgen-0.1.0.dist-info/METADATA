Metadata-Version: 2.1
Name: uvmgen
Version: 0.1.0
Summary: A toolkit of uvm tb generate.
Author-email: Dragon-Git <1762578117@qq.com>
Project-URL: Homepage, https://github.com/Dragon-Git/icdk
Project-URL: issue tracker, https://github.com/Dragon-Git/icdk/issues
Keywords: verification,testbench,UVM,template,tool,generator
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)
Classifier: Topic :: Software Development :: Documentation
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: fire ==0.5.0
Requires-Dist: Mako ==1.3.0
Provides-Extra: dev
Requires-Dist: uvmgen[doc,lint,test] ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: sphinx ; extra == 'doc'
Provides-Extra: lint
Requires-Dist: ruff ; extra == 'lint'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'

# icdk (IC Deveplopment Toolkit)

## uvmgen

### 1. agent

- mon2cov_con_approach 
  Which approach would you like to use for monitor's connection with observers(scoreboard,coverage etc.)?
     1) Callbacks approach ;
     2) Analysis port usage in monitor
- drv_type
  pull driver or push driver?
