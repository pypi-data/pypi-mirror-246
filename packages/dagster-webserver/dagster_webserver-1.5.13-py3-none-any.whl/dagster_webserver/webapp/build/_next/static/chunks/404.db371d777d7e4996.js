"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[404],{65767:function(t,n,e){e.d(n,{l:function(){return useCursorPaginatedQuery}});var o=e(85333),r=e(6692),a=e(58467),i=e(82550),s=e(40794),u=e(2784),h=e(71277);function useCursorPaginatedQuery(t){var n=(0,a._)(u.useState(function(){return[]}),2),e=n[0],d=n[1],l=(0,a._)((0,h.q)({queryKey:"cursor"}),2),c=l[0],p=l[1],b=(0,r._)((0,o._)({},t.variables),{cursor:c,limit:t.pageSize+1}),f=(0,s.a)(t.query,{skip:t.skip,variables:b,notifyOnNetworkStatusChange:!0}),w={hasPrevCursor:!!c,hasNextCursor:t.getResultArray(f.data).length===t.pageSize+1,popCursor:function(){var t=(0,i._)(e);p(t.pop()),d(t)},advanceCursor:function(){c&&d(function(t){return(0,i._)(t).concat([c])});var n=f.data&&t.nextCursorForResult(f.data);n&&p(n)},reset:function(){d([]),p(void 0)}};return{queryResult:f,paginationProps:w}}},19358:function(t,n,e){e.d(n,{Y:function(){return a}});var o=e(73235),r=e(25195);function _templateObject(){var t=(0,o._)(["\n  thead tr {\n    position: sticky;\n    top: ","px;\n    background-color: ",";\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the `tr` and we don't want an inset\n   * box-shadow on `th` elements because it will create a double-border on the\n   * bottom of the `thead` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * `th` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ",";\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n"],["\n  thead tr {\n    position: sticky;\n    top: ","px;\n    background-color: ",";\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ",";\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n"]);return _templateObject=function(){return t},t}var a=e(35505).ZP.div.withConfig({componentId:"sc-186bdb2e-0"})(_templateObject(),function(t){var n=t.$top;return void 0===n?0:n},(0,r.v8)(),(0,r.wL)())}}]);
//# sourceMappingURL=404.db371d777d7e4996.js.map