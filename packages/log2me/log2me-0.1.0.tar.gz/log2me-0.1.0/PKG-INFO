Metadata-Version: 2.1
Name: log2me
Version: 0.1.0
Summary: Basic logging helpers.
Author-email: Nicu Tofan <nicu.tofan@gmail.com>
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: System :: Logging
Classifier: Typing :: Typed
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydantic>=2.5.2
Requires-Dist: rich>=13.7.0
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pyproject-flake8; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: wheel; extra == "dev"
Provides-Extra: tests
Requires-Dist: black; extra == "tests"
Requires-Dist: flake8; extra == "tests"
Requires-Dist: isort; extra == "tests"
Requires-Dist: mypy; extra == "tests"
Requires-Dist: pyproject-flake8; extra == "tests"
Requires-Dist: pytest-cov; extra == "tests"
Requires-Dist: pytest-mock; extra == "tests"
Requires-Dist: pytest; extra == "tests"
Requires-Dist: twine; extra == "tests"
Requires-Dist: wheel; extra == "tests"
Provides-Extra: docs
Requires-Dist: cairosvg; extra == "docs"
Requires-Dist: markdown-include; extra == "docs"
Requires-Dist: mkdocs-material; extra == "docs"
Requires-Dist: mkdocs-material[imaging]; extra == "docs"
Requires-Dist: mkdocs; extra == "docs"
Requires-Dist: mkdocstrings; extra == "docs"
Requires-Dist: mkdocstrings[python]; extra == "docs"
Requires-Dist: pillow; extra == "docs"
Requires-Dist: pymdown-extensions; extra == "docs"

# log2me

Basic logging helpers.

## Installation

```bash
python -m pip install log2me
```

## Usage

Include the logging settings into your model and, at application
start-up time, initialize the loggers.

```python
from pydantic_settings import BaseSettings
from log2me import LogSettings, get_engine


class AppSettings(BaseSettings):
    # ...
    logs: LogSettings = Field(
        description="Logging settings.",
    )
    # ...


settings = AppSettings()
setup_logging(settings.logs)
```

## Development

Start by creating a virtual environment and installing the dependencies.
If you have a `make` command available, you can run `make init` after
the virtual environment is created and activated. Otherwise, you can run
the following commands:

```bash
python -m venv venv
source venv/bin/activate
python -m pip install --upgrade pip
python -m pip install -e .[dev]
```

On Windows, to be able to serve the documentation, you may also need to
install the `cairo2` package:

```bash
pip install pipwin
pipwin install cairocffi
```
