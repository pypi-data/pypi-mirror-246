[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{name = "Justin Flannery", email = "justin.flannery@juftin.com"}]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11"
]
dependencies = [
  "click>=8.0.1",
  "pydantic>=1.2.0,<2.0.0",
  "requests>=2.0.0,<3.0.0",
  "rich>=10.0.0"
]
description = "A simple Python SDK around the Lunch Money Developer API"
dynamic = ["version"]
keywords = ["lunchmoney", "python", "pydantic", "api-client"]
license = "MIT"
name = "lunchable"
readme = "README.md"
requires-python = ">=3.8,<4"

[project.optional-dependencies]
all = [
  "pandas>=1.5.0,<2.0.0",
  "python-dateutil~=2.8.2",
  "splitwise>=2.3.0,<3.0.0"
]
apps = [
  "pandas>=1.5.0,<2.0.0"
]
primelunch = [
  "pandas>=1.5.0,<2.0.0"
]
splitlunch = [
  "python-dateutil~=2.8.2",
  "splitwise>=2.3.0,<3.0.0"
]

[project.scripts]
lunchable = "lunchable._cli:cli"

[project.urls]
Changelog = "https://github.com/juftin/lunchable/releases"
Discussions = "https://github.com/juftin/lunchable/discussions"
Docker = "https://hub.docker.com/r/juftin/lunchable"
Documentation = "https://github.com/juftin/lunchable#readme"
Issues = "https://github.com/juftin/lunchable/issues"
Source = "https://github.com/juftin/lunchable"

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.coverage.run]
branch = true
omit = ["lunchable/_version.py"]
parallel = true

[tool.hatch.envs.default]
dependencies = [
  # Testing
  "pytest~=7.3.1",
  "pytest-cov~=4.0.0",
  "pytest-mock~=3.10.0",
  "vcrpy~=5.1.0",
  # Tooling
  "black~=23.3.0",
  "ruff~=0.0.261",
  "mypy~=1.2.0",
  "pip-tools~=6.13.0",
  # Sphinx
  "sphinx",
  "sphinx-rtd-theme",
  "autodocsumm",
  "myst-parser[linkify]",
  "autoclasstoc",
  "sphinx-copybutton",
  "sphinx_autodoc_defaultargs",
  "sphinxcontrib-apidoc",
  "sphinx-click",
  "sphinx-autodoc-typehints",
  "autodoc_pydantic"
]
features = [
  "all"
]

[tool.hatch.envs.default.env-vars]
LUNCHMONEY_ACCESS_TOKEN = "{env:LUNCHMONEY_ACCESS_TOKEN:LUNCHMONEY_ACCESS_TOKEN_PLACEHOLDER}"
PUSHOVER_USER_KEY = "{env:PUSHOVER_USER_KEY:PUSHOVER_USER_KEY_PLACEHOLDER}"
SENSITIVE_REQUEST_STRINGS = "{env:SENSITIVE_REQUEST_STRINGS:SENSITIVE_REQUEST_STRINGS_PLACEHOLDER}"
SPLITWISE_API_KEY = "{env:SPLITWISE_API_KEY:SPLITWISE_API_KEY_PLACEHOLDER}"
SPLITWISE_CONSUMER_KEY = "{env:SPLITWISE_CONSUMER_KEY:SPLITWISE_CONSUMER_KEY_PLACEHOLDER}"
SPLITWISE_CONSUMER_SECRET = "{env:SPLITWISE_CONSUMER_SECRET:SPLITWISE_CONSUMER_SECRET_PLACEHOLDER}"

[tool.hatch.envs.default.scripts]
_pip_compile = "pip-compile --resolver=backtracking --generate-hashes --all-extras {args:}"
_sed_requirements = "sed -i.bak 's/-r requirements.in/lunchable (pyproject.toml)/' {args}"
all = ["format", "lint", "test"]
check = [
  """
  mypy \
    --install-types \
    --ignore-missing-imports \
    --follow-imports=skip \
    --strict-optional \
    --non-interactive \
    {args:lunchable/}
  """
]
docs-build = [
  "rm -rf docs/_build/ && rm -rf docs/source/api/",
  "cd docs && make html"
]
docs-serve = [
  "docs-build",
  "python -m http.server --bind 0.0.0.0 -d docs/_build/html/"
]
format = ["ruff --fix {args:.}", "black {args:.}"]
lint = ["ruff {args:.}", "black --check {args:.}"]
requirements = [
  "hatch dep show requirements --project-only --all > requirements.in",
  "_pip_compile --output-file requirements/prod.txt{args:}",
  "_sed_requirements requirements/prod.txt",
  "hatch dep show requirements --all > requirements.in",
  "_pip_compile --output-file requirements/dev.txt{args:}",
  "_sed_requirements requirements/dev.txt",
  "rm requirements.in"
]
semantic-release = [
  "npm install --prefix .github/semantic_release/",
  "npx --prefix .github/semantic_release/ semantic-release {args:}"
]
test = "pytest --cov=lunchable --cov-report={env:COVERAGE_REPORT:term-missing} --cov-config=pyproject.toml {args:tests/ -v}"

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.test.scripts]
matrix = "test"

[tool.hatch.version]
path = "lunchable/_version.py"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
no_implicit_reexport = true
plugins = [
  "pydantic.mypy"
]
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
filterwarnings = [
  "error"
]

[tool.ruff]
ignore = [
  "E501",  # line too long, handled by black
  "PLR0913",  # Too many arguments to function call
  "PLW2901",  # Outer for loop variable overwritten by inner assignment target
  "RUF001",  # String contains ambiguous unicode character `â€™`
  "PLR2004",  # Magic value used in comparison
  "RUF012"  # Mutable class attributes should be annotated with `typing.ClassVar`
]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "Q",  # flake8-quotes
  "B",  # flake8-bugbear
  "PLE",  # pylint
  "PLR",  # pylint
  "PLW",  # pylint
  "RUF",  # ruff
  "C90"  # mccabe
]

[tool.ruff.per-file-ignores]
"tests/**" = [
  "PLR2004"  # Magic value used in comparison
]
