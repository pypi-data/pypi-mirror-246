Metadata-Version: 2.1
Name: pssepy
Version: 1.0.1
Summary: A high-level python interface for PSS/E
Project-URL: Homepage, http://www.github.com/nrel/pypsse
Author-email: Aadil Latif <Aadil.Latif@nrel.gov>
License-Expression: BSD-3-Clause
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: aiohttp
Requires-Dist: aiohttp-cors
Requires-Dist: aiohttp-swagger
Requires-Dist: aiohttp-swagger3
Requires-Dist: click
Requires-Dist: h5py
Requires-Dist: helics
Requires-Dist: networkx
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pydantic~=2.4
Requires-Dist: pytest
Requires-Dist: pyyaml
Requires-Dist: requests
Requires-Dist: terminaltables
Requires-Dist: toml
Requires-Dist: xlrd
Description-Content-Type: text/markdown

ï»¿## :blush: Welcome to the PyPSSE Repository

> A python wrapper around psspy (python API for PSSE simulator) to perform
> time series powerflow and dynamic simulation for power system fault

### :email: Contact Information
* :snowman: [Aadil Latif](mailto:aadil.latif@nrel.gov)
* :snowman: [Kapil Duwadi](mailto:kapil.duwadi@nrel.gov)

### :computer: Setup 

1. Clone this repository
2. Open up a Anaconda command prompt and execute command `set CONDA_FORCE_32BIT=1`.
3. Create a virtual environment by executing `conda create -n <name> python=3.7` in anaconda prompt
4. Activate environmnet by executing `conda activate <name>`
5. From the cloned PyPSSE directory execute command `python install -e.` to install PyPSSE in the same environment

### :syringe: Testing repository
1. Activate the environment
2. Execute command `pytest` from the cloned repository
