{"version":3,"file":"static/js/2045.1af33207.chunk.js","mappings":"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","sources":["components/ConfigurationFormObjectFieldTemplate.jsx","components/Output.jsx","components/form/Empty.jsx","components/ApiBackendSelector.jsx","components/InputForm.jsx","components/ConfigForm.jsx","pages/home.jsx"],"sourcesContent":["import {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Grid,\n  Divider,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { canExpand } from \"@rjsf/utils\";\n\nfunction ObjectFieldGrid(props) {\n  const {\n    properties,\n    disabled,\n    readonly,\n    uiSchema,\n    schema,\n    formData,\n    onAddClick,\n    registry,\n  } = props;\n\n  const { AddButton } = registry.templates;\n\n  return (\n    <Grid container={true} spacing={2} style={{ marginTop: \"10px\" }}>\n      {properties.map((element, index) =>\n        // Remove the <Grid> if the inner element is hidden as the <Grid>\n        // itself would otherwise still take up space.\n        element.hidden ? (\n          element.content\n        ) : (\n          <Grid\n            item={true}\n            xs={12}\n            key={index}\n            style={{ marginBottom: \"10px\" }}\n          >\n            {element.content}\n          </Grid>\n        ),\n      )}\n      {canExpand(schema, uiSchema, formData) && (\n        <Grid container justifyContent=\"flex-end\">\n          <Grid item={true}>\n            <AddButton\n              className=\"object-property-expand\"\n              onClick={onAddClick(schema)}\n              disabled={disabled || readonly}\n              uiSchema={uiSchema}\n              registry={registry}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nfunction RootObjectFieldTemplate(props) {\n  const { properties, uiSchema } = props;\n\n  let requiredProperties = [];\n  let optionalProperties = [];\n  properties.forEach((prop) => {\n    if (\n      uiSchema[prop.name] &&\n      \"ui:advanced\" in uiSchema[prop.name] &&\n      !uiSchema[prop.name][\"ui:advanced\"]\n    ) {\n      requiredProperties.push(prop);\n    } else {\n      optionalProperties.push(prop);\n    }\n  });\n\n  return (\n    <>\n      <ObjectFieldGrid {...{ ...props, properties: requiredProperties }} />\n      <Divider style={{ margin: \"16px 0\" }} />\n      {optionalProperties.length > 0 && (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <strong style={{ marginLeft: \"5px\" }}>Advanced</strong>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ObjectFieldGrid\n              {...{ ...props, properties: optionalProperties }}\n            />\n          </AccordionDetails>\n        </Accordion>\n      )}\n    </>\n  );\n}\n\nexport default function CustomObjectFieldTemplate(props) {\n  const { idSchema } = props;\n\n  if (idSchema?.$id === \"root\") {\n    return <RootObjectFieldTemplate {...props} />;\n  } else {\n    return <ObjectFieldGrid {...props} />;\n  }\n}\n","import * as React from \"react\";\n// eslint-disable-next-line\nimport AceEditor from \"react-ace\";\n\nimport { List, ListItem } from \"@mui/material\";\n\nimport { Box, Tab, CircularProgress, Alert } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport validator from \"@rjsf/validator-ajv8\";\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { Empty } from \"./form/Empty\";\n\nconst outputTheme = createTheme({\n  typography: {\n    fontFamily: \"Lato, sans-serif\",\n    fontSize: 14,\n    color: \"#000\",\n  },\n  components: {\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          \"& .Mui-disabled\": {\n            color: \"#000\",\n          },\n        },\n      },\n    },\n    MuiImageList: {\n      styleOverrides: {\n        root: {\n          width: \"100% !important\",\n          height: \"100% !important\",\n        },\n      },\n    },\n    MuiListItemText: {\n      styleOverrides: {\n        root: {\n          whiteSpace: \"pre-wrap\",\n        },\n      },\n    },\n    MuiImageListItem: {\n      styleOverrides: {\n        img: {\n          width: \"auto\",\n          height: \"auto\",\n        },\n      },\n    },\n  },\n});\n\nexport function Errors(props) {\n  let errors = props.runError?.errors || props.runError || [];\n\n  return (\n    <List>\n      {errors.map((error) => (\n        <ListItem key={error}>\n          <Alert severity=\"error\">{error}</Alert>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport function Result(props) {\n  let formData = { ...(props.formData || {}) };\n\n  if (formData?.api_response) {\n    delete formData.api_response;\n  }\n\n  return Object.keys(props?.formData || {}).length > 0 ? (\n    <ThemedJsonForm\n      validator={validator}\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={formData}\n      readonly={true}\n      theme={outputTheme}\n      className=\"output-form\"\n    ></ThemedJsonForm>\n  ) : (\n    <Empty emptyMessage=\"No output\" />\n  );\n}\n\nexport default function Output(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Output form tabs\"\n          >\n            <Tab label=\"Output\" value=\"form\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {props.loading ? (\n            <CircularProgress />\n          ) : (\n            <Box>\n              <Result {...props} />\n              <Errors {...props} />\n            </Box>\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import { Box, Typography } from \"@mui/material\";\n\nexport function Empty({ emptyImage, emptyMessage, ...props }) {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100%\"\n      color=\"#838383\"\n    >\n      {emptyImage ? emptyImage : null}\n      <Typography variant=\"h6\">\n        {emptyMessage ? emptyMessage : \"No data available\"}\n      </Typography>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\n\nimport {\n  Grid,\n  Select,\n  MenuItem,\n  Box,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport {\n  useRecoilValue,\n  useRecoilState,\n  useSetRecoilState,\n  useResetRecoilState,\n} from \"recoil\";\n\nimport {\n  apiProviderDropdownListState,\n  apiBackendDropdownListState,\n  apiBackendSelectedState,\n  apiBackendsState,\n  apiProviderSelectedState,\n  endpointSelectedState,\n  endpointConfigValueState,\n  inputValueState,\n} from \"../data/atoms\";\n\nexport default function ApiBackendSelector() {\n  const apiprovidersDropdown = useRecoilValue(apiProviderDropdownListState);\n  const apibackendsDropdown = useRecoilValue(apiBackendDropdownListState);\n  const apibackends = useRecoilValue(apiBackendsState);\n  const resetEndpointSelected = useResetRecoilState(endpointSelectedState);\n  const setendpointConfigValueState = useSetRecoilState(\n    endpointConfigValueState,\n  );\n  const resetInputValueState = useResetRecoilState(inputValueState);\n  const resetEndpointConfigValueState = useResetRecoilState(\n    endpointConfigValueState,\n  );\n\n  const [apiProviderSelected, setApiProviderSelected] = useRecoilState(\n    apiProviderSelectedState,\n  );\n  const [apiBackendSelected, setApiBackendSelected] = useRecoilState(\n    apiBackendSelectedState,\n  );\n\n  useEffect(() => {\n    if (apiBackendSelected) {\n      resetEndpointSelected();\n    }\n  }, [apiBackendSelected, resetEndpointSelected]);\n\n  useEffect(() => {\n    if (!apiProviderSelected && apibackends && apibackends.length > 0) {\n      setApiProviderSelected(\n        apibackends.find((backend) => backend.id === \"openai/chatgpt\")\n          ?.api_provider.name,\n      );\n      setApiBackendSelected(\n        apibackends.find((backend) => backend.id === \"openai/chatgpt\"),\n      );\n    } else if (\n      !apiBackendSelected &&\n      apiProviderSelected &&\n      apiProviderSelected === \"Open AI\"\n    ) {\n      setApiBackendSelected(\n        apibackends.find((backend) => backend.id === \"opennai/chatgpt\"),\n      );\n    }\n  }, [\n    apibackends,\n    apiBackendSelected,\n    apiProviderSelected,\n    setApiBackendSelected,\n    setApiProviderSelected,\n  ]);\n\n  return (\n    <Grid item id=\"apibackendselector\">\n      <Grid container direction=\"row\">\n        <Box sx={{ minWidth: 150 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"select-api-provider-label\">API Provider</InputLabel>\n            <Select\n              style={{ width: \"auto\" }}\n              onChange={(e) => {\n                setApiProviderSelected(e.target.value);\n                setApiBackendSelected(null);\n                setendpointConfigValueState({});\n                resetInputValueState();\n              }}\n              value={apiProviderSelected ? apiProviderSelected : \"\"}\n              label=\"Select API Provider\"\n            >\n              {apiprovidersDropdown.map((option, index) => (\n                <MenuItem key={index} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n\n        {apiProviderSelected && (\n          <Box sx={{ minWidth: 150 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"select-api-backend-label\">API Backend</InputLabel>\n              <Select\n                style={{ width: 150 }}\n                onChange={(e) => {\n                  setApiBackendSelected(\n                    apibackends.find(\n                      (backend) => backend.id === e.target.value,\n                    ),\n                  );\n                  setendpointConfigValueState({});\n                  resetEndpointConfigValueState();\n                  resetInputValueState();\n                }}\n                value={apiBackendSelected ? apiBackendSelected.id : \"\"}\n                label=\"Select API Backend\"\n              >\n                {/* TODO: Find a better way to render Promptly App processor in playground */}\n                {apibackendsDropdown\n                  .filter(\n                    (x) =>\n                      x.provider === apiProviderSelected &&\n                      x.label !== \"Promptly App\",\n                  )\n                  .map((option, index) => (\n                    <MenuItem key={index} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\n\nimport validator from \"@rjsf/validator-ajv8\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { inputValueState, templateValueState } from \"../data/atoms\";\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport { Box, Tab } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport { Empty as EmptyComponent } from \"./form/Empty\";\n\nconst theme = createTheme({\n  spacing: 2,\n  typography: {\n    fontSize: 12,\n  },\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: \"standard\",\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          overflow: \"scroll\",\n          textAlign: \"left\",\n          \"& .MuiTypography-root.MuiTypography-h5\": {\n            font: \"inherit\",\n            fontSize: \"1rem\",\n            fontWeight: \"600\",\n            margin: \"0.5rem 0.2rem\",\n            color: \"#757575\",\n          },\n          \"& .MuiTypography-root.MuiTypography-subtitle2\": {\n            fontSize: \"0.75rem\",\n          },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiBox-root\": {\n            display: \"None\",\n          },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiFormHelperText-root\":\n            {\n              display: \"block\",\n            },\n          \"& .MuiBox-root .form-group .MuiFormControl-root .MuiFormHelperText-root.Mui-focused\":\n            {\n              display: \"block\",\n            },\n        },\n      },\n    },\n    MuiSelect: {\n      styleOverrides: {\n        select: {\n          textTransform: \"capitalize\",\n        },\n      },\n    },\n    MuiFormControl: {\n      styleOverrides: {\n        root: {\n          padding: \"2px\",\n          \"& .MuiFormHelperText-root\": {\n            textAlign: \"left\",\n            margin: \"2px\",\n          },\n          \"& .MuiFormControl-root:has(.MuiSlider-root) label\": {\n            fontSize: \"0.75rem\",\n            textAlign: \"start\",\n          },\n        },\n      },\n    },\n  },\n});\n\nconst getTemplateVariables = (input) => {\n  const data = typeof input === \"string\" ? input : JSON.stringify(input);\n  const regex = /{{(.*?)}}/g;\n  const matches = data.matchAll(regex);\n  const keys = Array.from(matches, (m) => m[1]);\n  return keys;\n};\n// Parses given text and returns list of template keys defined as {{<template_key>}}\nconst getPromptValuesSchema = (input) => {\n  const keys = getTemplateVariables(input);\n  const schema = {\n    type: \"object\",\n    properties: {},\n  };\n  keys.forEach((key) => {\n    schema.properties[key] = {\n      type: \"string\",\n      title: key,\n    };\n  });\n  return schema;\n};\n\nexport function InputThemedForm(props) {\n  const [data, setData] = useRecoilState(inputValueState);\n\n  return (\n    <ThemedJsonForm\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={data}\n      validator={validator}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n      theme={theme}\n    ></ThemedJsonForm>\n  );\n}\n\nexport function TemplateVariablesThemedForm(props) {\n  const [data, setData] = useRecoilState(templateValueState);\n  const input = useRecoilValue(inputValueState);\n\n  return (\n    <ThemedJsonForm\n      schema={input && input !== \"\" ? getPromptValuesSchema(input) : {}}\n      uiSchema={props.uiSchema}\n      formData={data}\n      validator={validator}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n    >\n      <div></div>\n    </ThemedJsonForm>\n  );\n}\n\nexport default function InputForm(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  let schema = props.schema ? JSON.parse(JSON.stringify(props.schema)) : {};\n  let uiSchema = props.uiSchema\n    ? JSON.parse(JSON.stringify(props.uiSchema))\n    : {};\n  let input_form_label = props?.schema?.title\n    ? props?.schema?.title\n    : \"Input Form\";\n\n  if (props?.schema?.title) {\n    schema.title = \"\";\n    schema.description = \"\";\n  }\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Config form tabs\"\n          >\n            <Tab\n              label={input_form_label ? input_form_label : \"Input Form\"}\n              value=\"form\"\n            />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <InputThemedForm\n              schema={schema}\n              uiSchema={uiSchema}\n              submitBtn={props.submitBtn}\n            />\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import * as React from \"react\";\n\nimport { Box, Tab } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\n\nimport { useRecoilState } from \"recoil\";\nimport AceEditor from \"react-ace\";\nimport validator from \"@rjsf/validator-ajv8\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-chrome\";\n\nimport ThemedJsonForm from \"./ThemedJsonForm\";\nimport { endpointConfigValueState } from \"../data/atoms\";\nimport CustomObjectFieldTemplate from \"../components/ConfigurationFormObjectFieldTemplate\";\nimport { Empty as EmptyComponent } from \"../components/form/Empty\";\n\nexport function ThemedForm(props) {\n  const [data, setData] = useRecoilState(endpointConfigValueState);\n  return (\n    <ThemedJsonForm\n      schema={props.schema}\n      uiSchema={props.uiSchema}\n      formData={data}\n      onChange={({ formData }) => {\n        setData(formData);\n      }}\n      validator={validator}\n      templates={{ ObjectFieldTemplate: CustomObjectFieldTemplate }}\n    >\n      <div></div>\n    </ThemedJsonForm>\n  );\n}\n\nexport function ThemedJsonEditor() {\n  const [data, setData] = useRecoilState(endpointConfigValueState);\n\n  return (\n    <AceEditor\n      mode=\"json\"\n      theme=\"chrome\"\n      value={JSON.stringify(data, null, 2)}\n      onChange={(data) => {\n        setData(JSON.parse(data));\n      }}\n      editorProps={{ $blockScrolling: true }}\n      setOptions={{\n        useWorker: false,\n        showGutter: false,\n      }}\n    />\n  );\n}\n\nexport default function ConfigForm(props) {\n  const [value, setValue] = React.useState(\"form\");\n\n  let schema = props.schema ? JSON.parse(JSON.stringify(props.schema)) : {};\n\n  if (props?.schema?.title) {\n    schema.title = null;\n\n    schema.description = null;\n  }\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <TabList\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            aria-label=\"Config form tabs\"\n          >\n            <Tab label=\"Config Form\" value=\"form\" />\n            <Tab label=\"JSON\" value=\"json\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"form\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <ThemedForm schema={schema} uiSchema={props.uiSchema} />\n          )}\n        </TabPanel>\n        <TabPanel value=\"json\" sx={{ padding: \"4px\" }}>\n          {Object.keys(props.schema).length === 0 ? (\n            <EmptyComponent {...props} />\n          ) : (\n            <ThemedJsonEditor {...props} />\n          )}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport { Stack, Grid, Divider, Button as MuiButton } from \"@mui/material\";\n\nimport ApiBackendSelector from \"../components/ApiBackendSelector\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  apiBackendSelectedState,\n  endpointSelectedState,\n  endpointConfigValueState,\n  templateValueState,\n  isLoggedInState,\n  inputValueState,\n} from \"../data/atoms\";\nimport { axios } from \"../data/axios\";\nimport Output from \"../components/Output\";\n\nimport InputForm from \"../components/InputForm\";\nimport ConfigForm from \"../components/ConfigForm\";\n\nexport default function HomePage() {\n  const isLoggedIn = useRecoilValue(isLoggedInState);\n  const [input] = useRecoilState(inputValueState);\n\n  const [apiBackendSelected, setApiBackendSelected] = useRecoilState(\n    apiBackendSelectedState,\n  );\n  const [endpointSelected, setEndpointSelected] = useRecoilState(\n    endpointSelectedState,\n  );\n  const [paramValues, setParamValues] = useRecoilState(\n    endpointConfigValueState,\n  );\n  const [promptValues, setPromptValues] = useRecoilState(templateValueState);\n  const [output, setOutput] = useState(\"\");\n  const [runError, setRunError] = useState(\"\");\n  const [outputLoading, setOutputLoading] = useState(false);\n  const [tokenCount, setTokenCount] = useState(null);\n  const [processorResult, setProcessorResult] = useState(null);\n\n  const run = () => {\n    setRunError(\"\");\n    setOutputLoading(true);\n    axios()\n      .post(`/api/playground/run`, {\n        input: input,\n        config: paramValues,\n        bypass_cache: true,\n        api_backend_slug: apiBackendSelected.slug,\n        api_provider_slug: apiBackendSelected.api_provider.slug,\n      })\n      .then((response) => {\n        if (response?.data?.errors) {\n          setOutput(\"\");\n          setRunError(JSON.stringify(response?.data?.errors));\n        }\n\n        setProcessorResult(response?.data?.output);\n        if (response?.data?.output?.generations) {\n          setOutput(response?.data?.output?.generations);\n        } else if (response?.data?.output?.chat_completions) {\n          setOutput(response?.data?.output?.chat_completions);\n        } else {\n          setOutput([response?.data?.output]);\n        }\n\n        setOutputLoading(false);\n\n        // Update token count\n        if (\n          response?.data?.output?._response?.api_response?.usage !== undefined\n        ) {\n          if (\n            response?.data?.output?._response?.api_response?.usage\n              .prompt_tokens !== undefined &&\n            response?.data?.output?._response?.api_response?.usage\n              .completion_tokens !== undefined\n          ) {\n            setTokenCount(\n              `${response?.data?.output?._response?.api_response?.usage.total_tokens} (P${response?.data?.output?._response?.api_response?.usage.prompt_tokens} + C${response?.data?.output?._response?.api_response?.usage.completion_tokens})`,\n            );\n          } else if (\n            response?.data?.output?._response?.api_response?.usage\n              .total_tokens !== undefined\n          ) {\n            setTokenCount(\n              response?.data?.output?._response?.api_response?.usage\n                .total_tokens,\n            );\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setRunError(error?.response?.data || \"Failed to run given prompt\");\n        setOutputLoading(false);\n      });\n  };\n  const Run = () => {\n    return (\n      <MuiButton\n        type=\"primary\"\n        onClick={(e) => {\n          if (isLoggedIn) {\n            return run();\n          }\n        }}\n        variant=\"contained\"\n      >\n        {\"Run\"}\n      </MuiButton>\n    );\n  };\n\n  // Reset endpointSelected, apiBackendSelected, promptValues, paramValues and output on load\n  useEffect(() => {\n    setTokenCount(null);\n    setOutput(\"\");\n  }, [\n    setApiBackendSelected,\n    setEndpointSelected,\n    setParamValues,\n    setPromptValues,\n  ]);\n\n  useEffect(() => {}, [paramValues, promptValues]);\n\n  return (\n    <div\n      id=\"home-page\"\n      style={{ height: \"100%\", overflow: \"scroll\", padding: \"2px\" }}\n    >\n      <Stack\n        spacing={2}\n        divider={<Divider orientation=\"horizontal\" flexItem />}\n        sx={{ width: \"100%\", height: \"100%\", paddingTop: \"5px\" }}\n      >\n        <ApiBackendSelector />\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4} sx={{ height: \"100%\" }}>\n            <Stack spacing={2}>\n              <div style={{ height: \"10%\" }}>\n                <InputForm\n                  schema={\n                    apiBackendSelected ? apiBackendSelected.input_schema : {}\n                  }\n                  uiSchema={\n                    apiBackendSelected ? apiBackendSelected.input_ui_schema : {}\n                  }\n                  emptyMessage=\"Select your API Backend to see the parameters\"\n                />\n              </div>\n              <div>{apiBackendSelected && <Run />}</div>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <ConfigForm\n              schema={\n                apiBackendSelected ? apiBackendSelected.config_schema : {}\n              }\n              uiSchema={\n                apiBackendSelected ? apiBackendSelected.config_ui_schema : {}\n              }\n              formData={paramValues}\n              atomState={endpointConfigValueState}\n              emptyMessage=\"Select your API Backend to see the parameters\"\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Output\n              result={output}\n              endpoint={endpointSelected}\n              loading={outputLoading}\n              loadingTip={\"Running the input...\"}\n              runError={runError}\n              tokenCount={tokenCount}\n              schema={apiBackendSelected?.output_schema || {}}\n              uiSchema={apiBackendSelected?.output_ui_schema || {}}\n              formData={processorResult || {}}\n            />\n          </Grid>\n        </Grid>\n      </Stack>\n    </div>\n  );\n}\n"],"names":["ObjectFieldGrid","props","properties","disabled","readonly","uiSchema","schema","formData","onAddClick","registry","AddButton","templates","_jsxs","Grid","container","spacing","style","marginTop","children","map","element","index","hidden","content","_jsx","item","xs","marginBottom","canExpand","justifyContent","className","onClick","RootObjectFieldTemplate","requiredProperties","optionalProperties","forEach","prop","name","push","_Fragment","_objectSpread","Divider","margin","length","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","marginLeft","AccordionDetails","CustomObjectFieldTemplate","idSchema","$id","outputTheme","createTheme","typography","fontFamily","fontSize","color","components","MuiFormControl","styleOverrides","root","MuiImageList","width","height","MuiListItemText","whiteSpace","MuiImageListItem","img","Errors","_props$runError","errors","runError","List","error","ListItem","Alert","severity","Result","api_response","Object","keys","ThemedJsonForm","validator","theme","Empty","emptyMessage","Output","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","Box","sx","TabContext","borderBottom","borderColor","TabList","onChange","event","newValue","Tab","label","TabPanel","padding","loading","CircularProgress","_ref","emptyImage","_objectWithoutProperties","_excluded","display","flexDirection","alignItems","Typography","variant","ApiBackendSelector","apiprovidersDropdown","useRecoilValue","apiProviderDropdownListState","apibackendsDropdown","apiBackendDropdownListState","apibackends","apiBackendsState","resetEndpointSelected","useResetRecoilState","endpointSelectedState","setendpointConfigValueState","useSetRecoilState","endpointConfigValueState","resetInputValueState","inputValueState","resetEndpointConfigValueState","_useRecoilState","useRecoilState","apiProviderSelectedState","_useRecoilState2","apiProviderSelected","setApiProviderSelected","_useRecoilState3","apiBackendSelectedState","_useRecoilState4","apiBackendSelected","setApiBackendSelected","useEffect","_apibackends$find","find","backend","id","api_provider","direction","minWidth","FormControl","fullWidth","InputLabel","Select","e","target","option","MenuItem","filter","x","provider","MuiTextField","defaultProps","MuiPaper","overflow","textAlign","font","fontWeight","MuiSelect","select","textTransform","InputThemedForm","data","setData","InputForm","_props$schema","_props$schema2","_props$schema3","JSON","parse","stringify","input_form_label","title","description","EmptyComponent","submitBtn","ThemedForm","ObjectFieldTemplate","ThemedJsonEditor","AceEditor","mode","editorProps","$blockScrolling","setOptions","useWorker","showGutter","ConfigForm","HomePage","isLoggedIn","isLoggedInState","input","_useRecoilState5","_useRecoilState6","endpointSelected","setEndpointSelected","_useRecoilState7","_useRecoilState8","paramValues","setParamValues","_useRecoilState9","templateValueState","_useRecoilState10","promptValues","setPromptValues","_useState","useState","_useState2","output","setOutput","_useState3","_useState4","setRunError","_useState5","_useState6","outputLoading","setOutputLoading","_useState7","_useState8","tokenCount","setTokenCount","_useState9","_useState10","processorResult","setProcessorResult","Run","MuiButton","type","axios","post","config","bypass_cache","api_backend_slug","slug","api_provider_slug","then","response","_response$data","_response$data3","_response$data4","_response$data4$outpu","_response$data6","_response$data6$outpu","_response$data9","_response$data9$outpu","_response$data9$outpu2","_response$data9$outpu3","_response$data2","_response$data5","_response$data5$outpu","_response$data10","_response$data10$outp","_response$data10$outp2","_response$data10$outp3","_response$data11","_response$data11$outp","_response$data11$outp2","_response$data11$outp3","_response$data15","_response$data15$outp","_response$data15$outp2","_response$data15$outp3","_response$data12","_response$data12$outp","_response$data12$outp2","_response$data12$outp3","_response$data13","_response$data13$outp","_response$data13$outp2","_response$data13$outp3","_response$data14","_response$data14$outp","_response$data14$outp2","_response$data14$outp3","generations","chat_completions","_response$data7","_response$data7$outpu","_response$data8","undefined","_response","usage","prompt_tokens","completion_tokens","concat","total_tokens","_response$data16","_response$data16$outp","_response$data16$outp2","_response$data16$outp3","catch","_error$response","console","Stack","divider","orientation","flexItem","paddingTop","md","input_schema","input_ui_schema","config_schema","config_ui_schema","atomState","result","endpoint","loadingTip","output_schema","output_ui_schema"],"sourceRoot":""}