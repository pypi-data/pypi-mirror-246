# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: PyPI

on:
  release:
    types: [created]

jobs:
  deploy-src:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine build
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build --sdist .
        twine upload dist/*

  deploy-linux-wheel:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Install GCC-7
      run: |
        sudo apt update
        sudo apt install gcc-7 g++-7
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel auditwheel twine build patchelf
    - name: Build and publish
      env:
        CC: gcc-7
        CXX: g++-7
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build --wheel .
        auditwheel repair --plat manylinux_2_31_x86_64 dist/*.whl
        mv wheelhouse/* dist
        rm dist/*-linux_x86_64.whl
        twine upload dist/*

  deploy-mac-wheel:

    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel auditwheel twine build
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m build --wheel .
          twine upload dist/*

  deploy-windows-wheel:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Download Build Tools for Visual Studio 2019
      run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe
    - name: Run vs_buildtools.exe install
      run: ./vs_buildtools.exe --quiet --wait --norestart --nocache ^
                               --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 ^
                               --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 ^
                               --add Microsoft.VisualStudio.Component.VC.140 ^
                               --includeRecommended
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine build
    - name: Build and publish
      env:
        PYASCORE_COMPILE_ARGS: "/std:c++latest /d2FH4-"
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build --wheel .
        twine upload dist/*
