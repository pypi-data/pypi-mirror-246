# Generated by ariadne-codegen
# Source: ../../dist/schema.graphql

from datetime import datetime
from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel, Upload
from .enums import (
    DeviceLocationOrderField,
    DeviceOrderField,
    DeviceSystemResourceMetricsOrderField,
    FireIncidentOrderField,
    OrderDirection,
    OrganizationOrderField,
    Role,
    UserOrderField,
)


class CreateDeviceAccessTokenInput(BaseModel):
    device_id: str = Field(alias="deviceId")


class CreateDeviceInput(BaseModel):
    name: Optional[str] = None
    organization_id: str = Field(alias="organizationId")


class CreateDeviceLocationInput(BaseModel):
    device_id: str = Field(alias="deviceId")
    latitude: Any
    longitude: Any
    timestamp: datetime


class CreateDeviceSystemResourceMetricsInput(BaseModel):
    cpu_temperature: float = Field(alias="cpuTemperature")
    cpu_usage: float = Field(alias="cpuUsage")
    device_id: str = Field(alias="deviceId")
    disk_usage: float = Field(alias="diskUsage")
    online_since: datetime = Field(alias="onlineSince")
    ram_usage: float = Field(alias="ramUsage")
    timestamp: datetime


class CreateFireIncidentInput(BaseModel):
    annotated_rgb_image: Optional[Upload] = Field(
        alias="annotatedRgbImage", default=None
    )
    annotated_thermal_image: Optional[Upload] = Field(
        alias="annotatedThermalImage", default=None
    )
    device_id: str = Field(alias="deviceId")
    has_fire: float = Field(alias="hasFire")
    has_fire_hazard: float = Field(alias="hasFireHazard")
    overlay_image: Optional[Upload] = Field(alias="overlayImage", default=None)
    rgb_image: Optional[Upload] = Field(alias="rgbImage", default=None)
    rgb_video: Optional[Upload] = Field(alias="rgbVideo", default=None)
    thermal_image: Optional[Upload] = Field(alias="thermalImage", default=None)
    thermal_video: Optional[Upload] = Field(alias="thermalVideo", default=None)
    timestamp: datetime


class CreateOrganizationInput(BaseModel):
    name: str


class CreateOrganizationMembershipInput(BaseModel):
    organization_id: str = Field(alias="organizationId")
    user_id: str = Field(alias="userId")


class CreateUserInput(BaseModel):
    email: str
    firstname: Optional[str] = None
    lastname: Optional[str] = None
    role: Role


class DeleteDeviceAccessTokenInput(BaseModel):
    id: str


class DeviceLocationOrder(BaseModel):
    direction: OrderDirection
    field: DeviceLocationOrderField


class DeviceLocationWhereInput(BaseModel):
    device_id: Optional[str] = Field(alias="deviceId", default=None)


class DeviceOrder(BaseModel):
    direction: OrderDirection
    field: DeviceOrderField


class DeviceSystemResourceMetricsOrder(BaseModel):
    direction: OrderDirection
    field: DeviceSystemResourceMetricsOrderField


class DeviceSystemResourceMetricsWhere(BaseModel):
    device_id: str = Field(alias="deviceId")


class FireIncidentOrder(BaseModel):
    direction: OrderDirection
    field: FireIncidentOrderField


class OrganizationOrder(BaseModel):
    direction: OrderDirection
    field: OrganizationOrderField


class UpdateDeviceInput(BaseModel):
    name: Optional[str] = None


class UpdateDeviceLocationInput(BaseModel):
    latitude: Optional[Any] = None
    longitude: Optional[Any] = None
    timestamp: Optional[datetime] = None


class UpdateDeviceSystemResourceMetricsInput(BaseModel):
    cpu_temperature: Optional[float] = Field(alias="cpuTemperature", default=None)
    cpu_usage: Optional[float] = Field(alias="cpuUsage", default=None)
    disk_usage: Optional[float] = Field(alias="diskUsage", default=None)
    ram_usage: Optional[float] = Field(alias="ramUsage", default=None)
    timestamp: Optional[datetime] = None


class UpdateFireIncidentInput(BaseModel):
    annotated_rgb_image: Optional[Upload] = Field(
        alias="annotatedRgbImage", default=None
    )
    annotated_thermal_image: Optional[Upload] = Field(
        alias="annotatedThermalImage", default=None
    )
    has_fire: Optional[float] = Field(alias="hasFire", default=None)
    has_fire_hazard: Optional[float] = Field(alias="hasFireHazard", default=None)
    id: str
    overlay_image: Optional[Upload] = Field(alias="overlayImage", default=None)
    rgb_image: Optional[Upload] = Field(alias="rgbImage", default=None)
    rgb_video: Optional[Upload] = Field(alias="rgbVideo", default=None)
    thermal_image: Optional[Upload] = Field(alias="thermalImage", default=None)
    thermal_video: Optional[Upload] = Field(alias="thermalVideo", default=None)


class UpdateOrganizationInput(BaseModel):
    name: Optional[str] = None


class UpdateUserInput(BaseModel):
    id: str
    role: Optional[Role] = None


class UserOrder(BaseModel):
    direction: OrderDirection
    field: UserOrderField
