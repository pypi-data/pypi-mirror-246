import{b3 as h,d as b,R as k,U as v,X as I,I as N,ah as S,g as x,j as B,u as e,c as D,k as m,a as F,o as U,n as p,b4 as J,b5 as O,b6 as T,ac as d,b7 as V,b1 as i}from"./index-GJzhUb-m.js";import{u as P}from"./usePageTitle-jPdynRKY.js";class $ extends h{parse(t){return JSON.parse(decodeURIComponent(t??""))}format(t){return encodeURIComponent(JSON.stringify(t))}}const M=b({__name:"FlowRunCreate",setup(f){const t=k(),n=v("deploymentId"),s=I(),y=N("parameters",$,void 0),{deployment:o}=S(n),R=async r=>{var l,a;try{const c=await t.deployments.createDeploymentFlowRun(n.value,r),u=((a=(l=r.state)==null?void 0:l.stateDetails)==null?void 0:a.scheduledTime)??void 0,C=!u,g=V(T,{flowRun:c,flowRunRoute:d.flowRun,router:s,immediate:C,startTime:u});i(g,"success"),s.push(d.deployment(n.value))}catch(c){i("Something went wrong trying to create a flow run","error"),console.error(c)}},_=()=>{s.back()},w=x(()=>o.value?`Create Flow Run for Deployment: ${o.value.name}`:"Create Flow Run for Deployment");return P(w),(r,l)=>{const a=B("p-layout-default");return e(o)?(U(),D(a,{key:0},{header:m(()=>[p(e(J),{deployment:e(o)},null,8,["deployment"])]),default:m(()=>[p(e(O),{deployment:e(o),parameters:e(y),onSubmit:R,onCancel:_},null,8,["deployment","parameters"])]),_:1})):F("",!0)}}});export{M as default};
