Metadata-Version: 2.1
Name: tt4human
Version: 0.2.2
Summary: Truth table evaluator and Truth table enum module generator.
Home-page: https://github.com/MacHu-GWU/tt4human-project
Download-URL: https://pypi.python.org/pypi/tt4human/0.2.2#downloads
Author: Sanhe Hu
Author-email: husanhe@gmail.com
Maintainer: Sanhe Hu
Maintainer-email: husanhe@gmail.com
License: MIT
Platform: Windows
Platform: MacOS
Platform: Unix
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
License-File: LICENSE.txt
License-File: AUTHORS.rst
Requires-Dist: cached-property >=1.5.2 ; python_version < "3.8"
Requires-Dist: dataclasses >=0.8 ; python_version == "3.6"
Provides-Extra: docs
Requires-Dist: Sphinx ==5.3.0 ; extra == 'docs'
Requires-Dist: sphinx-jinja ==2.0.2 ; extra == 'docs'
Requires-Dist: sphinx-copybutton ==0.5.1 ; extra == 'docs'
Requires-Dist: sphinx-design ==0.5.0 ; extra == 'docs'
Requires-Dist: furo ==2023.03.27 ; extra == 'docs'
Requires-Dist: nbsphinx ==0.8.12 ; extra == 'docs'
Requires-Dist: rstobj ==1.2.1 ; extra == 'docs'
Requires-Dist: pygments ==2.15.1 ; extra == 'docs'
Requires-Dist: ipython ==8.10.0 ; extra == 'docs'
Requires-Dist: docfly ==2.0.1 ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: pytest-cov ; extra == 'tests'


.. .. image:: https://readthedocs.org/projects/tt4human/badge/?version=latest
    :target: https://tt4human.readthedocs.io/en/latest/
    :alt: Documentation Status

.. image:: https://github.com/MacHu-GWU/tt4human-project/workflows/CI/badge.svg
    :target: https://github.com/MacHu-GWU/tt4human-project/actions?query=workflow:CI

.. .. image:: https://codecov.io/gh/MacHu-GWU/tt4human-project/branch/main/graph/badge.svg
    :target: https://codecov.io/gh/MacHu-GWU/tt4human-project

.. image:: https://img.shields.io/pypi/v/tt4human.svg
    :target: https://pypi.python.org/pypi/tt4human

.. image:: https://img.shields.io/pypi/l/tt4human.svg
    :target: https://pypi.python.org/pypi/tt4human

.. image:: https://img.shields.io/pypi/pyversions/tt4human.svg
    :target: https://pypi.python.org/pypi/tt4human

.. image:: https://img.shields.io/badge/Release_History!--None.svg?style=social
    :target: https://github.com/MacHu-GWU/tt4human-project/blob/main/release-history.rst

.. image:: https://img.shields.io/badge/STAR_Me_on_GitHub!--None.svg?style=social
    :target: https://github.com/MacHu-GWU/tt4human-project

------

.. .. image:: https://img.shields.io/badge/Link-Document-blue.svg
    :target: https://tt4human.readthedocs.io/en/latest/

.. .. image:: https://img.shields.io/badge/Link-API-blue.svg
    :target: https://tt4human.readthedocs.io/en/latest/py-modindex.html

.. image:: https://img.shields.io/badge/Link-Install-blue.svg
    :target: `install`_

.. image:: https://img.shields.io/badge/Link-GitHub-blue.svg
    :target: https://github.com/MacHu-GWU/tt4human-project

.. image:: https://img.shields.io/badge/Link-Submit_Issue-blue.svg
    :target: https://github.com/MacHu-GWU/tt4human-project/issues

.. image:: https://img.shields.io/badge/Link-Request_Feature-blue.svg
    :target: https://github.com/MacHu-GWU/tt4human-project/issues

.. image:: https://img.shields.io/badge/Link-Download-blue.svg
    :target: https://pypi.org/pypi/tt4human#files


Welcome to ``tt4human`` Documentation
==============================================================================
`Truth Table <https://en.wikipedia.org/wiki/Truth_table>`_ is a lookup table that can return a boolean value by given a set of conditions. A set of conditions is called a **case**.

For example, we have two types of conditions: ``weather`` and ``get_up`` (when you get up). And we want to determine if you will go out. ``weather`` has two possible values: ``is_sunny`` and ``not_sunny``. ``get_up`` has three possible values: ``before_10``, ``10_to_2``, ``after_2``.

Below is the truth table::

    weather	    get_up	    go_out
    is_sunny	before_10	1
    is_sunny	10_to_2	    1
    is_sunny	after_2	    0
    not_sunny	before_10	0
    not_sunny	10_to_2	    0
    not_sunny	after_2	    0

**Feature 1, truth table evaluator**

the ``tt4human`` Python library can read truth table data from csv/tsv file and evaluate the truth table by the given case.

.. code-block:: python

    >>> from tt4human.api import TruthTable
    >>> tt = TruthTable.from_csv(dir_unit_test.joinpath("go_out.tsv"))
    >>> tt.evaluate(case=dict(weather="is_sunny", get_up="before_10"))
    True

**Feature 2, Truth table enum module generator**

You may want to create a Python module that contains all the condition enum and the initialized ``TruthTable`` instance. So that you can drop them to your code base and use them directly.

.. code-block:: python

    >>> from tt4human.api import TruthTable
    >>> from pathlib import Path
    >>> tt = TruthTable.from_csv(dir_unit_test.joinpath("go_out.tsv"))
    >>> tt.generate_module(
    ...     dir_path=Path("/path/to/your/project/folder),
    ...     module_name="do_you_go_out",
    ...     overwrite=False,
    ... )

Then it will create a ``do_you_go_out.tsv`` file::

    weather	    get_up	    go_out
    is_sunny	before_10	1
    is_sunny	10_to_2	    1
    is_sunny	after_2	    0
    not_sunny	before_10	0
    not_sunny	10_to_2	    0
    not_sunny	after_2	    0

And create a ``do_you_go_out.py`` file:

.. code-block:: python

    # -*- coding: utf-8 -*-

    """
    this module is generated by https://pypi.org/project/tt4human = 0.1.1
    """

    from pathlib import Path
    from tt4human.api import BetterStrEnum, TruthTable


    class WeatherEnum(BetterStrEnum):
        is_sunny = "is_sunny"
        not_sunny = "not_sunny"


    class GetUpEnum(BetterStrEnum):
        before_10 = "before_10"
        _10_to_2 = "10_to_2"
        after_2 = "after_2"


    truth_table = TruthTable.from_csv(
        path=Path(__file__).absolute().parent.joinpath("do_you_go_out.tsv"),
    )

    if __name__ == "__main__":
        assert truth_table.evaluate(case={'weather': 'is_sunny', 'get_up': 'before_10'}) is True



.. _install:

Install
------------------------------------------------------------------------------

``tt4human`` is released on PyPI, so all you need is to:

.. code-block:: console

    $ pip install tt4human

To upgrade to latest version:

.. code-block:: console

    $ pip install --upgrade tt4human
