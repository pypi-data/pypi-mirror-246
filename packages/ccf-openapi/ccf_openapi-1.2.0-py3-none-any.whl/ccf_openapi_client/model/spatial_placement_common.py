# coding: utf-8

"""
    HRA-API

    This API provides programmatic access to data registered to the Human Reference Atlas (HRA). See the [HuBMAP HRA Portal](https://humanatlas.io/) for details.   # noqa: E501

    The version of the OpenAPI document: 1.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ccf_openapi_client import schemas  # noqa: F401


class SpatialPlacementCommon(
    schemas.ComposedBase,
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    A Spatial Placement defines how to place a Spatial Entity or Spatial Object Reference relative to another Spatial Entity. It says how to scale, rotate, and translate (in that order) a Spatial Entity or Spatial Object Reference so that it is placed relative to another Spatial Entity.
    """


    class MetaOapg:
        required = {
            "target",
        }
        
        class properties:
            placement_date = schemas.DateSchema
            __annotations__ = {
                "placement_date": placement_date,
            }
        additional_properties = schemas.AnyTypeSchema
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                JsonLdObject,
                SpatialPlacementTranslation,
                SpatialPlacementRotation,
                SpatialPlacementScaling,
            ]

    
    target: MetaOapg.additional_properties
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["target"]) -> MetaOapg.additional_properties: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["placement_date"]) -> MetaOapg.properties.placement_date: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> MetaOapg.additional_properties: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["target"], typing_extensions.Literal["placement_date"], str, ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["target"]) -> MetaOapg.additional_properties: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["placement_date"]) -> typing.Union[MetaOapg.properties.placement_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[MetaOapg.additional_properties, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["target"], typing_extensions.Literal["placement_date"], str, ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        placement_date: typing.Union[MetaOapg.properties.placement_date, str, date, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
    ) -> 'SpatialPlacementCommon':
        return super().__new__(
            cls,
            *_args,
            placement_date=placement_date,
            _configuration=_configuration,
            **kwargs,
        )

from ccf_openapi_client.model.json_ld_object import JsonLdObject
from ccf_openapi_client.model.spatial_placement_rotation import SpatialPlacementRotation
from ccf_openapi_client.model.spatial_placement_scaling import SpatialPlacementScaling
from ccf_openapi_client.model.spatial_placement_translation import SpatialPlacementTranslation
