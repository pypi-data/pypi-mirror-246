# coding: utf-8

"""
    HRA-API

    This API provides programmatic access to data registered to the Human Reference Atlas (HRA). See the [HuBMAP HRA Portal](https://humanatlas.io/) for details.   # noqa: E501

    The version of the OpenAPI document: 1.2.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ccf_openapi_client import schemas  # noqa: F401


class SpatialEntityCreator(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Describes by whom and when an entity object was created.
    """


    class MetaOapg:
        
        class properties:
            creator = schemas.StrSchema
            creator_first_name = schemas.StrSchema
            creator_last_name = schemas.StrSchema
            creator_orcid = schemas.StrSchema
            creation_date = schemas.DateSchema
            __annotations__ = {
                "creator": creator,
                "creator_first_name": creator_first_name,
                "creator_last_name": creator_last_name,
                "creator_orcid": creator_orcid,
                "creation_date": creation_date,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creator"]) -> MetaOapg.properties.creator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creator_first_name"]) -> MetaOapg.properties.creator_first_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creator_last_name"]) -> MetaOapg.properties.creator_last_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creator_orcid"]) -> MetaOapg.properties.creator_orcid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creation_date"]) -> MetaOapg.properties.creation_date: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["creator", "creator_first_name", "creator_last_name", "creator_orcid", "creation_date", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creator"]) -> typing.Union[MetaOapg.properties.creator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creator_first_name"]) -> typing.Union[MetaOapg.properties.creator_first_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creator_last_name"]) -> typing.Union[MetaOapg.properties.creator_last_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creator_orcid"]) -> typing.Union[MetaOapg.properties.creator_orcid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creation_date"]) -> typing.Union[MetaOapg.properties.creation_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["creator", "creator_first_name", "creator_last_name", "creator_orcid", "creation_date", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        creator: typing.Union[MetaOapg.properties.creator, str, schemas.Unset] = schemas.unset,
        creator_first_name: typing.Union[MetaOapg.properties.creator_first_name, str, schemas.Unset] = schemas.unset,
        creator_last_name: typing.Union[MetaOapg.properties.creator_last_name, str, schemas.Unset] = schemas.unset,
        creator_orcid: typing.Union[MetaOapg.properties.creator_orcid, str, schemas.Unset] = schemas.unset,
        creation_date: typing.Union[MetaOapg.properties.creation_date, str, date, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SpatialEntityCreator':
        return super().__new__(
            cls,
            *_args,
            creator=creator,
            creator_first_name=creator_first_name,
            creator_last_name=creator_last_name,
            creator_orcid=creator_orcid,
            creation_date=creation_date,
            _configuration=_configuration,
            **kwargs,
        )
