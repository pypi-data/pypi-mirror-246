{"version":3,"file":"main.DashboardItems_SiteContext.a0f7821ce9ae8d6e3018.js","mappings":"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","sources":["webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://lino_react/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://lino_react/./lino_react/react/components/DataProvider.jsx","webpack://lino_react/./lino_react/react/components/DashboardItems.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const name = \"DataProvider\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as constants from './constants';\nimport { RegisterImportPool, Component } from \"./Base\";\n\nlet ex; const exModulePromises = ex = {\n    queryString: import(/* webpackChunkName: \"queryString_DataProvider\" */\"query-string\"),\n    AbortController: import(/* webpackChunkName: \"AbortController_DataProvider\" */\"abort-controller\"),\n    whatwgFetch: import(/* webpackChunkName: \"whatwgFetch_DataProvider\" */\"whatwg-fetch\"),\n    prProgressSpinner: import(/* webpackChunkName: \"prProgressSpinner_DataProvider\" */\"primereact/progressspinner\"),\n    lm: import(/* webpackChunkName: \"LoadingMask_DataProvider\" */\"./LoadingMask\"),\n}\nRegisterImportPool(ex);\n\n\nexport class DataProvider extends Component {\n    static requiredModules = [\n        'queryString', \"AbortController\", \"whatwgFetch\", \"prProgressSpinner\",\n        \"lm\"]\n\n    static iPool = ex;\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n        render: PropTypes.func.isRequired,\n        post_data: PropTypes.func,\n        hideLoading: PropTypes.bool,\n        useEverLoaded: PropTypes.bool,\n\n    };\n    static defaultProps = {\n        post_data: (data) => (data),\n        hideLoading: false,\n        useEverLoaded: false,\n    };\n\n    constructor() {\n        super();\n        this.state = {\n            ...this.state,\n            data: [],\n            loaded: false,\n            placeholder: \"Loading...\"\n        };\n        this.reloadData = this.reloadData.bind(this);\n        this.reload = this.reloadData;\n    }\n\n    onReady() {\n        this.controller = new this.ex.AbortController.default();\n        this.reloadData();\n    }\n\n    componentWillUnmount() {\n        this.controller.abort();\n    }\n\n    reloadData() {\n        this.setState({loaded: false});\n        let query = {fmt: \"json\"}\n        window.App.add_su(query);\n        query[constants.URL_PARAM_LINO_VERSION] = window.App.state.site_data.revision_number;\n        query[constants.URL_PARAM_USER_LANGUAGE] = window.App.data.selectedLanguage || window.App.state.user_settings.lang;\n        this.ex.whatwgFetch.fetch(this.props.endpoint + `?${this.ex.queryString.stringify(query)}`, {\n            signal: this.controller.signal})\n            .then(response => {\n                if (response.status !== 200) {\n                    this.setState({placeholder: \"Something went wrong\"});\n                    return {status:response.status$} //\n                }\n                return response.json();\n            })\n            .then(data => {\n                this.props.post_data(data);\n                this.setState({data: data, loaded: true, everloaded: true});\n            }).catch(function(ex) {\n              if (ex.name === 'AbortError') {\n                console.log('request aborted', ex)\n              }\n            })\n    };\n\n    render() {\n        if (!this.state.ready) return null;\n        const {data, loaded, placeholder, everloaded} = this.state;\n        const {render} = this.props;\n        // const Comp = \"Table\";\n        // return loaded ? this.props.render(data, Comp) : <p>{placeholder}</p>;\n        if (everloaded && !loaded) {\n            // is loading with data, use loading mask\n            return <this.ex.lm.LoadingMask mask={true}>\n                {render(data)}\n            </this.ex.lm.LoadingMask>\n        }\n        else {\n            return <this.ex.lm.LoadingMask mask={false}>\n                {loaded || everloaded && this.props.useEverLoaded\n                    ? render(data) : this.props.hideLoading ? <div/> : <this.ex.prProgressSpinner.ProgressSpinner/>}\n            </this.ex.lm.LoadingMask>\n        }\n    }\n}\n","export const name = \"DashboardItems\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RegisterImportPool, Component } from \"./Base\";\n\nimport { DataProvider } from \"./DataProvider\";\n\nlet ex; const exModulePromises = ex = {\n    prButton: import(/* webpackChunkName: \"prButton_DashboardItems\" */\"primereact/button\"),\n    lm: import(/* webpackChunkName: \"LoadingMask_DashboardItems\" */\"./LoadingMask\"),\n}\nRegisterImportPool(ex);\n\n\nexport class DashboardItems extends Component {\n    static requiredModules = [\"prButton\", \"lm\"];\n    static iPool = ex;\n    static propTypes = {\n        // dashboard_items: PropTypes.number.\n        user: PropTypes.string\n    };\n    static defaultProps = {\n        P: 0\n    };\n\n    constructor() {\n        super();\n        this.state = {\n            ...this.state,\n            stamp: Date(),\n            unloaded: true,\n        };\n        // this.method = this.method.bind(this);\n        this.reloadData = this.reload;\n        this.onDataGet = this.onDataGet.bind(this)\n    }\n\n    // method() {return this.props.}\n\n    reload() {\n        // this.setState({ // Set new stamp forcing reloading of each DP\n        //     stamp:Date()\n        // });\n        Object.keys(window.App.rps).filter(k => k.includes(\"dashboard\")).forEach(d => {\n            window.App.rps[d].reload();\n        })\n    }\n\n    onDataGet(d) {\n        this.setState({\n            unloaded: false\n        })\n    }\n\n    renderDashboard(showReloadButton, rp) {\n        return (data) => {\n            if (data.version_mismatch && rp === \"dashboard-0\") {\n                window.App.reset(null, true);\n                return\n            }\n            if (data.html) {\n                return <div>\n                    {showReloadButton && <this.ex.prButton.Button icon={\"pi pi-refresh\"} style={{float:\"right\"}} onClick={() => {\n                        let dp = window.App.rps[rp];\n                        dp && dp.reload();\n                    }\n                    }/>}\n                    <div dangerouslySetInnerHTML={{__html: data.html}}></div>\n                </div>\n            }\n        }\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        const S = this.state;\n        const P = this.props;\n        let len = P.dashboard_items;\n        if (len === undefined) {\n            len = 0\n        }\n        // const Comp = \"Table\";\n        // return loaded ? this.props.render(data, Comp) : <p>{placeholder}</p>;\n        return <this.ex.lm.LoadingMask mask={S.unloaded} fillHeight={true} backgroundColor={\"\"}>\n            <DataProvider\n                ref={(el) => {\n                    window.App.setRpRef(el, `dashboard-main`)\n                }}\n                key={`${P.user}-${S.stamp}`}\n                endpoint={\"api/main_html\"}\n                useEverLoaded={true}\n                hideLoading={true}\n                post_data={this.onDataGet}\n                render={this.renderDashboard(false, `dashboard-main`)}\n            />\n            {[...Array(len).keys()].map(i =>\n                <DataProvider\n                    key={`${P.user}-${i}-${S.stamp}`}\n                    ref={(el) => {\n                        window.App.setRpRef(el, `dashboard-${i}`)\n                    }}\n                    endpoint={`dashboard/${i}`}\n                    post_data={this.onDataGet}\n                    hideLoading={true}\n                    render={this.renderDashboard(true, `dashboard-${i}`)}\n                />)\n            }\n        </this.ex.lm.LoadingMask>\n    }\n}\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","arrayWithoutHoles","iter","Symbol","iterator","from","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","ex","queryString","AbortController","whatwgFetch","prProgressSpinner","lm","RegisterImportPool","DataProvider","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","_objectSpread","data","loaded","placeholder","reloadData","bind","_assertThisInitialized","reload","_createClass","key","value","this","controller","abort","_this2","setState","query","fmt","window","App","add_su","constants","URL_PARAM_LINO_VERSION","site_data","revision_number","URL_PARAM_USER_LANGUAGE","selectedLanguage","user_settings","lang","fetch","props","endpoint","concat","stringify","signal","then","response","status","status$","json","post_data","everloaded","name","console","log","ready","_this$state","render","React","LoadingMask","mask","useEverLoaded","hideLoading","ProgressSpinner","Component","requiredModules","iPool","propTypes","PropTypes","isRequired","defaultProps","prButton","DashboardItems","stamp","Date","unloaded","onDataGet","Object","keys","rps","filter","k","includes","forEach","d","showReloadButton","rp","version_mismatch","html","Button","icon","style","float","onClick","dp","dangerouslySetInnerHTML","__html","reset","_this3","S","P","len","dashboard_items","undefined","fillHeight","backgroundColor","ref","el","setRpRef","user","renderDashboard","map","i"],"sourceRoot":""}