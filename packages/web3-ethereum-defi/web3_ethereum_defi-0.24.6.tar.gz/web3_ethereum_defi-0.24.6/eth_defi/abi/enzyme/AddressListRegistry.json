{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dispatcher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "item",
          "type": "address"
        }
      ],
      "name": "ItemAddedToList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "item",
          "type": "address"
        }
      ],
      "name": "ItemRemovedFromList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ListAttested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "updateType",
          "type": "uint8"
        }
      ],
      "name": "ListCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nextOwner",
          "type": "address"
        }
      ],
      "name": "ListOwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "prevUpdateType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "nextUpdateType",
          "type": "uint8"
        }
      ],
      "name": "ListUpdateTypeSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "addToList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "areAllInAllLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInAllLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "areAllInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "areAllInSomeOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInSomeOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "areAllNotInAnyOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllNotInAnyOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "areAllNotInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllNotInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_descriptions",
          "type": "string[]"
        }
      ],
      "name": "attestLists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "_updateType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_initialItems",
          "type": "address[]"
        }
      ],
      "name": "createList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDispatcher",
      "outputs": [
        {
          "internalType": "address",
          "name": "dispatcher_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getListOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getListUpdateType",
      "outputs": [
        {
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "updateType_",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_item",
          "type": "address"
        }
      ],
      "name": "isInAllLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInAllLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_item",
          "type": "address"
        }
      ],
      "name": "isInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "_item",
          "type": "address"
        }
      ],
      "name": "isInSomeOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInSomeOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_items",
          "type": "address[]"
        }
      ],
      "name": "removeFromList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        }
      ],
      "name": "setListOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "enum AddressListRegistry.UpdateType",
          "name": "_nextUpdateType",
          "type": "uint8"
        }
      ],
      "name": "setListUpdateType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620015dd380380620015dd8339810160408190526200003491620000ef565b606081901b6001600160601b031916608052604080518082019091526000808252602082018181528154600181018355918052825160029092027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b039093166001600160a01b031990931692909217808355905190829060ff60a01b1916600160a01b836003811115620000ce57fe5b021790555050505062000144565b8051620000e9816200012a565b92915050565b6000602082840312156200010257600080fd5b6000620001108484620000dc565b949350505050565b60006001600160a01b038216620000e9565b620001358162000118565b81146200014157600080fd5b50565b60805160601c61147b62000162600039806109c0525061147b6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806375674f46116100a2578063afc8dd6111610071578063afc8dd6114610246578063b426f94614610259578063be68406e1461026c578063ebb3d5891461027f578063ee4483dc1461028757610116565b806375674f46146101fa5780638da3d7361461020d578063956e8faa14610220578063abdf62151461023357610116565b806330bdd386116100e957806330bdd3861461018c5780633a6914fe1461019f5780634446fe37146101b257806351d3a322146101c5578063539f2ab4146101da57610116565b8063107df6c51461011b57806319bcc938146101445780631c563204146101645780632ce37b1014610177575b600080fd5b61012e610129366004610f55565b61029a565b60405161013b9190611288565b60405180910390f35b610157610152366004610fb4565b6102e6565b60405161013b919061127a565b61012e610172366004610fd2565b610316565b61017f610358565b60405161013b9190611316565b61012e61019a366004610f55565b61035e565b61012e6101ad366004610f55565b61039e565b61012e6101c0366004611047565b6103d2565b6101d86101d3366004610ff1565b610413565b005b6101ed6101e8366004610fb4565b610599565b60405161013b9190611296565b61012e610208366004610f04565b6105c8565b6101d861021b366004610ff1565b610613565b6101d861022e366004610fd2565b6106cc565b61012e610241366004611047565b61075c565b61012e610254366004610f04565b61078f565b6101d8610267366004610eac565b6107c1565b61017f61027a366004610e44565b610893565b6101576109be565b6101d8610295366004611066565b6109e2565b6000805b82518110156102da576102c4848483815181106102b757fe5b602002602001015161078f565b6102d25760009150506102e0565b60010161029e565b50600190505b92915050565b60008082815481106102f457fe5b60009182526020909120600290910201546001600160a01b031690505b919050565b600080838154811061032457fe5b600091825260208083206001600160a01b03861684526001600290930201919091019052604090205460ff16905092915050565b60005490565b6000805b82518110156102da576103888484838151811061037b57fe5b60200260200101516105c8565b6103965760009150506102e0565b600101610362565b6000805b82518110156102da576103bb8484838151811061037b57fe5b156103ca5760009150506102e0565b6001016103a2565b6000805b82518110156102da576103fc848483815181106103ef57fe5b6020026020010151610316565b1561040b5760009150506102e0565b6001016103d6565b8261041e3382610ade565b6104435760405162461bcd60e51b815260040161043a906112b6565b60405180910390fd5b600061044e85610599565b9050600281600381111561045e57fe5b14806104755750600381600381111561047357fe5b145b6104915760405162461bcd60e51b815260040161043a906112e6565b60005b83811015610591576104c1868686848181106104ac57fe5b90506020020160208101906101729190610e08565b156105895760008087815481106104d457fe5b906000526020600020906002020160010160008787858181106104f357fe5b90506020020160208101906105089190610e08565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055857f810f138e6e0ca6f5ac0bf2efc960187bce2c3b5afbb1e2d05905f2be7b3810b686868481811061055e57fe5b90506020020160208101906105739190610e08565b604051610580919061127a565b60405180910390a25b600101610494565b505050505050565b60008082815481106105a757fe5b6000918252602090912060029091020154600160a01b900460ff1692915050565b6000805b8351811015610609576105f28482815181106105e457fe5b602002602001015184610316565b156106015760019150506102e0565b6001016105cc565b5060009392505050565b8261061e3382610ade565b61063a5760405162461bcd60e51b815260040161043a906112b6565b600061064585610599565b9050600181600381111561065557fe5b148061066c5750600381600381111561066a57fe5b145b6106885760405162461bcd60e51b815260040161043a906112f6565b6106c585858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610bbe92505050565b5050505050565b816106d73382610ade565b6106f35760405162461bcd60e51b815260040161043a906112b6565b816000848154811061070157fe5b6000918252602082206002919091020180546001600160a01b0319166001600160a01b039384161790556040519184169185917f2d1c424d2803af2219fba896bc3092aed0ab3f7b022f412b79562b0fc2c2907d91a3505050565b6000805b82518110156102da57610779848483815181106103ef57fe5b6107875760009150506102e0565b600101610760565b6000805b83518110156102da576107ab8482815181106105e457fe5b6107b95760009150506102e0565b600101610793565b8281146107e05760405162461bcd60e51b815260040161043a906112c6565b60005b838110156106c557610807338686848181106107fb57fe5b90506020020135610ade565b6108235760405162461bcd60e51b815260040161043a906112d6565b84848281811061082f57fe5b905060200201357fddbb257b211697fab7f1ee9f59674cba284dbd7b9f6e1f3da5b645c890bf940084848481811061086357fe5b90506020028101906108759190611346565b6040516108839291906112a4565b60405180910390a26001016107e3565b600061089d610358565b905060006040518060400160405280876001600160a01b031681526020018660038111156108c757fe5b905281546001810183556000928352602092839020825160029092020180546001600160a01b0319166001600160a01b0390921691909117808255928201519192909190829060ff60a01b1916600160a01b83600381111561092557fe5b02179055505050846001600160a01b0316336001600160a01b03167fc2b2d696fda57bcf0347d9ea036ce8258434f4171cd131b4c1d22a6f0ae960d28387604051610971929190611324565b60405180910390a36109b681848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610bbe92505050565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b816109ed3382610ade565b610a095760405162461bcd60e51b815260040161043a906112b6565b6000610a1484610599565b90506000836003811115610a2457fe5b1480610a3b57506003816003811115610a3957fe5b145b610a575760405162461bcd60e51b815260040161043a90611306565b8260008581548110610a6557fe5b60009182526020909120600290910201805460ff60a01b1916600160a01b836003811115610a8f57fe5b0217905550826003811115610aa057fe5b847f44966c6bc2b3eef1eea6958dc704bb8527d350a282589bb13dd056819bd9d64683604051610ad09190611296565b60405180910390a350505050565b600080610aea836102e6565b9050806001600160a01b0316846001600160a01b031614806109b65750610b0f6109be565b6001600160a01b0316816001600160a01b03161480156109b65750610b326109be565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6a57600080fd5b505afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190610e26565b6001600160a01b0316846001600160a01b031614949350505050565b60005b8151811015610c9f57610bda838383815181106103ef57fe5b610c9757600160008481548110610bed57fe5b90600052602060002090600202016001016000848481518110610c0c57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908315150217905550827fb8848f994c7d66cdc76defd3606ffefb56ad840b408bf51230110196d5f4d8c4838381518110610c7957fe5b6020026020010151604051610c8e919061127a565b60405180910390a25b600101610bc1565b505050565b80356102e081611444565b80516102e081611444565b60008083601f840112610ccc57600080fd5b50813567ffffffffffffffff811115610ce457600080fd5b602083019150836020820283011115610cfc57600080fd5b9250929050565b600082601f830112610d1457600080fd5b8135610d27610d22826113c3565b61139c565b91508181835260208401935060208101905083856020840282011115610d4c57600080fd5b60005b83811015610d785781610d628882610ca4565b8452506020928301929190910190600101610d4f565b5050505092915050565b600082601f830112610d9357600080fd5b8135610da1610d22826113c3565b91508181835260208401935060208101905083856020840282011115610dc657600080fd5b60005b83811015610d785781610ddc8882610dfd565b8452506020928301929190910190600101610dc9565b80356102e081611458565b80356102e081611465565b600060208284031215610e1a57600080fd5b60006109b68484610ca4565b600060208284031215610e3857600080fd5b60006109b68484610caf565b60008060008060608587031215610e5a57600080fd5b6000610e668787610ca4565b9450506020610e7787828801610df2565b935050604085013567ffffffffffffffff811115610e9457600080fd5b610ea087828801610cba565b95989497509550505050565b60008060008060408587031215610ec257600080fd5b843567ffffffffffffffff811115610ed957600080fd5b610ee587828801610cba565b9450945050602085013567ffffffffffffffff811115610e9457600080fd5b60008060408385031215610f1757600080fd5b823567ffffffffffffffff811115610f2e57600080fd5b610f3a85828601610d82565b9250506020610f4b85828601610ca4565b9150509250929050565b60008060408385031215610f6857600080fd5b823567ffffffffffffffff811115610f7f57600080fd5b610f8b85828601610d82565b925050602083013567ffffffffffffffff811115610fa857600080fd5b610f4b85828601610d03565b600060208284031215610fc657600080fd5b60006109b68484610dfd565b60008060408385031215610fe557600080fd5b6000610f3a8585610dfd565b60008060006040848603121561100657600080fd5b60006110128686610dfd565b935050602084013567ffffffffffffffff81111561102f57600080fd5b61103b86828701610cba565b92509250509250925092565b6000806040838503121561105a57600080fd5b6000610f8b8585610dfd565b6000806040838503121561107957600080fd5b60006110858585610dfd565b9250506020610f4b85828601610df2565b61109f816113ed565b82525050565b61109f816113f8565b61109f81611416565b60006110c383856113e4565b93506110d0838584611421565b6110d98361142d565b9093019392505050565b60006110f0601b836113e4565b7f4f6e6c792063616c6c61626c65206279206c697374206f776e65720000000000815260200192915050565b6000611129601b836113e4565b7f6174746573744c697374733a20556e657175616c206172726179730000000000815260200192915050565b60006111626028836113e4565b7f6174746573744c697374733a204f6e6c792063616c6c61626c65206279206c6981526739ba1037bbb732b960c11b602082015260400192915050565b60006111ac6027836113e4565b7f72656d6f766546726f6d4c6973743a2043616e6e6f742072656d6f76652066728152661bdb481b1a5cdd60ca1b602082015260400192915050565b60006111f5601d836113e4565b7f616464546f4c6973743a2043616e6e6f742061646420746f206c697374000000815260200192915050565b600061122e602e836113e4565b7f7365744c697374557064617465547970653a205f6e657874557064617465547981526d1c19481b9bdd08185b1b1bddd95960921b602082015260400192915050565b61109f81611413565b602081016102e08284611096565b602081016102e082846110a5565b602081016102e082846110ae565b602080825281016109b68184866110b7565b602080825281016102e0816110e3565b602080825281016102e08161111c565b602080825281016102e081611155565b602080825281016102e08161119f565b602080825281016102e0816111e8565b602080825281016102e081611221565b602081016102e08284611271565b604081016113328285611271565b61133f60208301846110ae565b9392505050565b6000808335601e193685900301811261135e57600080fd5b80840192508235915067ffffffffffffffff82111561137c57600080fd5b60208301925060018202360383131561139457600080fd5b509250929050565b60405181810167ffffffffffffffff811182821017156113bb57600080fd5b604052919050565b600067ffffffffffffffff8211156113da57600080fd5b5060209081020190565b90815260200190565b60006102e082611407565b151590565b8061031181611437565b6001600160a01b031690565b90565b60006102e0826113fd565b82818337506000910152565b601f01601f191690565b6004811061144157fe5b50565b61144d816113ed565b811461144157600080fd5b6004811061144157600080fd5b61144d8161141356fea164736f6c634300060c000a",
    "sourceMap": "516:11547:10:-:0;;;1550:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1600:24;;;;-1:-1:-1;;;;;;1600:24:10;;;1742:58;;;;;;;;;-1:-1:-1;1742:58:10;;;;;;;;;1731:70;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:70:10;;;-1:-1:-1;;;;;;1731:70:10;;;;;;;;;;;;;;;-1:-1:-1;;;;1731:70:10;-1:-1:-1;;;1731:70:10;;;;;;;;;;;;;;;;1550:258;516:11547;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;:::-;68:71;;;;:::o;146:263::-;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;365:9;329:64;:::i;:::-;319:74;223:186;-1:-1;;;;223:186::o;416:91::-;;-1:-1;;;;;576:54;;478:24;559:76::o;642:117::-;711:24;729:5;711:24;:::i;:::-;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;:::o;:::-;516:11547:10;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "516:11547:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8149:332;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11361:112;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11922:139::-;;;;;;:::i;:::-;;:::i;11147:97::-;;;:::i;:::-;;;;;;;:::i;8720:341::-;;;;;;:::i;:::-;;:::i;9313:344::-;;;;;;:::i;:::-;;:::i;7560:314::-;;;;;;:::i;:::-;;:::i;4115:626::-;;;;;;:::i;:::-;;:::i;:::-;;11605:130;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10459:310::-;;;;;;:::i;:::-;;:::i;1973:344::-;;;;;;:::i;:::-;;:::i;4876:174::-;;;;;;:::i;:::-;;:::i;7033:309::-;;;;;;:::i;:::-;;:::i;9930:305::-;;;;;;:::i;:::-;;:::i;2783:445::-;;;;;;:::i;:::-;;:::i;3574:393::-;;;;;;:::i;:::-;;:::i;10955:101::-;;;:::i;5294:486::-;;;;;;:::i;:::-;;:::i;8149:332::-;8270:22;8313:9;8308:145;8328:6;:13;8324:1;:17;8308:145;;;8367:29;8380:4;8386:6;8393:1;8386:9;;;;;;;;;;;;;;8367:12;:29::i;:::-;8362:81;;8423:5;8416:12;;;;;8362:81;8343:3;;8308:145;;;;8470:4;8463:11;;8149:332;;;;;:::o;11361:112::-;11417:14;11450:5;11456:3;11450:10;;;;;;;;;;;;;;;;;;;;;:16;-1:-1:-1;;;;;11450:16:10;;-1:-1:-1;11361:112:10;;;;:::o;11922:139::-;11989:14;12022:5;12028:3;12022:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12022:32:10;;;;:25;:10;;;;;:25;;;;:32;;;;;;;;;-1:-1:-1;11922:139:10;;;;:::o;11147:97::-;11192:14;11225:12;11147:97;:::o;8720:341::-;8844:25;8890:9;8885:148;8905:6;:13;8901:1;:17;8885:148;;;8944:32;8960:4;8966:6;8973:1;8966:9;;;;;;;;;;;;;;8944:15;:32::i;:::-;8939:84;;9003:5;8996:12;;;;;8939:84;8920:3;;8885:148;;9313:344;9439:27;9487:9;9482:147;9502:6;:13;9498:1;:17;9482:147;;;9540:32;9556:4;9562:6;9569:1;9562:9;;;;;;;9540:32;9536:83;;;9599:5;9592:12;;;;;9536:83;9517:3;;9482:147;;7560:314;7670:21;7712:9;7707:139;7727:6;:13;7723:1;:17;7707:139;;;7765:24;7774:3;7779:6;7786:1;7779:9;;;;;;;;;;;;;;7765:8;:24::i;:::-;7761:75;;;7816:5;7809:12;;;;;7761:75;7742:3;;7707:139;;4115:626;4202:3;1464:30;1478:10;1490:3;1464:13;:30::i;:::-;1456:70;;;;-1:-1:-1;;;1456:70:10;;;;;;;:::i;:::-;;;;;;;;;4217:21:::1;4241:22;4259:3;4241:17;:22::i;:::-;4217:46:::0;-1:-1:-1;4308:21:10::1;4294:10;:35;;;;;;;;;:76;;;-1:-1:-1::0;4347:23:10::1;4333:10;:37;;;;;;;;;4294:76;4273:162;;;;-1:-1:-1::0;;;4273:162:10::1;;;;;;;:::i;:::-;4510:9;4505:230;4521:17:::0;;::::1;4505:230;;;4563:24;4572:3;4577:6;;4584:1;4577:9;;;;;;;;;;;;;;;;;;;;:::i;4563:24::-;4559:166;;;4646:5;4607::::0;4613:3:::1;4607:10;;;;;;;;;;;;;;;;;;:25;;:36;4633:6;;4640:1;4633:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4607:36:10::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4607:36:10;:44;;-1:-1:-1;;4607:44:10::1;::::0;::::1;;::::0;;;::::1;::::0;;4695:3;4675:35:::1;4700:6:::0;;4707:1;4700:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;4675:35;;;;;;:::i;:::-;;;;;;;;4559:166;4540:3;;4505:230;;;;1536:1;4115:626:::0;;;;:::o;11605:130::-;11666:22;11707:5;11713:3;11707:10;;;;;;;;;;;;;;;;;;;;;:21;-1:-1:-1;;;11707:21:10;;;;;11605:130;-1:-1:-1;;11605:130:10:o;10459:310::-;10567:21;10609:9;10604:136;10624:4;:11;10620:1;:15;10604:136;;;10660:24;10669:4;10674:1;10669:7;;;;;;;;;;;;;;10678:5;10660:8;:24::i;:::-;10656:74;;;10711:4;10704:11;;;;;10656:74;10637:3;;10604:136;;;-1:-1:-1;10757:5:10;;10459:310;-1:-1:-1;;;10459:310:10:o;1973:344::-;2055:3;1464:30;1478:10;1490:3;1464:13;:30::i;:::-;1456:70;;;;-1:-1:-1;;;1456:70:10;;;;;;;:::i;:::-;2070:21:::1;2094:22;2112:3;2094:17;:22::i;:::-;2070:46:::0;-1:-1:-1;2161:18:10::1;2147:10;:32;;;;;;;;;:73;;;-1:-1:-1::0;2197:23:10::1;2183:10;:37;;;;;;;;;2147:73;2126:149;;;;-1:-1:-1::0;;;2126:149:10::1;;;;;;;:::i;:::-;2286:24;2298:3;2303:6;;2286:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2286:11:10::1;::::0;-1:-1:-1;;;2286:24:10:i:1;:::-;1536:1;1973:344:::0;;;;:::o;4876:174::-;4954:3;1464:30;1478:10;1490:3;1464:13;:30::i;:::-;1456:70;;;;-1:-1:-1;;;1456:70:10;;;;;;;:::i;:::-;4988:10:::1;4969:5;4975:3;4969:10;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:29:::0;;-1:-1:-1;;;;;;4969:29:10::1;-1:-1:-1::0;;;;;4969:29:10;;::::1;;::::0;;5014::::1;::::0;;;::::1;::::0;5027:3;;5014:29:::1;::::0;::::1;4876:174:::0;;;:::o;7033:309::-;7140:18;7179:9;7174:140;7194:6;:13;7190:1;:17;7174:140;;;7233:24;7242:3;7247:6;7254:1;7247:9;;;;;;;7233:24;7228:76;;7284:5;7277:12;;;;;7228:76;7209:3;;7174:140;;9930:305;10035:18;10074:9;10069:138;10089:4;:11;10085:1;:15;10069:138;;;10126:24;10135:4;10140:1;10135:7;;;;;;;10126:24;10121:76;;10177:5;10170:12;;;;;10121:76;10102:3;;10069:138;;2783:445;2889:35;;;2881:75;;;;-1:-1:-1;;;2881:75:10;;;;;;;:::i;:::-;2972:9;2967:255;2983:15;;;2967:255;;;3044:34;3058:10;3070:4;;3075:1;3070:7;;;;;;;;;;;;;3044:13;:34::i;:::-;3019:133;;;;-1:-1:-1;;;3019:133:10;;;;;;;:::i;:::-;3185:4;;3190:1;3185:7;;;;;;;;;;;;;3172:39;3194:13;;3208:1;3194:16;;;;;;;;;;;;;;;;;;:::i;:::-;3172:39;;;;;;;:::i;:::-;;;;;;;;3000:3;;2967:255;;3574:393;3716:11;3745:14;:12;:14::i;:::-;3739:20;;3770:5;3781:50;;;;;;;;3798:6;-1:-1:-1;;;;;3781:50:10;;;;;3818:11;3781:50;;;;;;;;;;3770:62;;;;;;;-1:-1:-1;3770:62:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3770:62:10;-1:-1:-1;;;;;3770:62:10;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3770:62:10;-1:-1:-1;;;3770:62:10;;;;;;;;;;;;;;;;3872:6;-1:-1:-1;;;;;3848:49:10;3860:10;-1:-1:-1;;;;;3848:49:10;;3880:3;3885:11;3848:49;;;;;;;:::i;:::-;;;;;;;;3908:31;3920:3;3925:13;;3908:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3908:11:10;;-1:-1:-1;;;3908:31:10:i;:::-;3574:393;;;;;;:::o;10955:101::-;11039:10;10955:101;:::o;5294:486::-;5401:3;1464:30;1478:10;1490:3;1464:13;:30::i;:::-;1456:70;;;;-1:-1:-1;;;1456:70:10;;;;;;;:::i;:::-;5420:25:::1;5448:22;5466:3;5448:17;:22::i;:::-;5420:50:::0;-1:-1:-1;5520:15:10::1;5501;:34;;;;;;;;;:79;;;-1:-1:-1::0;5557:23:10::1;5539:14;:41;;;;;;;;;5501:79;5480:172;;;;-1:-1:-1::0;;;5480:172:10::1;;;;;;;:::i;:::-;5687:15;5663:5;5669:3;5663:10;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:39:::0;;-1:-1:-1;;;;5663:39:10::1;-1:-1:-1::0;;;5663:39:10;::::1;::::0;::::1;;;;;;;;;;;5757:15;5718:55;;;;;;;;5736:3;5718:55;5741:14;5718:55;;;;;;:::i;:::-;;;;;;;;1536:1;5294:486:::0;;;:::o;6242:276::-;6314:17;6343:13;6359:17;6372:3;6359:12;:17::i;:::-;6343:33;;6413:5;-1:-1:-1;;;;;6405:13:10;:4;-1:-1:-1;;;;;6405:13:10;;:106;;;;6444:15;:13;:15::i;:::-;-1:-1:-1;;;;;6435:24:10;:5;-1:-1:-1;;;;;6435:24:10;;:75;;;;;6483:15;:13;:15::i;:::-;-1:-1:-1;;;;;6471:37:10;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6463:47:10;:4;-1:-1:-1;;;;;6463:47:10;;6386:125;6242:276;-1:-1:-1;;;;6242:276:10:o;5855:309::-;5937:9;5932:226;5952:6;:13;5948:1;:17;5932:226;;;5991:24;6000:3;6005:6;6012:1;6005:9;;;;;;;5991:24;5986:162;;6074:4;6035:5;6041:3;6035:10;;;;;;;;;;;;;;;;;;:25;;:36;6061:6;6068:1;6061:9;;;;;;;;;;;;;;-1:-1:-1;;;;;6035:36:10;-1:-1:-1;;;;;6035:36:10;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;6118:3;6102:31;6123:6;6130:1;6123:9;;;;;;;;;;;;;;6102:31;;;;;;:::i;:::-;;;;;;;;5986:162;5967:3;;5932:226;;;;5855:309;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;301:352::-;;;431:3;424:4;416:6;412:17;408:27;398:2;;449:1;446;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;541:1;538;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;618:4;610:6;606:17;596:8;592:32;589:41;586:2;;;643:1;640;633:12;586:2;391:262;;;;;:::o;679:707::-;;796:3;789:4;781:6;777:17;773:27;763:2;;814:1;811;804:12;763:2;851:6;838:20;873:80;888:64;945:6;888:64;:::i;:::-;873:80;:::i;:::-;864:89;;970:5;995:6;988:5;981:21;1025:4;1017:6;1013:17;1003:27;;1047:4;1042:3;1038:14;1031:21;;1100:6;1147:3;1139:4;1131:6;1127:17;1122:3;1118:27;1115:36;1112:2;;;1164:1;1161;1154:12;1112:2;1189:1;1174:206;1199:6;1196:1;1193:13;1174:206;;;1257:3;1279:37;1312:3;1300:10;1279:37;:::i;:::-;1267:50;;-1:-1;1340:4;1331:14;;;;1359;;;;;1221:1;1214:9;1174:206;;;1178:14;756:630;;;;;;;:::o;2179:707::-;;2296:3;2289:4;2281:6;2277:17;2273:27;2263:2;;2314:1;2311;2304:12;2263:2;2351:6;2338:20;2373:80;2388:64;2445:6;2388:64;:::i;2373:80::-;2364:89;;2470:5;2495:6;2488:5;2481:21;2525:4;2517:6;2513:17;2503:27;;2547:4;2542:3;2538:14;2531:21;;2600:6;2647:3;2639:4;2631:6;2627:17;2622:3;2618:27;2615:36;2612:2;;;2664:1;2661;2654:12;2612:2;2689:1;2674:206;2699:6;2696:1;2693:13;2674:206;;;2757:3;2779:37;2812:3;2800:10;2779:37;:::i;:::-;2767:50;;-1:-1;2840:4;2831:14;;;;2859;;;;;2721:1;2714:9;2674:206;;2894:160;2976:20;;3001:48;2976:20;3001:48;:::i;3061:130::-;3128:20;;3153:33;3128:20;3153:33;:::i;3198:241::-;;3302:2;3290:9;3281:7;3277:23;3273:32;3270:2;;;3318:1;3315;3308:12;3270:2;3353:1;3370:53;3415:7;3395:9;3370:53;:::i;3446:263::-;;3561:2;3549:9;3540:7;3536:23;3532:32;3529:2;;;3577:1;3574;3567:12;3529:2;3612:1;3629:64;3685:7;3665:9;3629:64;:::i;3716:677::-;;;;;3904:2;3892:9;3883:7;3879:23;3875:32;3872:2;;;3920:1;3917;3910:12;3872:2;3955:1;3972:53;4017:7;3997:9;3972:53;:::i;:::-;3962:63;;3934:97;4062:2;4080:68;4140:7;4131:6;4120:9;4116:22;4080:68;:::i;:::-;4070:78;;4041:113;4213:2;4202:9;4198:18;4185:32;4237:18;4229:6;4226:30;4223:2;;;4269:1;4266;4259:12;4223:2;4297:80;4369:7;4360:6;4349:9;4345:22;4297:80;:::i;:::-;3866:527;;;;-1:-1;4279:98;-1:-1;;;;3866:527::o;4400:702::-;;;;;4603:2;4591:9;4582:7;4578:23;4574:32;4571:2;;;4619:1;4616;4609:12;4571:2;4654:31;;4705:18;4694:30;;4691:2;;;4737:1;4734;4727:12;4691:2;4765:80;4837:7;4828:6;4817:9;4813:22;4765:80;:::i;:::-;4747:98;;;;4633:218;4910:2;4899:9;4895:18;4882:32;4934:18;4926:6;4923:30;4920:2;;;4966:1;4963;4956:12;5109:502;;;5255:2;5243:9;5234:7;5230:23;5226:32;5223:2;;;5271:1;5268;5261:12;5223:2;5306:31;;5357:18;5346:30;;5343:2;;;5389:1;5386;5379:12;5343:2;5409:78;5479:7;5470:6;5459:9;5455:22;5409:78;:::i;:::-;5399:88;;5285:208;5524:2;5542:53;5587:7;5578:6;5567:9;5563:22;5542:53;:::i;:::-;5532:63;;5503:98;5217:394;;;;;:::o;5618:638::-;;;5789:2;5777:9;5768:7;5764:23;5760:32;5757:2;;;5805:1;5802;5795:12;5757:2;5840:31;;5891:18;5880:30;;5877:2;;;5923:1;5920;5913:12;5877:2;5943:78;6013:7;6004:6;5993:9;5989:22;5943:78;:::i;:::-;5933:88;;5819:208;6086:2;6075:9;6071:18;6058:32;6110:18;6102:6;6099:30;6096:2;;;6142:1;6139;6132:12;6096:2;6162:78;6232:7;6223:6;6212:9;6208:22;6162:78;:::i;6263:241::-;;6367:2;6355:9;6346:7;6342:23;6338:32;6335:2;;;6383:1;6380;6373:12;6335:2;6418:1;6435:53;6480:7;6460:9;6435:53;:::i;6511:366::-;;;6632:2;6620:9;6611:7;6607:23;6603:32;6600:2;;;6648:1;6645;6638:12;6600:2;6683:1;6700:53;6745:7;6725:9;6700:53;:::i;6884:522::-;;;;7040:2;7028:9;7019:7;7015:23;7011:32;7008:2;;;7056:1;7053;7046:12;7008:2;7091:1;7108:53;7153:7;7133:9;7108:53;:::i;:::-;7098:63;;7070:97;7226:2;7215:9;7211:18;7198:32;7250:18;7242:6;7239:30;7236:2;;;7282:1;7279;7272:12;7236:2;7310:80;7382:7;7373:6;7362:9;7358:22;7310:80;:::i;:::-;7292:98;;;;7177:219;7002:404;;;;;:::o;7413:502::-;;;7559:2;7547:9;7538:7;7534:23;7530:32;7527:2;;;7575:1;7572;7565:12;7527:2;7610:1;7627:53;7672:7;7652:9;7627:53;:::i;7922:396::-;;;8058:2;8046:9;8037:7;8033:23;8029:32;8026:2;;;8074:1;8071;8064:12;8026:2;8109:1;8126:53;8171:7;8151:9;8126:53;:::i;:::-;8116:63;;8088:97;8216:2;8234:68;8294:7;8285:6;8274:9;8270:22;8234:68;:::i;8325:113::-;8408:24;8426:5;8408:24;:::i;:::-;8403:3;8396:37;8390:48;;:::o;8445:104::-;8522:21;8537:5;8522:21;:::i;8556:152::-;8652:50;8696:5;8652:50;:::i;8740:300::-;;8856:71;8920:6;8915:3;8856:71;:::i;:::-;8849:78;;8939:43;8975:6;8970:3;8963:5;8939:43;:::i;:::-;9004:29;9026:6;9004:29;:::i;:::-;8995:39;;;;8842:198;-1:-1;;;8842:198::o;9049:327::-;;9209:67;9273:2;9268:3;9209:67;:::i;:::-;9309:29;9289:50;;9367:2;9358:12;;9195:181;-1:-1;;9195:181::o;9385:327::-;;9545:67;9609:2;9604:3;9545:67;:::i;:::-;9645:29;9625:50;;9703:2;9694:12;;9531:181;-1:-1;;9531:181::o;9721:377::-;;9881:67;9945:2;9940:3;9881:67;:::i;:::-;9981:34;9961:55;;-1:-1;;;10045:2;10036:12;;10029:32;10089:2;10080:12;;9867:231;-1:-1;;9867:231::o;10107:376::-;;10267:67;10331:2;10326:3;10267:67;:::i;:::-;10367:34;10347:55;;-1:-1;;;10431:2;10422:12;;10415:31;10474:2;10465:12;;10253:230;-1:-1;;10253:230::o;10492:329::-;;10652:67;10716:2;10711:3;10652:67;:::i;:::-;10752:31;10732:52;;10812:2;10803:12;;10638:183;-1:-1;;10638:183::o;10830:383::-;;10990:67;11054:2;11049:3;10990:67;:::i;:::-;11090:34;11070:55;;-1:-1;;;11154:2;11145:12;;11138:38;11204:2;11195:12;;10976:237;-1:-1;;10976:237::o;11221:113::-;11304:24;11322:5;11304:24;:::i;11341:222::-;11468:2;11453:18;;11482:71;11457:9;11526:6;11482:71;:::i;11570:210::-;11691:2;11676:18;;11705:65;11680:9;11743:6;11705:65;:::i;11787:248::-;11927:2;11912:18;;11941:84;11916:9;11998:6;11941:84;:::i;12042:330::-;12199:2;12213:47;;;12184:18;;12274:88;12184:18;12348:6;12340;12274:88;:::i;12379:416::-;12579:2;12593:47;;;12564:18;;12654:131;12564:18;12654:131;:::i;12802:416::-;13002:2;13016:47;;;12987:18;;13077:131;12987:18;13077:131;:::i;13225:416::-;13425:2;13439:47;;;13410:18;;13500:131;13410:18;13500:131;:::i;13648:416::-;13848:2;13862:47;;;13833:18;;13923:131;13833:18;13923:131;:::i;14071:416::-;14271:2;14285:47;;;14256:18;;14346:131;14256:18;14346:131;:::i;14494:416::-;14694:2;14708:47;;;14679:18;;14769:131;14679:18;14769:131;:::i;14917:222::-;15044:2;15029:18;;15058:71;15033:9;15102:6;15058:71;:::i;15146:359::-;15314:2;15299:18;;15328:71;15303:9;15372:6;15328:71;:::i;:::-;15410:85;15491:2;15480:9;15476:18;15467:6;15410:85;:::i;:::-;15285:220;;;;;:::o;15512:507::-;;;15635:25;;-1:-1;;15707:14;15703:29;;;15699:48;15675:73;;15665:2;;15762:1;15759;15752:12;15665:2;15793:18;15783:8;15779:33;15771:41;;15846:4;15833:18;15823:28;;15871:18;15863:6;15860:30;15857:2;;;15903:1;15900;15893:12;15857:2;15931;15925:4;15921:13;15913:21;;15985:4;15977:6;15973:17;15957:14;15953:38;15947:4;15943:49;15940:2;;;16005:1;16002;15995:12;15940:2;15603:416;;;;;;:::o;16026:256::-;16088:2;16082:9;16114:17;;;16189:18;16174:34;;16210:22;;;16171:62;16168:2;;;16246:1;16243;16236:12;16168:2;16262;16255:22;16066:216;;-1:-1;16066:216::o;16289:304::-;;16448:18;16440:6;16437:30;16434:2;;;16480:1;16477;16470:12;16434:2;-1:-1;16515:4;16503:17;;;16568:15;;16371:222::o;16912:163::-;17015:19;;;17064:4;17055:14;;17008:67::o;17083:91::-;;17145:24;17163:5;17145:24;:::i;17181:85::-;17247:13;17240:21;;17223:43::o;17273:136::-;17350:5;17356:48;17350:5;17356:48;:::i;17416:121::-;-1:-1;;;;;17478:54;;17461:76::o;17544:72::-;17606:5;17589:27::o;17623:136::-;;17715:39;17748:5;17715:39;:::i;17767:145::-;17848:6;17843:3;17838;17825:30;-1:-1;17904:1;17886:16;;17879:27;17818:94::o;17920:97::-;18008:2;17988:14;-1:-1;;17984:28;;17968:49::o;18025:106::-;18109:1;18102:5;18099:12;18089:2;;18115:9;18089:2;18083:48;:::o;18138:117::-;18207:24;18225:5;18207:24;:::i;:::-;18200:5;18197:35;18187:2;;18246:1;18243;18236:12;18262:109;18346:1;18339:5;18336:12;18326:2;;18362:1;18359;18352:12;18378:117;18447:24;18465:5;18447:24;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "1759": [
        {
          "start": 2496,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addToList(uint256,address[])": "8da3d736",
    "areAllInAllLists(uint256[],address[])": "107df6c5",
    "areAllInList(uint256,address[])": "abdf6215",
    "areAllInSomeOfLists(uint256[],address[])": "30bdd386",
    "areAllNotInAnyOfLists(uint256[],address[])": "3a6914fe",
    "areAllNotInList(uint256,address[])": "4446fe37",
    "attestLists(uint256[],string[])": "b426f946",
    "createList(address,uint8,address[])": "be68406e",
    "getDispatcher()": "ebb3d589",
    "getListCount()": "2ce37b10",
    "getListOwner(uint256)": "19bcc938",
    "getListUpdateType(uint256)": "539f2ab4",
    "isInAllLists(uint256[],address)": "afc8dd61",
    "isInList(uint256,address)": "1c563204",
    "isInSomeOfLists(uint256[],address)": "75674f46",
    "removeFromList(uint256,address[])": "51d3a322",
    "setListOwner(uint256,address)": "956e8faa",
    "setListUpdateType(uint256,uint8)": "ee4483dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"item\",\"type\":\"address\"}],\"name\":\"ItemAddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"item\",\"type\":\"address\"}],\"name\":\"ItemRemovedFromList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ListAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"updateType\",\"type\":\"uint8\"}],\"name\":\"ListCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"ListOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"prevUpdateType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"nextUpdateType\",\"type\":\"uint8\"}],\"name\":\"ListUpdateTypeSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"addToList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"areAllInAllLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInAllLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"areAllInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"areAllInSomeOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInSomeOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"areAllNotInAnyOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllNotInAnyOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"areAllNotInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllNotInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_descriptions\",\"type\":\"string[]\"}],\"name\":\"attestLists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"_updateType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_initialItems\",\"type\":\"address[]\"}],\"name\":\"createList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getListOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getListUpdateType\",\"outputs\":[{\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"updateType_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"}],\"name\":\"isInAllLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInAllLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"}],\"name\":\"isInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_item\",\"type\":\"address\"}],\"name\":\"isInSomeOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInSomeOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_items\",\"type\":\"address[]\"}],\"name\":\"removeFromList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"}],\"name\":\"setListOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum AddressListRegistry.UpdateType\",\"name\":\"_nextUpdateType\",\"type\":\"uint8\"}],\"name\":\"setListUpdateType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"addToList(uint256,address[])\":{\"params\":{\"_id\":\"The id of the list\",\"_items\":\"The items to add to the list\"}},\"areAllInAllLists(uint256[],address[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInAllLists_\":\"True if all items are in all of the lists\"}},\"areAllInList(uint256,address[])\":{\"params\":{\"_id\":\"The list id\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInList_\":\"True if all items are in the list\"}},\"areAllInSomeOfLists(uint256[],address[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInSomeOfLists_\":\"True if all items are in one of the lists\"}},\"areAllNotInAnyOfLists(uint256[],address[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllNotInAnyOfLists_\":\"True if all items are absent from all lists\"}},\"areAllNotInList(uint256,address[])\":{\"params\":{\"_id\":\"The list id\",\"_items\":\"The items to check\"},\"returns\":{\"areAllNotInList_\":\"True if no items are in the list\"}},\"attestLists(uint256[],string[])\":{\"details\":\"Since UserA can create a list on behalf of UserB, this function provides a mechanism for UserB to attest to their management of the items therein. It will not be visible on-chain, but will be available in event logs.\",\"params\":{\"_descriptions\":\"The descriptions of the lists' content\",\"_ids\":\"The ids of the lists\"}},\"createList(address,uint8,address[])\":{\"details\":\"Specify the DISPATCHER as the _owner to make the Enzyme Council the owner\",\"params\":{\"_initialItems\":\"The initial items to add to the list\",\"_owner\":\"The owner of the list\",\"_updateType\":\"The UpdateType for the list\"},\"returns\":{\"id_\":\"The id of the newly-created list\"}},\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `DISPATCHER` variable value\"}},\"getListCount()\":{\"returns\":{\"count_\":\"The total count\"}},\"getListOwner(uint256)\":{\"params\":{\"_id\":\"The list id\"},\"returns\":{\"owner_\":\"The owner\"}},\"getListUpdateType(uint256)\":{\"params\":{\"_id\":\"The list id\"},\"returns\":{\"updateType_\":\"The UpdateType\"}},\"isInAllLists(uint256[],address)\":{\"params\":{\"_ids\":\"The list ids\",\"_item\":\"The item to check\"},\"returns\":{\"isInAllLists_\":\"True if item is in all of the lists\"}},\"isInList(uint256,address)\":{\"params\":{\"_id\":\"The list id\",\"_item\":\"The item to check\"},\"returns\":{\"isInList_\":\"True if the item is in the list\"}},\"isInSomeOfLists(uint256[],address)\":{\"params\":{\"_ids\":\"The list ids\",\"_item\":\"The item to check\"},\"returns\":{\"isInSomeOfLists_\":\"True if item is in one of the lists\"}},\"removeFromList(uint256,address[])\":{\"params\":{\"_id\":\"The id of the list\",\"_items\":\"The items to remove from the list\"}},\"setListOwner(uint256,address)\":{\"params\":{\"_id\":\"The id of the list\",\"_nextOwner\":\"The owner to set\"}},\"setListUpdateType(uint256,uint8)\":{\"details\":\"Can only change to a less mutable option (e.g., both add and remove => add only)\",\"params\":{\"_id\":\"The id of the list\",\"_nextUpdateType\":\"The UpdateType to set\"}}},\"title\":\"AddressListRegistry Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToList(uint256,address[])\":{\"notice\":\"Adds items to a given list\"},\"areAllInAllLists(uint256[],address[])\":{\"notice\":\"Checks if multiple items are all in all of a given set of lists\"},\"areAllInList(uint256,address[])\":{\"notice\":\"Checks if multiple items are all in a given list\"},\"areAllInSomeOfLists(uint256[],address[])\":{\"notice\":\"Checks if multiple items are all in one of a given set of lists\"},\"areAllNotInAnyOfLists(uint256[],address[])\":{\"notice\":\"Checks if multiple items are all absent from all of a given set of lists\"},\"areAllNotInList(uint256,address[])\":{\"notice\":\"Checks if multiple items are all absent from a given list\"},\"attestLists(uint256[],string[])\":{\"notice\":\"Attests active ownership for lists and (optionally) a description of each list's content\"},\"createList(address,uint8,address[])\":{\"notice\":\"Creates a new list\"},\"getDispatcher()\":{\"notice\":\"Gets the `DISPATCHER` variable\"},\"getListCount()\":{\"notice\":\"Gets the total count of lists\"},\"getListOwner(uint256)\":{\"notice\":\"Gets the owner of a given list\"},\"getListUpdateType(uint256)\":{\"notice\":\"Gets the UpdateType of a given list\"},\"isInAllLists(uint256[],address)\":{\"notice\":\"Checks if an item is in all of a given set of lists\"},\"isInList(uint256,address)\":{\"notice\":\"Checks if an item is in a given list\"},\"isInSomeOfLists(uint256[],address)\":{\"notice\":\"Checks if an item is in at least one of a given set of lists\"},\"removeFromList(uint256,address[])\":{\"notice\":\"Removes items from a given list\"},\"setListOwner(uint256,address)\":{\"notice\":\"Sets the owner for a given list\"},\"setListUpdateType(uint256,uint8)\":{\"notice\":\"Sets the UpdateType for a given list\"}},\"notice\":\"A contract for creating and updating lists of addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/address-list-registry/AddressListRegistry.sol\":\"AddressListRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/address-list-registry/AddressListRegistry.sol\":{\"keccak256\":\"0xf00a9e376e3ec2a223f463f71c15ee3af3642dd028bc3762440e316b760c8048\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://01986c9327b5dfbfac21316dced6d68727931ddde1278ed1342d878004f984b9\",\"dweb:/ipfs/QmdXkFaUU43JqMTYEREbWa129rohdqN7GXy7mVRpjCfSLD\"]},\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dispatcher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "item",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ItemAddedToList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "item",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ItemRemovedFromList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListAttested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "updateType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "nextOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListOwnerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "prevUpdateType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "nextUpdateType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListUpdateTypeSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInAllLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInAllLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInSomeOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInSomeOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllNotInAnyOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllNotInAnyOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllNotInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllNotInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "_descriptions",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attestLists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "_updateType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_initialItems",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createList",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDispatcher",
          "outputs": [
            {
              "internalType": "address",
              "name": "dispatcher_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getListCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getListOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getListUpdateType",
          "outputs": [
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "updateType_",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "_item",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInAllLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInAllLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_item",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "_item",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInSomeOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInSomeOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_items",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFromList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_nextOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setListOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "enum AddressListRegistry.UpdateType",
              "name": "_nextUpdateType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setListUpdateType"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addToList(uint256,address[])": {
            "params": {
              "_id": "The id of the list",
              "_items": "The items to add to the list"
            }
          },
          "areAllInAllLists(uint256[],address[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInAllLists_": "True if all items are in all of the lists"
            }
          },
          "areAllInList(uint256,address[])": {
            "params": {
              "_id": "The list id",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInList_": "True if all items are in the list"
            }
          },
          "areAllInSomeOfLists(uint256[],address[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInSomeOfLists_": "True if all items are in one of the lists"
            }
          },
          "areAllNotInAnyOfLists(uint256[],address[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllNotInAnyOfLists_": "True if all items are absent from all lists"
            }
          },
          "areAllNotInList(uint256,address[])": {
            "params": {
              "_id": "The list id",
              "_items": "The items to check"
            },
            "returns": {
              "areAllNotInList_": "True if no items are in the list"
            }
          },
          "attestLists(uint256[],string[])": {
            "details": "Since UserA can create a list on behalf of UserB, this function provides a mechanism for UserB to attest to their management of the items therein. It will not be visible on-chain, but will be available in event logs.",
            "params": {
              "_descriptions": "The descriptions of the lists' content",
              "_ids": "The ids of the lists"
            }
          },
          "createList(address,uint8,address[])": {
            "details": "Specify the DISPATCHER as the _owner to make the Enzyme Council the owner",
            "params": {
              "_initialItems": "The initial items to add to the list",
              "_owner": "The owner of the list",
              "_updateType": "The UpdateType for the list"
            },
            "returns": {
              "id_": "The id of the newly-created list"
            }
          },
          "getDispatcher()": {
            "returns": {
              "dispatcher_": "The `DISPATCHER` variable value"
            }
          },
          "getListCount()": {
            "returns": {
              "count_": "The total count"
            }
          },
          "getListOwner(uint256)": {
            "params": {
              "_id": "The list id"
            },
            "returns": {
              "owner_": "The owner"
            }
          },
          "getListUpdateType(uint256)": {
            "params": {
              "_id": "The list id"
            },
            "returns": {
              "updateType_": "The UpdateType"
            }
          },
          "isInAllLists(uint256[],address)": {
            "params": {
              "_ids": "The list ids",
              "_item": "The item to check"
            },
            "returns": {
              "isInAllLists_": "True if item is in all of the lists"
            }
          },
          "isInList(uint256,address)": {
            "params": {
              "_id": "The list id",
              "_item": "The item to check"
            },
            "returns": {
              "isInList_": "True if the item is in the list"
            }
          },
          "isInSomeOfLists(uint256[],address)": {
            "params": {
              "_ids": "The list ids",
              "_item": "The item to check"
            },
            "returns": {
              "isInSomeOfLists_": "True if item is in one of the lists"
            }
          },
          "removeFromList(uint256,address[])": {
            "params": {
              "_id": "The id of the list",
              "_items": "The items to remove from the list"
            }
          },
          "setListOwner(uint256,address)": {
            "params": {
              "_id": "The id of the list",
              "_nextOwner": "The owner to set"
            }
          },
          "setListUpdateType(uint256,uint8)": {
            "details": "Can only change to a less mutable option (e.g., both add and remove => add only)",
            "params": {
              "_id": "The id of the list",
              "_nextUpdateType": "The UpdateType to set"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addToList(uint256,address[])": {
            "notice": "Adds items to a given list"
          },
          "areAllInAllLists(uint256[],address[])": {
            "notice": "Checks if multiple items are all in all of a given set of lists"
          },
          "areAllInList(uint256,address[])": {
            "notice": "Checks if multiple items are all in a given list"
          },
          "areAllInSomeOfLists(uint256[],address[])": {
            "notice": "Checks if multiple items are all in one of a given set of lists"
          },
          "areAllNotInAnyOfLists(uint256[],address[])": {
            "notice": "Checks if multiple items are all absent from all of a given set of lists"
          },
          "areAllNotInList(uint256,address[])": {
            "notice": "Checks if multiple items are all absent from a given list"
          },
          "attestLists(uint256[],string[])": {
            "notice": "Attests active ownership for lists and (optionally) a description of each list's content"
          },
          "createList(address,uint8,address[])": {
            "notice": "Creates a new list"
          },
          "getDispatcher()": {
            "notice": "Gets the `DISPATCHER` variable"
          },
          "getListCount()": {
            "notice": "Gets the total count of lists"
          },
          "getListOwner(uint256)": {
            "notice": "Gets the owner of a given list"
          },
          "getListUpdateType(uint256)": {
            "notice": "Gets the UpdateType of a given list"
          },
          "isInAllLists(uint256[],address)": {
            "notice": "Checks if an item is in all of a given set of lists"
          },
          "isInList(uint256,address)": {
            "notice": "Checks if an item is in a given list"
          },
          "isInSomeOfLists(uint256[],address)": {
            "notice": "Checks if an item is in at least one of a given set of lists"
          },
          "removeFromList(uint256,address[])": {
            "notice": "Removes items from a given list"
          },
          "setListOwner(uint256,address)": {
            "notice": "Sets the owner for a given list"
          },
          "setListUpdateType(uint256,uint8)": {
            "notice": "Sets the UpdateType for a given list"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/persistent/address-list-registry/AddressListRegistry.sol": "AddressListRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/persistent/address-list-registry/AddressListRegistry.sol": {
        "keccak256": "0xf00a9e376e3ec2a223f463f71c15ee3af3642dd028bc3762440e316b760c8048",
        "urls": [
          "bzz-raw://01986c9327b5dfbfac21316dced6d68727931ddde1278ed1342d878004f984b9",
          "dweb:/ipfs/QmdXkFaUU43JqMTYEREbWa129rohdqN7GXy7mVRpjCfSLD"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/dispatcher/IDispatcher.sol": {
        "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30",
        "urls": [
          "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0",
          "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "id": 10
}
