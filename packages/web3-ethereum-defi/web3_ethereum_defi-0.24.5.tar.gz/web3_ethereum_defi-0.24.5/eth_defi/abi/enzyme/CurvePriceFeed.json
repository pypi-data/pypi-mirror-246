{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fundDeployer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addressProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_virtualPriceDeviationThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolOwner",
          "type": "address"
        }
      ],
      "name": "CurvePoolOwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "derivative",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "DerivativeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "derivative",
          "type": "address"
        }
      ],
      "name": "DerivativeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "invariantProxyAsset",
          "type": "address"
        }
      ],
      "name": "InvariantProxyAssetForPoolSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "virtualPrice",
          "type": "uint256"
        }
      ],
      "name": "ValidatedVirtualPriceForPoolUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_gaugeTokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "name": "addGaugeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_gaugeTokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "name": "addGaugeTokensWithoutValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_invariantProxyAssets",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_reentrantVirtualPrices",
          "type": "bool[]"
        },
        {
          "internalType": "address[]",
          "name": "_lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_gaugeTokens",
          "type": "address[]"
        }
      ],
      "name": "addPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_invariantProxyAssets",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_reentrantVirtualPrices",
          "type": "bool[]"
        },
        {
          "internalType": "address[]",
          "name": "_lpTokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_gaugeTokens",
          "type": "address[]"
        }
      ],
      "name": "addPoolsWithoutValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_derivative",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_derivativeAmount",
          "type": "uint256"
        }
      ],
      "name": "calcUnderlyingValues",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "underlyings_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "underlyingAmounts_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurvePoolOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "poolOwner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFundDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "fundDeployer_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "getLpTokenForPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "lpToken_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_derivative",
          "type": "address"
        }
      ],
      "name": "getPoolForDerivative",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "getPoolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "invariantProxyAsset",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "invariantProxyAssetDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint88",
              "name": "lastValidatedVirtualPrice",
              "type": "uint88"
            }
          ],
          "internalType": "struct CurvePriceFeed.PoolInfo",
          "name": "poolInfo_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "isSupportedAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSupported_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_derivatives",
          "type": "address[]"
        }
      ],
      "name": "removeDerivatives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "name": "removePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nextPoolOwner",
          "type": "address"
        }
      ],
      "name": "setCurvePoolOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_invariantProxyAssets",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_reentrantVirtualPrices",
          "type": "bool[]"
        }
      ],
      "name": "updatePoolInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620028cb380380620028cb8339810160408190526200003491620000e0565b6001600160601b0319606085811b821660805284901b1660a05260c08190526200005e8262000068565b50505050620001a5565b600080546001600160a01b0319166001600160a01b0383161790556040517f285938205335d4bea92402795be7d763d8fdcf6b363506d1e419f026c37f44bd90620000b59083906200015b565b60405180910390a150565b8051620000cd8162000180565b92915050565b8051620000cd816200019a565b60008060008060808587031215620000f757600080fd5b6000620001058787620000c0565b94505060206200011887828801620000c0565b93505060406200012b87828801620000c0565b92505060606200013e87828801620000d3565b91505092959194509250565b62000155816200016b565b82525050565b60208101620000cd82846200014a565b60006001600160a01b038216620000cd565b90565b6200018b816200016b565b81146200019757600080fd5b50565b6200018b816200017d565b60805160601c60a05160601c60c0516126e9620001e2600039806114bc525080610ece5280610f3f525080610bc65280610d4952506126e96000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063727212f6116100975780639be918e6116100665780639be918e614610206578063bb5c7b1514610226578063f044506b1461022e578063f6d959c31461024157610100565b8063727212f6146101c2578063893d20e8146101e35780638f72b136146101eb57806397c0ac87146101fe57610100565b80634b164140116100d35780634b1641401461017657806351e7d01f14610189578063540eaddc1461019c5780636a2175c0146101af57610100565b80630254f0541461010557806305ecc2d41461011a57806306bfa9381461012d5780631f5bce5514610156575b600080fd5b610118610113366004611dab565b610254565b005b610118610128366004611bae565b6105cc565b61014061013b366004611bae565b610610565b60405161014d91906125fb565b60405180910390f35b610169610164366004611bae565b61066e565b60405161014d91906124aa565b610118610184366004611c5e565b61068c565b610118610197366004611c9f565b6107c0565b6101186101aa366004611dab565b61093c565b6101696101bd366004611bae565b610992565b6101d56101d0366004611bf2565b6109b0565b60405161014d9291906124b8565b610169610bc2565b6101186101f9366004611c5e565b610c5a565b610169610d47565b610219610214366004611bae565b610d6b565b60405161014d91906124dd565b610169610d88565b61011861023c366004611d0d565b610d97565b61011861024f366004611c9f565b610e80565b61025c610bc2565b6001600160a01b0316336001600160a01b0316146102955760405162461bcd60e51b815260040161028c906124fb565b60405180910390fd5b600061029f610eca565b905060006102ab610f25565b905060005b8b8110156105ab57826001600160a01b031663379510498e8e848181106102d357fe5b90506020020160208101906102e89190611bae565b6040518263ffffffff1660e01b815260040161030491906124aa565b60206040518083038186803b15801561031c57600080fd5b505afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190611bd4565b6001600160a01b031687878381811061036957fe5b905060200201602081019061037e9190611bae565b6001600160a01b0316141561040e57600085858381811061039b57fe5b90506020020160208101906103b09190611bae565b6001600160a01b031614610409576104098585838181106103cd57fe5b90506020020160208101906103e29190611bae565b8e8e848181106103ee57fe5b90506020020160208101906104039190611bae565b85610f8d565b6105a3565b8c8c8281811061041a57fe5b905060200201602081019061042f9190611bae565b6001600160a01b031687878381811061044457fe5b90506020020160208101906104599190611bae565b6001600160a01b031614801561050a57506000826001600160a01b031663940494f18f8f8581811061048757fe5b905060200201602081019061049c9190611bae565b6040518263ffffffff1660e01b81526004016104b891906124aa565b60206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190611ec6565b115b1561058b57600085858381811061051d57fe5b90506020020160208101906105329190611bae565b6001600160a01b0316146104095761040985858381811061054f57fe5b90506020020160208101906105649190611bae565b8e8e8481811061057057fe5b90506020020160208101906105859190611bae565b84611073565b60405162461bcd60e51b815260040161028c906125cb565b6001016102b0565b506105be8c8c8c8c8c8c8c8c8c8c61111f565b505050505050505050505050565b6105d4610bc2565b6001600160a01b0316336001600160a01b0316146106045760405162461bcd60e51b815260040161028c906124fb565b61060d81611390565b50565b610618611a10565b506001600160a01b03908116600090815260026020908152604091829020825160608101845290549384168152600160a01b840460ff1691810191909152600160a81b9092046001600160581b03169082015290565b6001600160a01b039081166000908152600360205260409020541690565b610694610bc2565b6001600160a01b0316336001600160a01b0316146106c45760405162461bcd60e51b815260040161028c906124fb565b60005b818110156107bb57600260008484848181106106df57fe5b90506020020160208101906106f49190611bae565b6001600160a01b031681526020810191909152604001600090812081905560039084848481811061072157fe5b90506020020160208101906107369190611bae565b6001600160a01b03168152602081019190915260400160002080546001600160a01b031916905582828281811061076957fe5b905060200201602081019061077e9190611bae565b6001600160a01b03167f4106dfdaa577573db51c0ca93f766dbedfa0758faa2e7f5bcdb7c142be803c3f60405160405180910390a26001016106c7565b505050565b6107c8610bc2565b6001600160a01b0316336001600160a01b0316146107f85760405162461bcd60e51b815260040161028c906124fb565b6000610802610eca565b9050600061080e610f25565b905060005b858110156109275786868281811061082757fe5b905060200201602081019061083c9190611bae565b6001600160a01b0316826001600160a01b031663daf297b987878581811061086057fe5b90506020020160208101906108759190611bae565b6040518263ffffffff1660e01b815260040161089191906124aa565b60206040518083038186803b1580156108a957600080fd5b505afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190611bd4565b6001600160a01b03161461091f5761091f8787838181106108fe57fe5b90506020020160208101906109139190611bae565b8686848181106103ee57fe5b600101610813565b50610934868686866113e6565b505050505050565b610944610bc2565b6001600160a01b0316336001600160a01b0316146109745760405162461bcd60e51b815260040161028c906124fb565b6109868a8a8a8a8a8a8a8a8a8a61111f565b50505050505050505050565b6001600160a01b039081166000908152600160205260409020541690565b60608060006109be85610992565b90506001600160a01b0381166109e65760405162461bcd60e51b815260040161028c906124eb565b6109ee611a10565b6109f782610610565b90506000826001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611ec6565b9050600082604001516001600160581b0316118015610a9d5750610a9d8183604001516001600160581b0316611487565b15610aac57610aac83826114ea565b6040805160018082528183019092529060208083019080368337019050509450816000015185600081518110610ade57fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509350816020015160ff1660121415610b5e57610b40670de0b6b3a7640000610b3a8884611565565b906115a6565b84600081518110610b4d57fe5b602002602001018181525050610bb7565b610b9d670de0b6b3a7640000610b3a670de0b6b3a7640000610b3a866020015160ff16600a0a610b97878d61156590919063ffffffff16565b90611565565b84600081518110610baa57fe5b6020026020010181815250505b5050505b9250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1d57600080fd5b505afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611bd4565b905090565b610c62610bc2565b6001600160a01b0316336001600160a01b031614610c925760405162461bcd60e51b815260040161028c906124fb565b60005b818110156107bb5760016000848484818110610cad57fe5b9050602002016020810190610cc29190611bae565b6001600160a01b03168152602081019190915260400160002080546001600160a01b0319169055828282818110610cf557fe5b9050602002016020810190610d0a9190611bae565b6001600160a01b03167fc15eb25d807b570f4567baf6e97c7b26d58a7d0512dc85e8db15375a056b860460405160405180910390a2600101610c95565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080610d7783610992565b6001600160a01b0316141592915050565b6000546001600160a01b031690565b610d9f610bc2565b6001600160a01b0316336001600160a01b031614610dcf5760405162461bcd60e51b815260040161028c906124fb565b8483148015610ddd57508481145b610df95760405162461bcd60e51b815260040161028c906125db565b60005b85811015610e7757610e6f878783818110610e1357fe5b9050602002016020810190610e289190611bae565b868684818110610e3457fe5b9050602002016020810190610e499190611bae565b858585818110610e5557fe5b9050602002016020810190610e6a9190611ea8565b6115d8565b600101610dfc565b50505050505050565b610e88610bc2565b6001600160a01b0316336001600160a01b031614610eb85760405162461bcd60e51b815260040161028c906124fb565b610ec4848484846113e6565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a262904b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1d57600080fd5b60405163124fd3dd60e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063493f4f7490610f7590600390600401612609565b60206040518083038186803b158015610c1d57600080fd5b610f95611a30565b6040516356059ffb60e01b81526001600160a01b038316906356059ffb90610fc19086906004016124aa565b6102806040518083038186803b158015610fda57600080fd5b505afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110129190611c2c565b50905060005b600a81101561105a578181600a811061102d57fe5b60200201516001600160a01b0316856001600160a01b031614156110525750506107bb565b600101611018565b5060405162461bcd60e51b815260040161028c9061259b565b60405163daf297b960e01b81526001600160a01b0382169063daf297b99061109f9085906004016124aa565b60206040518083038186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190611bd4565b6001600160a01b0316836001600160a01b0316146107bb5760405162461bcd60e51b815260040161028c906125ab565b888714801561112d57508885145b801561113857508883145b801561114357508881145b61115f5760405162461bcd60e51b815260040161028c9061250b565b60005b8981101561138357600085858381811061117857fe5b905060200201602081019061118d9190611bae565b6001600160a01b031614156111b45760405162461bcd60e51b815260040161028c9061258b565b60006111da8c8c848181106111c557fe5b90506020020160208101906101649190611bae565b6001600160a01b0316146112005760405162461bcd60e51b815260040161028c9061255b565b6112298b8b8381811061120f57fe5b90506020020160208101906112249190611bae565b6117dc565b61127a8b8b8381811061123857fe5b905060200201602081019061124d9190611bae565b8a8a8481811061125957fe5b905060200201602081019061126e9190611bae565b898985818110610e5557fe5b84848281811061128657fe5b905060200201602081019061129b9190611bae565b600360008d8d858181106112ab57fe5b90506020020160208101906112c09190611bae565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905561133b85858381811061130057fe5b90506020020160208101906113159190611bae565b8c8c8481811061132157fe5b90506020020160208101906113369190611bae565b61186c565b600083838381811061134957fe5b905060200201602081019061135e9190611bae565b6001600160a01b03161461137b5761137b83838381811061130057fe5b600101611162565b5050505050505050505050565b600080546001600160a01b0319166001600160a01b0383161790556040517f285938205335d4bea92402795be7d763d8fdcf6b363506d1e419f026c37f44bd906113db9083906124aa565b60405180910390a150565b8281146114055760405162461bcd60e51b815260040161028c9061252b565b60005b838110156114805760006114218484848181106111c557fe5b6001600160a01b031614156114485760405162461bcd60e51b815260040161028c906125eb565b61147885858381811061145757fe5b905060200201602081019061146c9190611bae565b84848481811061132157fe5b600101611408565b5050505050565b600080828411156114a35761149c8484611987565b90506114b0565b6114ad8385611987565b90505b6114e0612710610b3a857f0000000000000000000000000000000000000000000000000000000000000000611565565b1090505b92915050565b6114f3826119af565b6001600160a01b0382166000818152600260205260409081902080546001600160a81b0316600160a81b6001600160581b03861602179055517fe4e8751d7ee9680c15b1a348b174e860467c86da7f4da037714ff62621947fb590611559908490612609565b60405180910390a25050565b600082611574575060006114e4565b8282028284828161158157fe5b041461159f5760405162461bcd60e51b815260040161028c9061256b565b9392505050565b60008082116115c75760405162461bcd60e51b815260040161028c9061253b565b8183816115d057fe5b049392505050565b6000811561169e576115e9846119af565b836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561162257600080fd5b505afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a9190611ec6565b9050836001600160a01b03167fe4e8751d7ee9680c15b1a348b174e860467c86da7f4da037714ff62621947fb5826040516116959190612609565b60405180910390a25b6040518060600160405280846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156116f157600080fd5b505afa158015611705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117299190611ee4565b60ff90811682526001600160581b038481166020938401526001600160a01b03888116600081815260028652604080822088518154988a0151998301516001600160a01b03199099169086161760ff60a01b1916600160a01b9990971698909802959095176001600160a81b0316600160a81b96909416959095029290921790945590519286169290917fd748ce6086753f34f4a44a74c6e4ca397bcb452a0ce8389ba826794b0bd77dc391a350505050565b6000816001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561181757600080fd5b505afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f9190611ec6565b1161060d5760405162461bcd60e51b815260040161028c9061254b565b600061187783610992565b6001600160a01b03161461189d5760405162461bcd60e51b815260040161028c906125bb565b816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156118d657600080fd5b505afa1580156118ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190e9190611ee4565b60ff166012146119305760405162461bcd60e51b815260040161028c9061257b565b6001600160a01b0382811660008181526001602052604080822080546001600160a01b0319169486169485179055517faa4ae250fb435bb4b31ed0b95822bc179fc6c5dd0c727c3ffe08d444025efd989190a35050565b6000828211156119a95760405162461bcd60e51b815260040161028c9061251b565b50900390565b6119b7610d88565b6001600160a01b031663e4e67c0f826040518263ffffffff1660e01b81526004016119e291906124aa565b600060405180830381600087803b1580156119fc57600080fd5b505af1158015611480573d6000803e3d6000fd5b604080516060810182526000808252602082018190529181019190915290565b604051806101400160405280600a906020820280368337509192915050565b80356114e4816126a4565b80516114e4816126a4565b600082601f830112611a7657600080fd5b600a611a89611a848261263d565b612617565b91508183856020840282011115611a9f57600080fd5b60005b83811015611acb5781611ab58882611a5a565b8452506020928301929190910190600101611aa2565b5050505092915050565b60008083601f840112611ae757600080fd5b5081356001600160401b03811115611afe57600080fd5b602083019150836020820283011115610bbb57600080fd5b600082601f830112611b2757600080fd5b600a611b35611a848261263d565b91508183856020840282011115611b4b57600080fd5b60005b83811015611acb5781611b618882611b82565b8452506020928301929190910190600101611b4e565b80356114e4816126b8565b80516114e4816126c1565b80356114e4816126ca565b80516114e4816126ca565b80516114e4816126d3565b600060208284031215611bc057600080fd5b6000611bcc8484611a4f565b949350505050565b600060208284031215611be657600080fd5b6000611bcc8484611a5a565b60008060408385031215611c0557600080fd5b6000611c118585611a4f565b9250506020611c2285828601611b8d565b9150509250929050565b6000806102808385031215611c4057600080fd5b6000611c4c8585611a65565b925050610140611c2285828601611b16565b60008060208385031215611c7157600080fd5b82356001600160401b03811115611c8757600080fd5b611c9385828601611ad5565b92509250509250929050565b60008060008060408587031215611cb557600080fd5b84356001600160401b03811115611ccb57600080fd5b611cd787828801611ad5565b945094505060208501356001600160401b03811115611cf557600080fd5b611d0187828801611ad5565b95989497509550505050565b60008060008060008060608789031215611d2657600080fd5b86356001600160401b03811115611d3c57600080fd5b611d4889828a01611ad5565b965096505060208701356001600160401b03811115611d6657600080fd5b611d7289828a01611ad5565b945094505060408701356001600160401b03811115611d9057600080fd5b611d9c89828a01611ad5565b92509250509295509295509295565b60008060008060008060008060008060a08b8d031215611dca57600080fd5b8a356001600160401b03811115611de057600080fd5b611dec8d828e01611ad5565b9a509a505060208b01356001600160401b03811115611e0a57600080fd5b611e168d828e01611ad5565b985098505060408b01356001600160401b03811115611e3457600080fd5b611e408d828e01611ad5565b965096505060608b01356001600160401b03811115611e5e57600080fd5b611e6a8d828e01611ad5565b945094505060808b01356001600160401b03811115611e8857600080fd5b611e948d828e01611ad5565b92509250509295989b9194979a5092959850565b600060208284031215611eba57600080fd5b6000611bcc8484611b77565b600060208284031215611ed857600080fd5b6000611bcc8484611b98565b600060208284031215611ef657600080fd5b6000611bcc8484611ba3565b6000611f0e8383611f22565b505060200190565b6000611f0e838361248f565b611f2b8161266d565b82525050565b6000611f3c82612660565b611f468185612664565b9350611f518361265a565b8060005b83811015611f7f578151611f698882611f02565b9750611f748361265a565b925050600101611f55565b509495945050505050565b6000611f9582612660565b611f9f8185612664565b9350611faa8361265a565b8060005b83811015611f7f578151611fc28882611f16565b9750611fcd8361265a565b925050600101611fae565b611f2b81612678565b6000611fee603283612664565b7f63616c63556e6465726c79696e6756616c7565733a205f64657269766174697681527119481a5cc81b9bdd081cdd5c1c1bdc9d195960721b602082015260400192915050565b6000612042604983612664565b7f6f6e6c7946756e644465706c6f7965724f776e65723a204f6e6c79207468652081527f46756e644465706c6f796572206f776e65722063616e2063616c6c207468697360208201526810333ab731ba34b7b760b91b604082015260600192915050565b60006120b3601a83612664565b7f5f5f616464506f6f6c733a20556e657175616c20617272617973000000000000815260200192915050565b60006120ec601e83612664565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000612125602083612664565b7f5f5f6164644761756765546f6b656e733a20556e657175616c20617272617973815260200192915050565b600061215e601a83612664565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000612197602983612664565b7f5f5f76616c6964617465506f6f6c436f6d7061746962696c6974793a20496e638152686f6d70617469626c6560b81b602082015260400192915050565b60006121e2601e83612664565b7f5f5f616464506f6f6c733a20416c726561647920726567697374657265640000815260200192915050565b600061221b602183612664565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b600061225e601f83612664565b7f5f5f616464446572697661746976653a204e6f742031382d646563696d616c00815260200192915050565b6000612297601983612664565b7f5f5f616464506f6f6c733a20456d707479206c70546f6b656e00000000000000815260200192915050565b60006122d0602a83612664565b7f5f5f76616c696461746547617567654d61696e52656769737472793a20496e76815269616c696420676175676560b01b602082015260400192915050565b600061231c603583612664565b7f5f5f76616c696461746547617567654d657461706f6f6c466163746f727952658152746769737472793a20496e76616c696420676175676560581b602082015260400192915050565b6000612373601f83612664565b7f5f5f616464446572697661746976653a20416c72656164792065786973747300815260200192915050565b60006123ac601883612664565b7f616464506f6f6c733a20496e76616c696420696e707574730000000000000000815260200192915050565b60006123e5601e83612664565b7f757064617465506f6f6c496e666f3a20556e657175616c206172726179730000815260200192915050565b600061241e602583612664565b7f5f5f6164644761756765546f6b656e733a20506f6f6c206e6f742072656769738152641d195c995960da1b602082015260400192915050565b805160608301906124698482611f22565b50602082015161247c60208501826124a1565b506040820151610ec46040850182612498565b611f2b8161268f565b611f2b81612698565b611f2b81612692565b602081016114e48284611f22565b604080825281016124c98185611f31565b90508181036020830152611bcc8184611f8a565b602081016114e48284611fd8565b602080825281016114e481611fe1565b602080825281016114e481612035565b602080825281016114e4816120a6565b602080825281016114e4816120df565b602080825281016114e481612118565b602080825281016114e481612151565b602080825281016114e48161218a565b602080825281016114e4816121d5565b602080825281016114e48161220e565b602080825281016114e481612251565b602080825281016114e48161228a565b602080825281016114e4816122c3565b602080825281016114e48161230f565b602080825281016114e481612366565b602080825281016114e48161239f565b602080825281016114e4816123d8565b602080825281016114e481612411565b606081016114e48284612458565b602081016114e4828461248f565b6040518181016001600160401b038111828210171561263557600080fd5b604052919050565b60006001600160401b0382111561265357600080fd5b5060200290565b60200190565b5190565b90815260200190565b60006114e482612683565b151590565b600f0b90565b6001600160a01b031690565b90565b60ff1690565b6001600160581b031690565b6126ad8161266d565b811461060d57600080fd5b6126ad81612678565b6126ad8161267d565b6126ad8161268f565b6126ad8161269256fea164736f6c634300060c000a",
    "sourceMap": "941:22144:242:-:0;;;2659:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;864:29:358;;;;;;;;2874:67:242;;;;::::1;::::0;2951::::1;::::0;;;3029:31:::1;3049:10:::0;3029:19:::1;:31::i;:::-;2659:408:::0;;;;941:22144;;18001:158;18072:14;:31;;-1:-1:-1;;;;;;18072:31:242;-1:-1:-1;;;;;18072:31:242;;;;;18119:33;;;;;;18072:31;;18119:33;:::i;:::-;;;;;;;;18001:158;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;:::i;:::-;68:71;;;;:::o;146:134::-;224:13;;242:33;224:13;242:33;:::i;287:672::-;;;;;453:3;441:9;432:7;428:23;424:33;421:2;;;470:1;467;460:12;421:2;505:1;522:64;578:7;558:9;522:64;:::i;:::-;512:74;;484:108;623:2;641:64;697:7;688:6;677:9;673:22;641:64;:::i;:::-;631:74;;602:109;742:2;760:64;816:7;807:6;796:9;792:22;760:64;:::i;:::-;750:74;;721:109;861:2;879:64;935:7;926:6;915:9;911:22;879:64;:::i;:::-;869:74;;840:109;415:544;;;;;;;:::o;966:113::-;1049:24;1067:5;1049:24;:::i;:::-;1044:3;1037:37;1031:48;;:::o;1086:222::-;1213:2;1198:18;;1227:71;1202:9;1271:6;1227:71;:::i;1315:91::-;;-1:-1;;;;;1475:54;;1377:24;1458:76::o;1541:72::-;1603:5;1586:27::o;1620:117::-;1689:24;1707:5;1689:24;:::i;:::-;1682:5;1679:35;1669:2;;1728:1;1725;1718:12;1669:2;1663:74;:::o;1744:117::-;1813:24;1831:5;1813:24;:::i;1787:74::-;941:22144:242;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063727212f6116100975780639be918e6116100665780639be918e614610206578063bb5c7b1514610226578063f044506b1461022e578063f6d959c31461024157610100565b8063727212f6146101c2578063893d20e8146101e35780638f72b136146101eb57806397c0ac87146101fe57610100565b80634b164140116100d35780634b1641401461017657806351e7d01f14610189578063540eaddc1461019c5780636a2175c0146101af57610100565b80630254f0541461010557806305ecc2d41461011a57806306bfa9381461012d5780631f5bce5514610156575b600080fd5b610118610113366004611dab565b610254565b005b610118610128366004611bae565b6105cc565b61014061013b366004611bae565b610610565b60405161014d91906125fb565b60405180910390f35b610169610164366004611bae565b61066e565b60405161014d91906124aa565b610118610184366004611c5e565b61068c565b610118610197366004611c9f565b6107c0565b6101186101aa366004611dab565b61093c565b6101696101bd366004611bae565b610992565b6101d56101d0366004611bf2565b6109b0565b60405161014d9291906124b8565b610169610bc2565b6101186101f9366004611c5e565b610c5a565b610169610d47565b610219610214366004611bae565b610d6b565b60405161014d91906124dd565b610169610d88565b61011861023c366004611d0d565b610d97565b61011861024f366004611c9f565b610e80565b61025c610bc2565b6001600160a01b0316336001600160a01b0316146102955760405162461bcd60e51b815260040161028c906124fb565b60405180910390fd5b600061029f610eca565b905060006102ab610f25565b905060005b8b8110156105ab57826001600160a01b031663379510498e8e848181106102d357fe5b90506020020160208101906102e89190611bae565b6040518263ffffffff1660e01b815260040161030491906124aa565b60206040518083038186803b15801561031c57600080fd5b505afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190611bd4565b6001600160a01b031687878381811061036957fe5b905060200201602081019061037e9190611bae565b6001600160a01b0316141561040e57600085858381811061039b57fe5b90506020020160208101906103b09190611bae565b6001600160a01b031614610409576104098585838181106103cd57fe5b90506020020160208101906103e29190611bae565b8e8e848181106103ee57fe5b90506020020160208101906104039190611bae565b85610f8d565b6105a3565b8c8c8281811061041a57fe5b905060200201602081019061042f9190611bae565b6001600160a01b031687878381811061044457fe5b90506020020160208101906104599190611bae565b6001600160a01b031614801561050a57506000826001600160a01b031663940494f18f8f8581811061048757fe5b905060200201602081019061049c9190611bae565b6040518263ffffffff1660e01b81526004016104b891906124aa565b60206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190611ec6565b115b1561058b57600085858381811061051d57fe5b90506020020160208101906105329190611bae565b6001600160a01b0316146104095761040985858381811061054f57fe5b90506020020160208101906105649190611bae565b8e8e8481811061057057fe5b90506020020160208101906105859190611bae565b84611073565b60405162461bcd60e51b815260040161028c906125cb565b6001016102b0565b506105be8c8c8c8c8c8c8c8c8c8c61111f565b505050505050505050505050565b6105d4610bc2565b6001600160a01b0316336001600160a01b0316146106045760405162461bcd60e51b815260040161028c906124fb565b61060d81611390565b50565b610618611a10565b506001600160a01b03908116600090815260026020908152604091829020825160608101845290549384168152600160a01b840460ff1691810191909152600160a81b9092046001600160581b03169082015290565b6001600160a01b039081166000908152600360205260409020541690565b610694610bc2565b6001600160a01b0316336001600160a01b0316146106c45760405162461bcd60e51b815260040161028c906124fb565b60005b818110156107bb57600260008484848181106106df57fe5b90506020020160208101906106f49190611bae565b6001600160a01b031681526020810191909152604001600090812081905560039084848481811061072157fe5b90506020020160208101906107369190611bae565b6001600160a01b03168152602081019190915260400160002080546001600160a01b031916905582828281811061076957fe5b905060200201602081019061077e9190611bae565b6001600160a01b03167f4106dfdaa577573db51c0ca93f766dbedfa0758faa2e7f5bcdb7c142be803c3f60405160405180910390a26001016106c7565b505050565b6107c8610bc2565b6001600160a01b0316336001600160a01b0316146107f85760405162461bcd60e51b815260040161028c906124fb565b6000610802610eca565b9050600061080e610f25565b905060005b858110156109275786868281811061082757fe5b905060200201602081019061083c9190611bae565b6001600160a01b0316826001600160a01b031663daf297b987878581811061086057fe5b90506020020160208101906108759190611bae565b6040518263ffffffff1660e01b815260040161089191906124aa565b60206040518083038186803b1580156108a957600080fd5b505afa1580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190611bd4565b6001600160a01b03161461091f5761091f8787838181106108fe57fe5b90506020020160208101906109139190611bae565b8686848181106103ee57fe5b600101610813565b50610934868686866113e6565b505050505050565b610944610bc2565b6001600160a01b0316336001600160a01b0316146109745760405162461bcd60e51b815260040161028c906124fb565b6109868a8a8a8a8a8a8a8a8a8a61111f565b50505050505050505050565b6001600160a01b039081166000908152600160205260409020541690565b60608060006109be85610992565b90506001600160a01b0381166109e65760405162461bcd60e51b815260040161028c906124eb565b6109ee611a10565b6109f782610610565b90506000826001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611ec6565b9050600082604001516001600160581b0316118015610a9d5750610a9d8183604001516001600160581b0316611487565b15610aac57610aac83826114ea565b6040805160018082528183019092529060208083019080368337019050509450816000015185600081518110610ade57fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509350816020015160ff1660121415610b5e57610b40670de0b6b3a7640000610b3a8884611565565b906115a6565b84600081518110610b4d57fe5b602002602001018181525050610bb7565b610b9d670de0b6b3a7640000610b3a670de0b6b3a7640000610b3a866020015160ff16600a0a610b97878d61156590919063ffffffff16565b90611565565b84600081518110610baa57fe5b6020026020010181815250505b5050505b9250929050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1d57600080fd5b505afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611bd4565b905090565b610c62610bc2565b6001600160a01b0316336001600160a01b031614610c925760405162461bcd60e51b815260040161028c906124fb565b60005b818110156107bb5760016000848484818110610cad57fe5b9050602002016020810190610cc29190611bae565b6001600160a01b03168152602081019190915260400160002080546001600160a01b0319169055828282818110610cf557fe5b9050602002016020810190610d0a9190611bae565b6001600160a01b03167fc15eb25d807b570f4567baf6e97c7b26d58a7d0512dc85e8db15375a056b860460405160405180910390a2600101610c95565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080610d7783610992565b6001600160a01b0316141592915050565b6000546001600160a01b031690565b610d9f610bc2565b6001600160a01b0316336001600160a01b031614610dcf5760405162461bcd60e51b815260040161028c906124fb565b8483148015610ddd57508481145b610df95760405162461bcd60e51b815260040161028c906125db565b60005b85811015610e7757610e6f878783818110610e1357fe5b9050602002016020810190610e289190611bae565b868684818110610e3457fe5b9050602002016020810190610e499190611bae565b858585818110610e5557fe5b9050602002016020810190610e6a9190611ea8565b6115d8565b600101610dfc565b50505050505050565b610e88610bc2565b6001600160a01b0316336001600160a01b031614610eb85760405162461bcd60e51b815260040161028c906124fb565b610ec4848484846113e6565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a262904b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1d57600080fd5b60405163124fd3dd60e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063493f4f7490610f7590600390600401612609565b60206040518083038186803b158015610c1d57600080fd5b610f95611a30565b6040516356059ffb60e01b81526001600160a01b038316906356059ffb90610fc19086906004016124aa565b6102806040518083038186803b158015610fda57600080fd5b505afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110129190611c2c565b50905060005b600a81101561105a578181600a811061102d57fe5b60200201516001600160a01b0316856001600160a01b031614156110525750506107bb565b600101611018565b5060405162461bcd60e51b815260040161028c9061259b565b60405163daf297b960e01b81526001600160a01b0382169063daf297b99061109f9085906004016124aa565b60206040518083038186803b1580156110b757600080fd5b505afa1580156110cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ef9190611bd4565b6001600160a01b0316836001600160a01b0316146107bb5760405162461bcd60e51b815260040161028c906125ab565b888714801561112d57508885145b801561113857508883145b801561114357508881145b61115f5760405162461bcd60e51b815260040161028c9061250b565b60005b8981101561138357600085858381811061117857fe5b905060200201602081019061118d9190611bae565b6001600160a01b031614156111b45760405162461bcd60e51b815260040161028c9061258b565b60006111da8c8c848181106111c557fe5b90506020020160208101906101649190611bae565b6001600160a01b0316146112005760405162461bcd60e51b815260040161028c9061255b565b6112298b8b8381811061120f57fe5b90506020020160208101906112249190611bae565b6117dc565b61127a8b8b8381811061123857fe5b905060200201602081019061124d9190611bae565b8a8a8481811061125957fe5b905060200201602081019061126e9190611bae565b898985818110610e5557fe5b84848281811061128657fe5b905060200201602081019061129b9190611bae565b600360008d8d858181106112ab57fe5b90506020020160208101906112c09190611bae565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905561133b85858381811061130057fe5b90506020020160208101906113159190611bae565b8c8c8481811061132157fe5b90506020020160208101906113369190611bae565b61186c565b600083838381811061134957fe5b905060200201602081019061135e9190611bae565b6001600160a01b03161461137b5761137b83838381811061130057fe5b600101611162565b5050505050505050505050565b600080546001600160a01b0319166001600160a01b0383161790556040517f285938205335d4bea92402795be7d763d8fdcf6b363506d1e419f026c37f44bd906113db9083906124aa565b60405180910390a150565b8281146114055760405162461bcd60e51b815260040161028c9061252b565b60005b838110156114805760006114218484848181106111c557fe5b6001600160a01b031614156114485760405162461bcd60e51b815260040161028c906125eb565b61147885858381811061145757fe5b905060200201602081019061146c9190611bae565b84848481811061132157fe5b600101611408565b5050505050565b600080828411156114a35761149c8484611987565b90506114b0565b6114ad8385611987565b90505b6114e0612710610b3a857f0000000000000000000000000000000000000000000000000000000000000000611565565b1090505b92915050565b6114f3826119af565b6001600160a01b0382166000818152600260205260409081902080546001600160a81b0316600160a81b6001600160581b03861602179055517fe4e8751d7ee9680c15b1a348b174e860467c86da7f4da037714ff62621947fb590611559908490612609565b60405180910390a25050565b600082611574575060006114e4565b8282028284828161158157fe5b041461159f5760405162461bcd60e51b815260040161028c9061256b565b9392505050565b60008082116115c75760405162461bcd60e51b815260040161028c9061253b565b8183816115d057fe5b049392505050565b6000811561169e576115e9846119af565b836001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561162257600080fd5b505afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a9190611ec6565b9050836001600160a01b03167fe4e8751d7ee9680c15b1a348b174e860467c86da7f4da037714ff62621947fb5826040516116959190612609565b60405180910390a25b6040518060600160405280846001600160a01b03168152602001846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156116f157600080fd5b505afa158015611705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117299190611ee4565b60ff90811682526001600160581b038481166020938401526001600160a01b03888116600081815260028652604080822088518154988a0151998301516001600160a01b03199099169086161760ff60a01b1916600160a01b9990971698909802959095176001600160a81b0316600160a81b96909416959095029290921790945590519286169290917fd748ce6086753f34f4a44a74c6e4ca397bcb452a0ce8389ba826794b0bd77dc391a350505050565b6000816001600160a01b031663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561181757600080fd5b505afa15801561182b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184f9190611ec6565b1161060d5760405162461bcd60e51b815260040161028c9061254b565b600061187783610992565b6001600160a01b03161461189d5760405162461bcd60e51b815260040161028c906125bb565b816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156118d657600080fd5b505afa1580156118ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190e9190611ee4565b60ff166012146119305760405162461bcd60e51b815260040161028c9061257b565b6001600160a01b0382811660008181526001602052604080822080546001600160a01b0319169486169485179055517faa4ae250fb435bb4b31ed0b95822bc179fc6c5dd0c727c3ffe08d444025efd989190a35050565b6000828211156119a95760405162461bcd60e51b815260040161028c9061251b565b50900390565b6119b7610d88565b6001600160a01b031663e4e67c0f826040518263ffffffff1660e01b81526004016119e291906124aa565b600060405180830381600087803b1580156119fc57600080fd5b505af1158015611480573d6000803e3d6000fd5b604080516060810182526000808252602082018190529181019190915290565b604051806101400160405280600a906020820280368337509192915050565b80356114e4816126a4565b80516114e4816126a4565b600082601f830112611a7657600080fd5b600a611a89611a848261263d565b612617565b91508183856020840282011115611a9f57600080fd5b60005b83811015611acb5781611ab58882611a5a565b8452506020928301929190910190600101611aa2565b5050505092915050565b60008083601f840112611ae757600080fd5b5081356001600160401b03811115611afe57600080fd5b602083019150836020820283011115610bbb57600080fd5b600082601f830112611b2757600080fd5b600a611b35611a848261263d565b91508183856020840282011115611b4b57600080fd5b60005b83811015611acb5781611b618882611b82565b8452506020928301929190910190600101611b4e565b80356114e4816126b8565b80516114e4816126c1565b80356114e4816126ca565b80516114e4816126ca565b80516114e4816126d3565b600060208284031215611bc057600080fd5b6000611bcc8484611a4f565b949350505050565b600060208284031215611be657600080fd5b6000611bcc8484611a5a565b60008060408385031215611c0557600080fd5b6000611c118585611a4f565b9250506020611c2285828601611b8d565b9150509250929050565b6000806102808385031215611c4057600080fd5b6000611c4c8585611a65565b925050610140611c2285828601611b16565b60008060208385031215611c7157600080fd5b82356001600160401b03811115611c8757600080fd5b611c9385828601611ad5565b92509250509250929050565b60008060008060408587031215611cb557600080fd5b84356001600160401b03811115611ccb57600080fd5b611cd787828801611ad5565b945094505060208501356001600160401b03811115611cf557600080fd5b611d0187828801611ad5565b95989497509550505050565b60008060008060008060608789031215611d2657600080fd5b86356001600160401b03811115611d3c57600080fd5b611d4889828a01611ad5565b965096505060208701356001600160401b03811115611d6657600080fd5b611d7289828a01611ad5565b945094505060408701356001600160401b03811115611d9057600080fd5b611d9c89828a01611ad5565b92509250509295509295509295565b60008060008060008060008060008060a08b8d031215611dca57600080fd5b8a356001600160401b03811115611de057600080fd5b611dec8d828e01611ad5565b9a509a505060208b01356001600160401b03811115611e0a57600080fd5b611e168d828e01611ad5565b985098505060408b01356001600160401b03811115611e3457600080fd5b611e408d828e01611ad5565b965096505060608b01356001600160401b03811115611e5e57600080fd5b611e6a8d828e01611ad5565b945094505060808b01356001600160401b03811115611e8857600080fd5b611e948d828e01611ad5565b92509250509295989b9194979a5092959850565b600060208284031215611eba57600080fd5b6000611bcc8484611b77565b600060208284031215611ed857600080fd5b6000611bcc8484611b98565b600060208284031215611ef657600080fd5b6000611bcc8484611ba3565b6000611f0e8383611f22565b505060200190565b6000611f0e838361248f565b611f2b8161266d565b82525050565b6000611f3c82612660565b611f468185612664565b9350611f518361265a565b8060005b83811015611f7f578151611f698882611f02565b9750611f748361265a565b925050600101611f55565b509495945050505050565b6000611f9582612660565b611f9f8185612664565b9350611faa8361265a565b8060005b83811015611f7f578151611fc28882611f16565b9750611fcd8361265a565b925050600101611fae565b611f2b81612678565b6000611fee603283612664565b7f63616c63556e6465726c79696e6756616c7565733a205f64657269766174697681527119481a5cc81b9bdd081cdd5c1c1bdc9d195960721b602082015260400192915050565b6000612042604983612664565b7f6f6e6c7946756e644465706c6f7965724f776e65723a204f6e6c79207468652081527f46756e644465706c6f796572206f776e65722063616e2063616c6c207468697360208201526810333ab731ba34b7b760b91b604082015260600192915050565b60006120b3601a83612664565b7f5f5f616464506f6f6c733a20556e657175616c20617272617973000000000000815260200192915050565b60006120ec601e83612664565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000612125602083612664565b7f5f5f6164644761756765546f6b656e733a20556e657175616c20617272617973815260200192915050565b600061215e601a83612664565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000612197602983612664565b7f5f5f76616c6964617465506f6f6c436f6d7061746962696c6974793a20496e638152686f6d70617469626c6560b81b602082015260400192915050565b60006121e2601e83612664565b7f5f5f616464506f6f6c733a20416c726561647920726567697374657265640000815260200192915050565b600061221b602183612664565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b600061225e601f83612664565b7f5f5f616464446572697661746976653a204e6f742031382d646563696d616c00815260200192915050565b6000612297601983612664565b7f5f5f616464506f6f6c733a20456d707479206c70546f6b656e00000000000000815260200192915050565b60006122d0602a83612664565b7f5f5f76616c696461746547617567654d61696e52656769737472793a20496e76815269616c696420676175676560b01b602082015260400192915050565b600061231c603583612664565b7f5f5f76616c696461746547617567654d657461706f6f6c466163746f727952658152746769737472793a20496e76616c696420676175676560581b602082015260400192915050565b6000612373601f83612664565b7f5f5f616464446572697661746976653a20416c72656164792065786973747300815260200192915050565b60006123ac601883612664565b7f616464506f6f6c733a20496e76616c696420696e707574730000000000000000815260200192915050565b60006123e5601e83612664565b7f757064617465506f6f6c496e666f3a20556e657175616c206172726179730000815260200192915050565b600061241e602583612664565b7f5f5f6164644761756765546f6b656e733a20506f6f6c206e6f742072656769738152641d195c995960da1b602082015260400192915050565b805160608301906124698482611f22565b50602082015161247c60208501826124a1565b506040820151610ec46040850182612498565b611f2b8161268f565b611f2b81612698565b611f2b81612692565b602081016114e48284611f22565b604080825281016124c98185611f31565b90508181036020830152611bcc8184611f8a565b602081016114e48284611fd8565b602080825281016114e481611fe1565b602080825281016114e481612035565b602080825281016114e4816120a6565b602080825281016114e4816120df565b602080825281016114e481612118565b602080825281016114e481612151565b602080825281016114e48161218a565b602080825281016114e4816121d5565b602080825281016114e48161220e565b602080825281016114e481612251565b602080825281016114e48161228a565b602080825281016114e4816122c3565b602080825281016114e48161230f565b602080825281016114e481612366565b602080825281016114e48161239f565b602080825281016114e4816123d8565b602080825281016114e481612411565b606081016114e48284612458565b602081016114e4828461248f565b6040518181016001600160401b038111828210171561263557600080fd5b604052919050565b60006001600160401b0382111561265357600080fd5b5060200290565b60200190565b5190565b90815260200190565b60006114e482612683565b151590565b600f0b90565b6001600160a01b031690565b90565b60ff1690565b6001600160581b031690565b6126ad8161266d565b811461060d57600080fd5b6126ad81612678565b6126ad8161267d565b6126ad8161268f565b6126ad8161269256fea164736f6c634300060c000a",
    "sourceMap": "941:22144:242:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9015:1677;;;;;;:::i;:::-;;:::i;:::-;;13296:134;;;;;;:::i;:::-;;:::i;22682:129::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22424:125;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12913:279::-;;;;;;:::i;:::-;;:::i;6682:609::-;;;;;;:::i;:::-;;:::i;11622:463::-;;;;;;:::i;:::-;;:::i;22943:140::-;;;;;;:::i;:::-;;:::i;3465:1940::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1064:120:358:-;;;:::i;12400:272:242:-;;;;;;:::i;:::-;;:::i;1378:108:358:-;;;:::i;5578:159:242:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22193:108::-;;;:::i;13769:554::-;;;;;;:::i;:::-;;:::i;7851:209::-;;;;;;:::i;:::-;;:::i;9015:1677::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;;;;;;;;;9293:35:242::1;9331:27;:25;:27::i;:::-;9293:65;;9368:45;9416:38;:36;:38::i;:::-;9368:86;;9470:9;9465:1049;9481:17:::0;;::::1;9465:1049;;;9609:16;-1:-1:-1::0;;;;;9609:29:242::1;;9639:6;;9646:1;9639:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;9609:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9593:56:242::1;:9;;9603:1;9593:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9593:56:242::1;;9589:915;;;9734:1;9707:12:::0;;9720:1;9707:15;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9707:29:242::1;;9703:149;;9760:73;9788:12;;9801:1;9788:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;9805:6;;9812:1;9805:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;9816:16;9760:27;:73::i;:::-;9589:915;;;9892:6;;9899:1;9892:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9876:25:242::1;:9;;9886:1;9876:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9876:25:242::1;;:71;;;;;9946:1;9905:15;-1:-1:-1::0;;;;;9905:27:242::1;;9933:6;;9940:1;9933:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;9905:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;9876:71;9872:632;;;10195:1;10168:12:::0;;10181:1;10168:15;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10168:29:242::1;;10164:253;;10221:177;10285:12;;10298:1;10285:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;10326:6;;10333:1;10326:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;10361:15;10221:38;:177::i;9872:632::-;10455:34;;-1:-1:-1::0;;;10455:34:242::1;;;;;;;:::i;9872:632::-;9500:3;;9465:1049;;;;10524:161;10548:6;;10568:21;;10603:23;;10640:9;;10663:12;;10524:10;:161::i;:::-;798:1:358;;9015:1677:242::0;;;;;;;;;;:::o;13296:134::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;13388:35:242::1;13408:14;13388:19;:35::i;:::-;13296:134:::0;:::o;22682:129::-;22739:25;;:::i;:::-;-1:-1:-1;;;;;;22783:21:242;;;;;;;:14;:21;;;;;;;;;22776:28;;;;;;;;;;;;;;-1:-1:-1;;;22776:28:242;;;;;;;;;;;-1:-1:-1;;;22776:28:242;;;-1:-1:-1;;;;;22776:28:242;;;;;;22682:129::o;22424:125::-;-1:-1:-1;;;;;22522:20:242;;;22487:16;22522:20;;;:13;:20;;;;;;;;22424:125::o;12913:279::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;13007:9:242::1;13002:184;13018:17:::0;;::::1;13002:184;;;13063:14;:25;13078:6;;13085:1;13078:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13063:25:242::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13063:25:242;;;13056:32;;;13109:13:::1;::::0;13123:6;;13130:1;13123:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13109:24:242::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;13109:24:242;13102:31;;-1:-1:-1;;;;;;13102:31:242::1;::::0;;13165:6;;13172:1;13165:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13153:22:242::1;;;;;;;;;;;13037:3;;13002:184;;;;12913:279:::0;;:::o;6682:609::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;6827:35:242::1;6865:27;:25;:27::i;:::-;6827:65;;6902:45;6950:38;:36;:38::i;:::-;6902:86;;7004:9;6999:237;7015:23:::0;;::::1;6999:237;;;7103:12;;7116:1;7103:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7063:55:242::1;:15;-1:-1:-1::0;;;;;7063:25:242::1;;7089:6;;7096:1;7089:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;7063:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7063:55:242::1;;7059:167;;7138:73;7166:12;;7179:1;7166:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;7183:6;;7190:1;7183:9;;;;;;7138:73;7040:3;;6999:237;;;;7246:38;7263:12;;7277:6;;7246:16;:38::i;:::-;798:1:358;;6682:609:242::0;;;;:::o;11622:463::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;11917:161:242::1;11941:6;;11961:21;;11996:23;;12033:9;;12056:12;;11917:10;:161::i;:::-;11622:463:::0;;;;;;;;;;:::o;22943:140::-;-1:-1:-1;;;;;23047:29:242;;;23015:13;23047:29;;;:16;:29;;;;;;;;22943:140::o;3465:1940::-;3594:29;3625:35;3676:12;3691:33;3712:11;3691:20;:33::i;:::-;3676:48;-1:-1:-1;;;;;;3742:18:242;;3734:81;;;;-1:-1:-1;;;3734:81:242;;;;;;;:::i;:::-;3826:24;;:::i;:::-;3853:17;3865:4;3853:11;:17::i;:::-;3826:44;;3881:20;3924:4;-1:-1:-1;;;;;3904:43:242;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3881:68;;4534:1;4497:8;:34;;;-1:-1:-1;;;;;4497:38:242;;:193;;;;;4551:139;4603:12;4641:8;:34;;;-1:-1:-1;;;;;4633:43:242;4551:34;:139::i;:::-;4480:295;;;4715:49;4745:4;4751:12;4715:29;:49::i;:::-;4800:16;;;4814:1;4800:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4800:16:242;4785:31;;4844:8;:28;;;4826:12;4839:1;4826:15;;;;;;;;-1:-1:-1;;;;;4826:46:242;;;;:15;;;;;;;;;;:46;4904:16;;;4918:1;4904:16;;;;;;;;;;;;;;4826:15;4904:16;;;;;-1:-1:-1;4904:16:242;4883:37;;4934:8;:36;;;:42;;4974:2;4934:42;4930:417;;;5016:59;1663:6;5016:35;:17;5038:12;5016:21;:35::i;:::-;:39;;:59::i;:::-;4992:18;5011:1;4992:21;;;;;;;;;;;;;:83;;;;;4930:417;;;5130:206;1663:6;5130:165;1663:6;5130:124;5216:8;:36;;;5208:45;;5204:2;:49;5130:52;5169:12;5130:17;:38;;:52;;;;:::i;:::-;:73;;:124::i;:206::-;5106:18;5125:1;5106:21;;;;;;;;;;;;;:230;;;;;4930:417;5357:41;;;3465:1940;;;;;;:::o;1064:120:358:-;1105:14;1152:13;-1:-1:-1;;;;;1138:37:358;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1131:46;;1064:120;:::o;12400:272:242:-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;12506:9:242::1;12501:165;12517:23:::0;;::::1;12501:165;;;12568:16;:33;12585:12;;12598:1;12585:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12568:33:242::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;12568:33:242;12561:40;;-1:-1:-1;;;;;;12561:40:242::1;::::0;;12639:12;;12652:1;12639:15;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12621:34:242::1;;;;;;;;;;;12542:3;;12501:165;;1378:108:358::0;1466:13;1378:108;:::o;5578:159:242:-;5652:17;;5688:28;5709:6;5688:20;:28::i;:::-;-1:-1:-1;;;;;5688:42:242;;;;5578:159;-1:-1:-1;;5578:159:242:o;22193:108::-;22243:18;22280:14;-1:-1:-1;;;;;22280:14:242;22193:108;:::o;13769:554::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;13995:45:242;;::::1;:112:::0;::::1;;;-1:-1:-1::0;14060:47:242;;::::1;13995:112;13974:189;;;;-1:-1:-1::0;;;13974:189:242::1;;;;;;;:::i;:::-;14179:9;14174:143;14190:17:::0;;::::1;14174:143;;;14228:78;14242:6;;14249:1;14242:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;14253:21;;14275:1;14253:24;;;;;;;;;;;;;;;;;;;;:::i;:::-;14279:23;;14303:1;14279:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;14228:13;:78::i;:::-;14209:3;;14174:143;;;;13769:554:::0;;;;;;:::o;7851:209::-;679:10:358;:8;:10::i;:::-;-1:-1:-1;;;;;665:24:358;:10;-1:-1:-1;;;;;665:24:358;;644:144;;;;-1:-1:-1;;;644:144:358;;;;;;;:::i;:::-;8015:38:242::1;8032:12;;8046:6;;8015:16;:38::i;:::-;7851:209:::0;;;;:::o;17174:173::-;17233:28;17299:25;-1:-1:-1;;;;;17299:38:242;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17425:311;17640:75;;-1:-1:-1;;;17640:75:242;;17519:39;;-1:-1:-1;;;;;17640:25:242;:37;;;;:75;;1540:1;;17640:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19679:441;19843:25;;:::i;:::-;19874:39;;-1:-1:-1;;;19874:39:242;;-1:-1:-1;;;;;19874:32:242;;;;;:39;;19907:5;;19874:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19842:71;;;19928:9;19923:128;19943:13;19939:1;:17;19923:128;;;19991:6;19998:1;19991:9;;;;;;;;;;;-1:-1:-1;;;;;19981:19:242;:6;-1:-1:-1;;;;;19981:19:242;;19977:64;;;20020:7;;;;19977:64;19958:3;;19923:128;;;;20061:52;;-1:-1:-1;;;20061:52:242;;;;;;;:::i;20205:362::-;20432:49;;-1:-1:-1;;;20432:49:242;;-1:-1:-1;;;;;20432:42:242;;;;;:49;;20475:5;;20432:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;20422:59:242;:6;-1:-1:-1;;;;;20422:59:242;;20401:159;;;;-1:-1:-1;;;20401:159:242;;;;;;;:::i;15578:1530::-;15856:45;;;:112;;;;-1:-1:-1;15921:47:242;;;15856:112;:165;;;;-1:-1:-1;15988:33:242;;;15856:165;:221;;;;-1:-1:-1;16041:36:242;;;15856:221;15835:294;;;;-1:-1:-1;;;15835:294:242;;;;;;;:::i;:::-;16145:9;16140:962;16156:17;;;16140:962;;;16276:1;16252:9;;16262:1;16252:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16252:26:242;;;16244:64;;;;-1:-1:-1;;;16244:64:242;;;;;;;:::i;:::-;16585:1;16545:28;16563:6;;16570:1;16563:9;;;;;;;;;;;;;;;;;;;;:::i;16545:28::-;-1:-1:-1;;;;;16545:42:242;;16537:85;;;;-1:-1:-1;;;16537:85:242;;;;;;;:::i;:::-;16636:38;16664:6;;16671:1;16664:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;16636:27;:38::i;:::-;16723:78;16737:6;;16744:1;16737:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;16748:21;;16770:1;16748:24;;;;;;;;;;;;;;;;;;;;:::i;:::-;16774:23;;16798:1;16774:26;;;;;;16723:78;16842:9;;16852:1;16842:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;16815:13;:24;16829:6;;16836:1;16829:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16815:24:242;;;;;;;;;;;;;;-1:-1:-1;16815:24:242;:39;;-1:-1:-1;;;;;;16815:39:242;;;;;;;;;;;16927:40;16943:9;;16953:1;16943:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;16957:6;;16964:1;16957:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;16927:15;:40::i;:::-;17012:1;16985:12;;16998:1;16985:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16985:29:242;;16981:111;;17034:43;17050:12;;17063:1;17050:15;;;;;;17034:43;16175:3;;16140:962;;;;15578:1530;;;;;;;;;;:::o;18001:158::-;18072:14;:31;;-1:-1:-1;;;;;;18072:31:242;-1:-1:-1;;;;;18072:31:242;;;;;18119:33;;;;;;18072:31;;18119:33;:::i;:::-;;;;;;;;18001:158;:::o;14963:547::-;15075:36;;;15067:81;;;;-1:-1:-1;;;15067:81:242;;;;;;;:::i;:::-;15164:9;15159:345;15175:23;;;15159:345;;;15284:1;15244:28;15262:6;;15269:1;15262:9;;;;;;15244:28;-1:-1:-1;;;;;15244:42:242;;;15219:138;;;;-1:-1:-1;;;15219:138:242;;;;;;;:::i;:::-;15450:43;15466:12;;15479:1;15466:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;15483:6;;15490:1;15483:9;;;;;;15450:43;15200:3;;15159:345;;;;14963:547;;;;:::o;21153:871::-;21307:22;21574:15;21626:26;21603:20;:49;21599:235;;;21678:52;:20;21703:26;21678:24;:52::i;:::-;21668:62;;21599:235;;;21771:52;:26;21802:20;21771:30;:52::i;:::-;21761:62;;21599:235;21885:132;1606:5;21885:65;:26;21916:33;21885:30;:65::i;:132::-;-1:-1:-1;21863:154:242;-1:-1:-1;21153:871:242;;;;;:::o;19188:418::-;19362:33;19389:5;19362:26;:33::i;:::-;-1:-1:-1;;;;;19455:21:242;;;;;;:14;:21;;;;;;;:71;;-1:-1:-1;;;;;19455:71:242;-1:-1:-1;;;;;;;;19455:71:242;;;;;;19542:57;;;;;19455:71;;19542:57;:::i;:::-;;;;;;;;19188:418;;:::o;3538:215:442:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:442;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:442;;;;;;;:::i;:::-;3745:1;3538:215;-1:-1:-1;;;3538:215:442:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:442;;;;;;;:::i;:::-;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:442:o;18222:880:242:-;18367:33;18414:22;18410:347;;;18535:33;18562:5;18535:26;:33::i;:::-;18631:5;-1:-1:-1;;;;;18611:44:242;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18583:74;;18713:5;-1:-1:-1;;;;;18677:69:242;;18720:25;18677:69;;;;;;:::i;:::-;;;;;;;;18410:347;18791:230;;;;;;;;18835:20;-1:-1:-1;;;;;18791:230:242;;;;;18904:20;-1:-1:-1;;;;;18898:36:242;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18791:230;;;;;;-1:-1:-1;;;;;18791:230:242;;;;;;;;-1:-1:-1;;;;;18767:21:242;;;-1:-1:-1;18767:21:242;;;:14;:21;;;;;;:254;;;;;;;;;;;;-1:-1:-1;;;;;;18767:254:242;;;;;;;-1:-1:-1;;;;18767:254:242;-1:-1:-1;;;18767:254:242;;;;;;;;;;;;-1:-1:-1;;;;;18767:254:242;-1:-1:-1;;;18767:254:242;;;;;;;;;;;;;;;19037:58;;;;;;18767:21;;19037:58;;;18222:880;;;;:::o;20716:220::-;20861:1;20832:5;-1:-1:-1;;;;;20812:44:242;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;20791:138;;;;-1:-1:-1;;;20791:138:242;;;;;;;:::i;14413:481::-;14558:1;14513:33;14534:11;14513:20;:33::i;:::-;-1:-1:-1;;;;;14513:47:242;;14492:125;;;;-1:-1:-1;;;14492:125:242;;;;;;;:::i;:::-;14723:11;-1:-1:-1;;;;;14717:27:242;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;14750:2;14717:35;14709:79;;;;-1:-1:-1;;;14709:79:242;;;;;;;:::i;:::-;-1:-1:-1;;;;;14799:29:242;;;;;;;:16;:29;;;;;;:37;;-1:-1:-1;;;;;;14799:37:242;;;;;;;;;14852:35;;;14799:29;14852:35;14413:481;;:::o;3136:155:442:-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:442;;;;;;;:::i;:::-;-1:-1:-1;3279:5:442;;;3136:155::o;17808:139:242:-;17893:19;:17;:19::i;:::-;-1:-1:-1;;;;;17877:56:242;;17934:5;17877:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;303:640::-;;430:3;423:4;415:6;411:17;407:27;397:2;;448:1;445;438:12;397:2;472:4;491:79;506:63;562:6;506:63;:::i;:::-;491:79;:::i;:::-;482:88;;587:5;646:6;693:3;685:4;677:6;673:17;668:3;664:27;661:36;658:2;;;710:1;707;700:12;658:2;735:1;720:217;745:6;742:1;739:13;720:217;;;803:3;825:48;869:3;857:10;825:48;:::i;:::-;813:61;;-1:-1;897:4;888:14;;;;916;;;;;767:1;760:9;720:217;;;724:14;390:553;;;;;;;:::o;969:352::-;;;1099:3;1092:4;1084:6;1080:17;1076:27;1066:2;;1117:1;1114;1107:12;1066:2;-1:-1;1137:20;;-1:-1;;;;;1166:30;;1163:2;;;1209:1;1206;1199:12;1163:2;1243:4;1235:6;1231:17;1219:29;;1294:3;1286:4;1278:6;1274:17;1264:8;1260:32;1257:41;1254:2;;;1311:1;1308;1301:12;1720:637;;1846:3;1839:4;1831:6;1827:17;1823:27;1813:2;;1864:1;1861;1854:12;1813:2;1888:4;1907:78;1922:62;1977:6;1922:62;:::i;1907:78::-;1898:87;;2002:5;2061:6;2108:3;2100:4;2092:6;2088:17;2083:3;2079:27;2076:36;2073:2;;;2125:1;2122;2115:12;2073:2;2150:1;2135:216;2160:6;2157:1;2154:13;2135:216;;;2218:3;2240:47;2283:3;2271:10;2240:47;:::i;:::-;2228:60;;-1:-1;2311:4;2302:14;;;;2330;;;;;2182:1;2175:9;2135:216;;2365:124;2429:20;;2454:30;2429:20;2454:30;:::i;2496:132::-;2573:13;;2591:32;2573:13;2591:32;:::i;2635:130::-;2702:20;;2727:33;2702:20;2727:33;:::i;2772:134::-;2850:13;;2868:33;2850:13;2868:33;:::i;2913:130::-;2989:13;;3007:31;2989:13;3007:31;:::i;3050:241::-;;3154:2;3142:9;3133:7;3129:23;3125:32;3122:2;;;3170:1;3167;3160:12;3122:2;3205:1;3222:53;3267:7;3247:9;3222:53;:::i;:::-;3212:63;3116:175;-1:-1;;;;3116:175::o;3298:263::-;;3413:2;3401:9;3392:7;3388:23;3384:32;3381:2;;;3429:1;3426;3419:12;3381:2;3464:1;3481:64;3537:7;3517:9;3481:64;:::i;3568:366::-;;;3689:2;3677:9;3668:7;3664:23;3660:32;3657:2;;;3705:1;3702;3695:12;3657:2;3740:1;3757:53;3802:7;3782:9;3757:53;:::i;:::-;3747:63;;3719:97;3847:2;3865:53;3910:7;3901:6;3890:9;3886:22;3865:53;:::i;:::-;3855:63;;3826:98;3651:283;;;;;:::o;3941:495::-;;;4120:3;4108:9;4099:7;4095:23;4091:33;4088:2;;;4137:1;4134;4127:12;4088:2;4172:1;4189:88;4269:7;4249:9;4189:88;:::i;:::-;4179:98;;4151:132;4314:3;4333:87;4412:7;4403:6;4392:9;4388:22;4333:87;:::i;4443:397::-;;;4582:2;4570:9;4561:7;4557:23;4553:32;4550:2;;;4598:1;4595;4588:12;4550:2;4633:31;;-1:-1;;;;;4673:30;;4670:2;;;4716:1;4713;4706:12;4670:2;4744:80;4816:7;4807:6;4796:9;4792:22;4744:80;:::i;:::-;4726:98;;;;4612:218;4544:296;;;;;:::o;4847:678::-;;;;;5038:2;5026:9;5017:7;5013:23;5009:32;5006:2;;;5054:1;5051;5044:12;5006:2;5089:31;;-1:-1;;;;;5129:30;;5126:2;;;5172:1;5169;5162:12;5126:2;5200:80;5272:7;5263:6;5252:9;5248:22;5200:80;:::i;:::-;5182:98;;;;5068:218;5345:2;5334:9;5330:18;5317:32;-1:-1;;;;;5361:6;5358:30;5355:2;;;5401:1;5398;5391:12;5355:2;5429:80;5501:7;5492:6;5481:9;5477:22;5429:80;:::i;:::-;5000:525;;;;-1:-1;5411:98;-1:-1;;;;5000:525::o;5532:953::-;;;;;;;5772:2;5760:9;5751:7;5747:23;5743:32;5740:2;;;5788:1;5785;5778:12;5740:2;5823:31;;-1:-1;;;;;5863:30;;5860:2;;;5906:1;5903;5896:12;5860:2;5934:80;6006:7;5997:6;5986:9;5982:22;5934:80;:::i;:::-;5916:98;;;;5802:218;6079:2;6068:9;6064:18;6051:32;-1:-1;;;;;6095:6;6092:30;6089:2;;;6135:1;6132;6125:12;6089:2;6163:80;6235:7;6226:6;6215:9;6211:22;6163:80;:::i;:::-;6145:98;;;;6030:219;6308:2;6297:9;6293:18;6280:32;-1:-1;;;;;6324:6;6321:30;6318:2;;;6364:1;6361;6354:12;6318:2;6392:77;6461:7;6452:6;6441:9;6437:22;6392:77;:::i;:::-;6374:95;;;;6259:216;5734:751;;;;;;;;:::o;6492:1517::-;;;;;;;;;;;6836:3;6824:9;6815:7;6811:23;6807:33;6804:2;;;6853:1;6850;6843:12;6804:2;6888:31;;-1:-1;;;;;6928:30;;6925:2;;;6971:1;6968;6961:12;6925:2;6999:80;7071:7;7062:6;7051:9;7047:22;6999:80;:::i;:::-;6981:98;;;;6867:218;7144:2;7133:9;7129:18;7116:32;-1:-1;;;;;7160:6;7157:30;7154:2;;;7200:1;7197;7190:12;7154:2;7228:80;7300:7;7291:6;7280:9;7276:22;7228:80;:::i;:::-;7210:98;;;;7095:219;7373:2;7362:9;7358:18;7345:32;-1:-1;;;;;7389:6;7386:30;7383:2;;;7429:1;7426;7419:12;7383:2;7457:77;7526:7;7517:6;7506:9;7502:22;7457:77;:::i;:::-;7439:95;;;;7324:216;7599:2;7588:9;7584:18;7571:32;-1:-1;;;;;7615:6;7612:30;7609:2;;;7655:1;7652;7645:12;7609:2;7683:80;7755:7;7746:6;7735:9;7731:22;7683:80;:::i;:::-;7665:98;;;;7550:219;7828:3;7817:9;7813:19;7800:33;-1:-1;;;;;7845:6;7842:30;7839:2;;;7885:1;7882;7875:12;7839:2;7913:80;7985:7;7976:6;7965:9;7961:22;7913:80;:::i;:::-;7895:98;;;;7779:220;6798:1211;;;;;;;;;;;;;:::o;8016:235::-;;8117:2;8105:9;8096:7;8092:23;8088:32;8085:2;;;8133:1;8130;8123:12;8085:2;8168:1;8185:50;8227:7;8207:9;8185:50;:::i;8258:263::-;;8373:2;8361:9;8352:7;8348:23;8344:32;8341:2;;;8389:1;8386;8379:12;8341:2;8424:1;8441:64;8497:7;8477:9;8441:64;:::i;8528:259::-;;8641:2;8629:9;8620:7;8616:23;8612:32;8609:2;;;8657:1;8654;8647:12;8609:2;8692:1;8709:62;8763:7;8743:9;8709:62;:::i;8795:173::-;;8882:46;8924:3;8916:6;8882:46;:::i;:::-;-1:-1;;8957:4;8948:14;;8875:93::o;8977:173::-;;9064:46;9106:3;9098:6;9064:46;:::i;9158:103::-;9231:24;9249:5;9231:24;:::i;:::-;9226:3;9219:37;9213:48;;:::o;9419:690::-;;9564:54;9612:5;9564:54;:::i;:::-;9631:86;9710:6;9705:3;9631:86;:::i;:::-;9624:93;;9738:56;9788:5;9738:56;:::i;:::-;9814:7;9842:1;9827:260;9852:6;9849:1;9846:13;9827:260;;;9919:6;9913:13;9940:63;9999:3;9984:13;9940:63;:::i;:::-;9933:70;;10020:60;10073:6;10020:60;:::i;:::-;10010:70;-1:-1;;9874:1;9867:9;9827:260;;;-1:-1;10100:3;;9543:566;-1:-1;;;;;9543:566::o;10148:690::-;;10293:54;10341:5;10293:54;:::i;:::-;10360:86;10439:6;10434:3;10360:86;:::i;:::-;10353:93;;10467:56;10517:5;10467:56;:::i;:::-;10543:7;10571:1;10556:260;10581:6;10578:1;10575:13;10556:260;;;10648:6;10642:13;10669:63;10728:3;10713:13;10669:63;:::i;:::-;10662:70;;10749:60;10802:6;10749:60;:::i;:::-;10739:70;-1:-1;;10603:1;10596:9;10556:260;;10846:104;10923:21;10938:5;10923:21;:::i;10958:387::-;;11118:67;11182:2;11177:3;11118:67;:::i;:::-;11218:34;11198:55;;-1:-1;;;11282:2;11273:12;;11266:42;11336:2;11327:12;;11104:241;-1:-1;;11104:241::o;11354:447::-;;11514:67;11578:2;11573:3;11514:67;:::i;:::-;11614:34;11594:55;;11683:34;11678:2;11669:12;;11662:56;-1:-1;;;11747:2;11738:12;;11731:33;11792:2;11783:12;;11500:301;-1:-1;;11500:301::o;11810:326::-;;11970:67;12034:2;12029:3;11970:67;:::i;:::-;12070:28;12050:49;;12127:2;12118:12;;11956:180;-1:-1;;11956:180::o;12145:330::-;;12305:67;12369:2;12364:3;12305:67;:::i;:::-;12405:32;12385:53;;12466:2;12457:12;;12291:184;-1:-1;;12291:184::o;12484:332::-;;12644:67;12708:2;12703:3;12644:67;:::i;:::-;12744:34;12724:55;;12807:2;12798:12;;12630:186;-1:-1;;12630:186::o;12825:326::-;;12985:67;13049:2;13044:3;12985:67;:::i;:::-;13085:28;13065:49;;13142:2;13133:12;;12971:180;-1:-1;;12971:180::o;13160:378::-;;13320:67;13384:2;13379:3;13320:67;:::i;:::-;13420:34;13400:55;;-1:-1;;;13484:2;13475:12;;13468:33;13529:2;13520:12;;13306:232;-1:-1;;13306:232::o;13547:330::-;;13707:67;13771:2;13766:3;13707:67;:::i;:::-;13807:32;13787:53;;13868:2;13859:12;;13693:184;-1:-1;;13693:184::o;13886:370::-;;14046:67;14110:2;14105:3;14046:67;:::i;:::-;14146:34;14126:55;;-1:-1;;;14210:2;14201:12;;14194:25;14247:2;14238:12;;14032:224;-1:-1;;14032:224::o;14265:331::-;;14425:67;14489:2;14484:3;14425:67;:::i;:::-;14525:33;14505:54;;14587:2;14578:12;;14411:185;-1:-1;;14411:185::o;14605:325::-;;14765:67;14829:2;14824:3;14765:67;:::i;:::-;14865:27;14845:48;;14921:2;14912:12;;14751:179;-1:-1;;14751:179::o;14939:379::-;;15099:67;15163:2;15158:3;15099:67;:::i;:::-;15199:34;15179:55;;-1:-1;;;15263:2;15254:12;;15247:34;15309:2;15300:12;;15085:233;-1:-1;;15085:233::o;15327:390::-;;15487:67;15551:2;15546:3;15487:67;:::i;:::-;15587:34;15567:55;;-1:-1;;;15651:2;15642:12;;15635:45;15708:2;15699:12;;15473:244;-1:-1;;15473:244::o;15726:331::-;;15886:67;15950:2;15945:3;15886:67;:::i;:::-;15986:33;15966:54;;16048:2;16039:12;;15872:185;-1:-1;;15872:185::o;16066:324::-;;16226:67;16290:2;16285:3;16226:67;:::i;:::-;16326:26;16306:47;;16381:2;16372:12;;16212:178;-1:-1;;16212:178::o;16399:330::-;;16559:67;16623:2;16618:3;16559:67;:::i;:::-;16659:32;16639:53;;16720:2;16711:12;;16545:184;-1:-1;;16545:184::o;16738:374::-;;16898:67;16962:2;16957:3;16898:67;:::i;:::-;16998:34;16978:55;;-1:-1;;;17062:2;17053:12;;17046:29;17103:2;17094:12;;16884:228;-1:-1;;16884:228::o;17191:687::-;17419:23;;17338:4;17329:14;;;17448:63;17333:3;17419:23;17448:63;:::i;:::-;17358:159;17613:4;17606:5;17602:16;17596:23;17625:59;17678:4;17673:3;17669:14;17655:12;17625:59;:::i;:::-;17527:163;17784:4;17777:5;17773:16;17767:23;17796:61;17851:4;17846:3;17842:14;17828:12;17796:61;:::i;17885:103::-;17958:24;17976:5;17958:24;:::i;18115:100::-;18186:23;18203:5;18186:23;:::i;18222:97::-;18291:22;18307:5;18291:22;:::i;18326:222::-;18453:2;18438:18;;18467:71;18442:9;18511:6;18467:71;:::i;18555:629::-;18810:2;18824:47;;;18795:18;;18885:108;18795:18;18979:6;18885:108;:::i;:::-;18877:116;;19041:9;19035:4;19031:20;19026:2;19015:9;19011:18;19004:48;19066:108;19169:4;19160:6;19066:108;:::i;19191:210::-;19312:2;19297:18;;19326:65;19301:9;19364:6;19326:65;:::i;19408:416::-;19608:2;19622:47;;;19593:18;;19683:131;19593:18;19683:131;:::i;19831:416::-;20031:2;20045:47;;;20016:18;;20106:131;20016:18;20106:131;:::i;20254:416::-;20454:2;20468:47;;;20439:18;;20529:131;20439:18;20529:131;:::i;20677:416::-;20877:2;20891:47;;;20862:18;;20952:131;20862:18;20952:131;:::i;21100:416::-;21300:2;21314:47;;;21285:18;;21375:131;21285:18;21375:131;:::i;21523:416::-;21723:2;21737:47;;;21708:18;;21798:131;21708:18;21798:131;:::i;21946:416::-;22146:2;22160:47;;;22131:18;;22221:131;22131:18;22221:131;:::i;22369:416::-;22569:2;22583:47;;;22554:18;;22644:131;22554:18;22644:131;:::i;22792:416::-;22992:2;23006:47;;;22977:18;;23067:131;22977:18;23067:131;:::i;23215:416::-;23415:2;23429:47;;;23400:18;;23490:131;23400:18;23490:131;:::i;23638:416::-;23838:2;23852:47;;;23823:18;;23913:131;23823:18;23913:131;:::i;24061:416::-;24261:2;24275:47;;;24246:18;;24336:131;24246:18;24336:131;:::i;24484:416::-;24684:2;24698:47;;;24669:18;;24759:131;24669:18;24759:131;:::i;24907:416::-;25107:2;25121:47;;;25092:18;;25182:131;25092:18;25182:131;:::i;25330:416::-;25530:2;25544:47;;;25515:18;;25605:131;25515:18;25605:131;:::i;25753:416::-;25953:2;25967:47;;;25938:18;;26028:131;25938:18;26028:131;:::i;26176:416::-;26376:2;26390:47;;;26361:18;;26451:131;26361:18;26451:131;:::i;26599:330::-;26780:2;26765:18;;26794:125;26769:9;26892:6;26794:125;:::i;26936:222::-;27063:2;27048:18;;27077:71;27052:9;27121:6;27077:71;:::i;27165:256::-;27227:2;27221:9;27253:17;;;-1:-1;;;;;27313:34;;27349:22;;;27310:62;27307:2;;;27385:1;27382;27375:12;27307:2;27401;27394:22;27205:216;;-1:-1;27205:216::o;27428:245::-;;-1:-1;;;;;27578:6;27575:30;27572:2;;;27618:1;27615;27608:12;27572:2;-1:-1;27653:4;27641:17;;27509:164::o;27931:151::-;28055:4;28046:14;;28003:79::o;28247:137::-;28350:12;;28321:63::o;28766:178::-;28884:19;;;28933:4;28924:14;;28877:67::o;29311:91::-;;29373:24;29391:5;29373:24;:::i;29409:85::-;29475:13;29468:21;;29451:43::o;29501:87::-;29573:2;29562:21;;29545:43::o;29595:121::-;-1:-1;;;;;29657:54;;29640:76::o;29723:72::-;29785:5;29768:27::o;29802:81::-;29873:4;29862:16;;29845:38::o;29890:102::-;-1:-1;;;;;29951:36;;29934:58::o;29999:117::-;30068:24;30086:5;30068:24;:::i;:::-;30061:5;30058:35;30048:2;;30107:1;30104;30097:12;30123:111;30189:21;30204:5;30189:21;:::i;30241:115::-;30309:23;30326:5;30309:23;:::i;30363:117::-;30432:24;30450:5;30432:24;:::i;30487:113::-;30554:22;30570:5;30554:22;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "63809": [
        {
          "start": 3790,
          "length": 32
        },
        {
          "start": 3903,
          "length": 32
        }
      ],
      "63811": [
        {
          "start": 5308,
          "length": 32
        }
      ],
      "78707": [
        {
          "start": 3014,
          "length": 32
        },
        {
          "start": 3401,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addGaugeTokens(address[],address[])": "51e7d01f",
    "addGaugeTokensWithoutValidation(address[],address[])": "f6d959c3",
    "addPools(address[],address[],bool[],address[],address[])": "0254f054",
    "addPoolsWithoutValidation(address[],address[],bool[],address[],address[])": "540eaddc",
    "calcUnderlyingValues(address,uint256)": "727212f6",
    "getCurvePoolOwner()": "bb5c7b15",
    "getFundDeployer()": "97c0ac87",
    "getLpTokenForPool(address)": "1f5bce55",
    "getOwner()": "893d20e8",
    "getPoolForDerivative(address)": "6a2175c0",
    "getPoolInfo(address)": "06bfa938",
    "isSupportedAsset(address)": "9be918e6",
    "removeDerivatives(address[])": "8f72b136",
    "removePools(address[])": "4b164140",
    "setCurvePoolOwner(address)": "05ecc2d4",
    "updatePoolInfo(address[],address[],bool[])": "f044506b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fundDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_virtualPriceDeviationThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"}],\"name\":\"CurvePoolOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"derivative\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"DerivativeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"derivative\",\"type\":\"address\"}],\"name\":\"DerivativeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"invariantProxyAsset\",\"type\":\"address\"}],\"name\":\"InvariantProxyAssetForPoolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"virtualPrice\",\"type\":\"uint256\"}],\"name\":\"ValidatedVirtualPriceForPoolUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gaugeTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"addGaugeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gaugeTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"addGaugeTokensWithoutValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_invariantProxyAssets\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_reentrantVirtualPrices\",\"type\":\"bool[]\"},{\"internalType\":\"address[]\",\"name\":\"_lpTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_gaugeTokens\",\"type\":\"address[]\"}],\"name\":\"addPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_invariantProxyAssets\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_reentrantVirtualPrices\",\"type\":\"bool[]\"},{\"internalType\":\"address[]\",\"name\":\"_lpTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_gaugeTokens\",\"type\":\"address[]\"}],\"name\":\"addPoolsWithoutValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_derivative\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_derivativeAmount\",\"type\":\"uint256\"}],\"name\":\"calcUnderlyingValues\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"underlyings_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurvePoolOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poolOwner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fundDeployer_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getLpTokenForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_derivative\",\"type\":\"address\"}],\"name\":\"getPoolForDerivative\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"invariantProxyAsset\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"invariantProxyAssetDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint88\",\"name\":\"lastValidatedVirtualPrice\",\"type\":\"uint88\"}],\"internalType\":\"struct CurvePriceFeed.PoolInfo\",\"name\":\"poolInfo_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"isSupportedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSupported_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_derivatives\",\"type\":\"address[]\"}],\"name\":\"removeDerivatives\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"removePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextPoolOwner\",\"type\":\"address\"}],\"name\":\"setCurvePoolOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_invariantProxyAssets\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_reentrantVirtualPrices\",\"type\":\"bool[]\"}],\"name\":\"updatePoolInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"addGaugeTokens(address[],address[])\":{\"details\":\"All params are corresponding, equal length arrays. _pools must already have been added via an addPools~() function\",\"params\":{\"_gaugeTokens\":\"The ordered gauge tokens\",\"_pools\":\"The ordered pools corresponding to _gaugeTokens\"}},\"addGaugeTokensWithoutValidation(address[],address[])\":{\"details\":\"Should only be used if something is incorrectly failing in the registry validation, or if gauge tokens exist outside of the registries supported by this price feed, e.g., a wrapper for non-tokenized gauges. All params are corresponding, equal length arrays. _pools must already have been added via an addPools~() function.\",\"params\":{\"_gaugeTokens\":\"The ordered gauge tokens\",\"_pools\":\"The ordered pools corresponding to _gaugeTokens\"}},\"addPools(address[],address[],bool[],address[],address[])\":{\"details\":\"All params are corresponding, equal length arrays. address(0) can be used for any _gaugeTokens index to omit the gauge (e.g., no gauge token exists). _lpTokens is not technically necessary since it is knowable from a Curve registry, but it's better to use Curve's upgradable contracts as an input validation rather than fully-trusted.\",\"params\":{\"_gaugeTokens\":\"The ordered gauge token corresponding to _pools\",\"_invariantProxyAssets\":\"The ordered invariant proxy assets corresponding to _pools, e.g., WETH for ETH-based pools\",\"_lpTokens\":\"The ordered lpToken corresponding to _pools\",\"_pools\":\"The ordered Curve pools\",\"_reentrantVirtualPrices\":\"The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable\"}},\"addPoolsWithoutValidation(address[],address[],bool[],address[],address[])\":{\"details\":\"Should only be used if something is incorrectly failing in the registry validation, or if pools exist outside of the registries supported by this price feed. All params are corresponding, equal length arrays. address(0) can be used for any _gaugeTokens index to omit the gauge (e.g., no gauge token exists).\",\"params\":{\"_gaugeTokens\":\"The ordered gauge token corresponding to _pools\",\"_invariantProxyAssets\":\"The ordered invariant proxy assets corresponding to _pools, e.g., WETH for ETH-based pools\",\"_lpTokens\":\"The ordered lpToken corresponding to _pools\",\"_pools\":\"The ordered Curve pools\",\"_reentrantVirtualPrices\":\"The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable\"}},\"calcUnderlyingValues(address,uint256)\":{\"params\":{\"_derivative\":\"The derivative to convert\",\"_derivativeAmount\":\"The amount of the derivative to convert\"},\"returns\":{\"underlyingAmounts_\":\"The amount of each underlying asset for the equivalent derivative amount\",\"underlyings_\":\"The underlying assets for the _derivative\"}},\"getCurvePoolOwner()\":{\"returns\":{\"poolOwner_\":\"The Curve pool owner\"}},\"getFundDeployer()\":{\"returns\":{\"fundDeployer_\":\"The `FUND_DEPLOYER` variable value\"}},\"getLpTokenForPool(address)\":{\"params\":{\"_pool\":\"The pool\"},\"returns\":{\"lpToken_\":\"The lpToken\"}},\"getOwner()\":{\"details\":\"Ownership is deferred to the owner of the FundDeployer contract\",\"returns\":{\"owner_\":\"The owner\"}},\"getPoolForDerivative(address)\":{\"params\":{\"_derivative\":\"The derivative\"},\"returns\":{\"pool_\":\"The pool\"}},\"getPoolInfo(address)\":{\"params\":{\"_pool\":\"The pool\"},\"returns\":{\"poolInfo_\":\"The PoolInfo\"}},\"isSupportedAsset(address)\":{\"params\":{\"_asset\":\"The asset to check\"},\"returns\":{\"isSupported_\":\"True if the asset is supported\"}},\"removeDerivatives(address[])\":{\"details\":\"Unlikely to be needed, just in case of bad storage entry. Can remove both lpToken and gaugeToken from derivatives list, but does not remove lpToken from pool info cache.\",\"params\":{\"_derivatives\":\"The derivatives to remove\"}},\"removePools(address[])\":{\"details\":\"Unlikely to be needed, just in case of bad storage entry. Does not remove lpToken nor gauge tokens from derivatives list.\",\"params\":{\"_pools\":\"The pools to remove\"}},\"setCurvePoolOwner(address)\":{\"params\":{\"_nextPoolOwner\":\"The next pool owner value\"}},\"updatePoolInfo(address[],address[],bool[])\":{\"params\":{\"_invariantProxyAssets\":\"The ordered invariant asset proxy assets\",\"_pools\":\"The ordered pools\",\"_reentrantVirtualPrices\":\"The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable\"}}},\"title\":\"CurvePriceFeed Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addGaugeTokens(address[],address[])\":{\"notice\":\"Adds validated gaugeTokens to the price feed\"},\"addGaugeTokensWithoutValidation(address[],address[])\":{\"notice\":\"Adds unvalidated gaugeTokens to the price feed\"},\"addPools(address[],address[],bool[],address[],address[])\":{\"notice\":\"Adds validated Curve pool info, lpTokens, and gaugeTokens to the price feed\"},\"addPoolsWithoutValidation(address[],address[],bool[],address[],address[])\":{\"notice\":\"Adds unvalidated Curve pool info, lpTokens, and gaugeTokens to the price feed\"},\"calcUnderlyingValues(address,uint256)\":{\"notice\":\"Converts a given amount of a derivative to its underlying asset values\"},\"getCurvePoolOwner()\":{\"notice\":\"Gets the Curve pool owner\"},\"getFundDeployer()\":{\"notice\":\"Gets the `FUND_DEPLOYER` variable\"},\"getLpTokenForPool(address)\":{\"notice\":\"Gets the lpToken for a given pool\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"getPoolForDerivative(address)\":{\"notice\":\"Gets the pool for a given derivative\"},\"getPoolInfo(address)\":{\"notice\":\"Gets the stored PoolInfo for a given pool\"},\"isSupportedAsset(address)\":{\"notice\":\"Checks if an asset is supported by the price feed\"},\"removeDerivatives(address[])\":{\"notice\":\"Removes derivatives from the price feed\"},\"removePools(address[])\":{\"notice\":\"Removes pools from the price feed\"},\"setCurvePoolOwner(address)\":{\"notice\":\"Sets the Curve pool owner\"},\"updatePoolInfo(address[],address[],bool[])\":{\"notice\":\"Updates the PoolInfo for the given pools\"}},\"notice\":\"Price feed for Curve pool tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/infrastructure/price-feeds/derivatives/feeds/CurvePriceFeed.sol\":\"CurvePriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/core/fund-deployer/IFundDeployer.sol\":{\"keccak256\":\"0x5b901b81b3a4ef3d30ef9b4a1fa7fdd6526dfacd66e9971d1f988c2b63334314\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79eba24bcad7e3abddafd20b518add8d5acb1e8de250a0e20050dfbe2f2d8aea\",\"dweb:/ipfs/QmYq9QYKr1UJaVyhkkSEfeiJ68TwGbwrmZsgRTPjVjkpUp\"]},\"contracts/release/infrastructure/price-feeds/derivatives/IDerivativePriceFeed.sol\":{\"keccak256\":\"0x5abbc57ccbf28b2c27a0ee496f0a949a0039912975e8f9a65312d884edd05332\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9cfb87b8df1f3f58c556907e2a9cc197fa5bb90ad9bc9d4717e95fd63258d80e\",\"dweb:/ipfs/QmWxLvfq9NNJJZueeHD5EYWdRwrgzmrVdLUqp9Ta7A9ccK\"]},\"contracts/release/infrastructure/price-feeds/derivatives/feeds/CurvePriceFeed.sol\":{\"keccak256\":\"0xa8ddbd75bb5cb702b539b963c2694a8abcbd19eb801a36a42c0537f69ad26b42\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b6422a1ebdf7198942cee6b61ae807887a77864abc0b1bc16dba55c7b5f3ca90\",\"dweb:/ipfs/QmXNCQkT5Er6NvKBJnhk9jR4T1KhNeorAr8F6K6dQPjztx\"]},\"contracts/release/interfaces/ICurveAddressProvider.sol\":{\"keccak256\":\"0xf8da903700c623760de62b3e5d0b01997c68b8847391e23b89081128780e55e1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://735b71b448d4d5c78e98ead84bf8f8e1e94e38ff8a77c7e4f9cc944d1d73e7df\",\"dweb:/ipfs/QmXFgGFVEvQW9wpeBspcaVAXwCcxvnNJZLafTeP2HPArNQ\"]},\"contracts/release/interfaces/ICurveLiquidityPool.sol\":{\"keccak256\":\"0xd90f3399805f90d670098cc451f9948b8da7dd68be821617c76487fdc20f0731\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ba6e6e5bf761fa279329a564741e5cd2b78c5be2e50c388ac419c3d84736c9a1\",\"dweb:/ipfs/QmZ96kkg7oHLmdzwQLYbZVHDvKj8jZEJLaxNXy1j3sbgrn\"]},\"contracts/release/interfaces/ICurvePoolOwner.sol\":{\"keccak256\":\"0x42a03eb0d757153add18d4f42b5b464041056e23f6965a48705088ddd213c336\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a4166f75c4c80b8f069ae2b8cfe9bda2babca27fd30b239e30606eca69f8878c\",\"dweb:/ipfs/QmYNULkXYTaKQUiCA8htR9KbCkK5YhrHfJgKtBqXiNPt9R\"]},\"contracts/release/interfaces/ICurveRegistryMain.sol\":{\"keccak256\":\"0x9e67cfcd4195bfd8db785be1cba42bf8871d0638770adaf04d638227b29a9b2b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cb2587e7026be73f27d4dd75deb44faeca3112a58ddc07bb87bca46d96fd977b\",\"dweb:/ipfs/QmTVdpCWZ9rv583gxP5Ycvs5Nf7jZTxVWr5oeZvywYNSSh\"]},\"contracts/release/interfaces/ICurveRegistryMetapoolFactory.sol\":{\"keccak256\":\"0x43aa6bfbda8ca1fdcb0890792e7969999146c690986938ac43818ca9b9343e58\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3426ad7d87cd51519c288004f970da83bf672d60fc7d1c647af5e84855f6a4b5\",\"dweb:/ipfs/QmevngH3Acet8R6YHzGLRyNeEoUYfbnQm7NSbzHYN7rdpf\"]},\"contracts/release/utils/FundDeployerOwnerMixin.sol\":{\"keccak256\":\"0xd415583828581051080d575f058643f4975d7048fda0d1765122b260d9d14934\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8191af7a3cd0867af1a401d3cba1294be054c761c2276d21bff7c9296ecc6927\",\"dweb:/ipfs/QmYBSrx1XrcqMNkH2Q6ALuczRv6LgpzVHvFH3DjvCu6SaM\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_fundDeployer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_addressProvider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_poolOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_virtualPriceDeviationThreshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CurvePoolOwnerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "derivative",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DerivativeAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "derivative",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DerivativeRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "invariantProxyAsset",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InvariantProxyAssetForPoolSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PoolRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "virtualPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ValidatedVirtualPriceForPoolUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_gaugeTokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addGaugeTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_gaugeTokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addGaugeTokensWithoutValidation"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_invariantProxyAssets",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "_reentrantVirtualPrices",
              "type": "bool[]"
            },
            {
              "internalType": "address[]",
              "name": "_lpTokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_gaugeTokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPools"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_invariantProxyAssets",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "_reentrantVirtualPrices",
              "type": "bool[]"
            },
            {
              "internalType": "address[]",
              "name": "_lpTokens",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_gaugeTokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPoolsWithoutValidation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_derivative",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_derivativeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "calcUnderlyingValues",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "underlyings_",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "underlyingAmounts_",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurvePoolOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "poolOwner_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFundDeployer",
          "outputs": [
            {
              "internalType": "address",
              "name": "fundDeployer_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLpTokenForPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "lpToken_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_derivative",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolForDerivative",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolInfo",
          "outputs": [
            {
              "internalType": "struct CurvePriceFeed.PoolInfo",
              "name": "poolInfo_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "invariantProxyAsset",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "invariantProxyAssetDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint88",
                  "name": "lastValidatedVirtualPrice",
                  "type": "uint88"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_asset",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSupportedAsset",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSupported_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_derivatives",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeDerivatives"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePools"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nextPoolOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCurvePoolOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "_invariantProxyAssets",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "_reentrantVirtualPrices",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePoolInfo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addGaugeTokens(address[],address[])": {
            "details": "All params are corresponding, equal length arrays. _pools must already have been added via an addPools~() function",
            "params": {
              "_gaugeTokens": "The ordered gauge tokens",
              "_pools": "The ordered pools corresponding to _gaugeTokens"
            }
          },
          "addGaugeTokensWithoutValidation(address[],address[])": {
            "details": "Should only be used if something is incorrectly failing in the registry validation, or if gauge tokens exist outside of the registries supported by this price feed, e.g., a wrapper for non-tokenized gauges. All params are corresponding, equal length arrays. _pools must already have been added via an addPools~() function.",
            "params": {
              "_gaugeTokens": "The ordered gauge tokens",
              "_pools": "The ordered pools corresponding to _gaugeTokens"
            }
          },
          "addPools(address[],address[],bool[],address[],address[])": {
            "details": "All params are corresponding, equal length arrays. address(0) can be used for any _gaugeTokens index to omit the gauge (e.g., no gauge token exists). _lpTokens is not technically necessary since it is knowable from a Curve registry, but it's better to use Curve's upgradable contracts as an input validation rather than fully-trusted.",
            "params": {
              "_gaugeTokens": "The ordered gauge token corresponding to _pools",
              "_invariantProxyAssets": "The ordered invariant proxy assets corresponding to _pools, e.g., WETH for ETH-based pools",
              "_lpTokens": "The ordered lpToken corresponding to _pools",
              "_pools": "The ordered Curve pools",
              "_reentrantVirtualPrices": "The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable"
            }
          },
          "addPoolsWithoutValidation(address[],address[],bool[],address[],address[])": {
            "details": "Should only be used if something is incorrectly failing in the registry validation, or if pools exist outside of the registries supported by this price feed. All params are corresponding, equal length arrays. address(0) can be used for any _gaugeTokens index to omit the gauge (e.g., no gauge token exists).",
            "params": {
              "_gaugeTokens": "The ordered gauge token corresponding to _pools",
              "_invariantProxyAssets": "The ordered invariant proxy assets corresponding to _pools, e.g., WETH for ETH-based pools",
              "_lpTokens": "The ordered lpToken corresponding to _pools",
              "_pools": "The ordered Curve pools",
              "_reentrantVirtualPrices": "The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable"
            }
          },
          "calcUnderlyingValues(address,uint256)": {
            "params": {
              "_derivative": "The derivative to convert",
              "_derivativeAmount": "The amount of the derivative to convert"
            },
            "returns": {
              "underlyingAmounts_": "The amount of each underlying asset for the equivalent derivative amount",
              "underlyings_": "The underlying assets for the _derivative"
            }
          },
          "getCurvePoolOwner()": {
            "returns": {
              "poolOwner_": "The Curve pool owner"
            }
          },
          "getFundDeployer()": {
            "returns": {
              "fundDeployer_": "The `FUND_DEPLOYER` variable value"
            }
          },
          "getLpTokenForPool(address)": {
            "params": {
              "_pool": "The pool"
            },
            "returns": {
              "lpToken_": "The lpToken"
            }
          },
          "getOwner()": {
            "details": "Ownership is deferred to the owner of the FundDeployer contract",
            "returns": {
              "owner_": "The owner"
            }
          },
          "getPoolForDerivative(address)": {
            "params": {
              "_derivative": "The derivative"
            },
            "returns": {
              "pool_": "The pool"
            }
          },
          "getPoolInfo(address)": {
            "params": {
              "_pool": "The pool"
            },
            "returns": {
              "poolInfo_": "The PoolInfo"
            }
          },
          "isSupportedAsset(address)": {
            "params": {
              "_asset": "The asset to check"
            },
            "returns": {
              "isSupported_": "True if the asset is supported"
            }
          },
          "removeDerivatives(address[])": {
            "details": "Unlikely to be needed, just in case of bad storage entry. Can remove both lpToken and gaugeToken from derivatives list, but does not remove lpToken from pool info cache.",
            "params": {
              "_derivatives": "The derivatives to remove"
            }
          },
          "removePools(address[])": {
            "details": "Unlikely to be needed, just in case of bad storage entry. Does not remove lpToken nor gauge tokens from derivatives list.",
            "params": {
              "_pools": "The pools to remove"
            }
          },
          "setCurvePoolOwner(address)": {
            "params": {
              "_nextPoolOwner": "The next pool owner value"
            }
          },
          "updatePoolInfo(address[],address[],bool[])": {
            "params": {
              "_invariantProxyAssets": "The ordered invariant asset proxy assets",
              "_pools": "The ordered pools",
              "_reentrantVirtualPrices": "The ordered flags corresponding to _pools, true if the get_virtual_price() function is potentially reenterable"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addGaugeTokens(address[],address[])": {
            "notice": "Adds validated gaugeTokens to the price feed"
          },
          "addGaugeTokensWithoutValidation(address[],address[])": {
            "notice": "Adds unvalidated gaugeTokens to the price feed"
          },
          "addPools(address[],address[],bool[],address[],address[])": {
            "notice": "Adds validated Curve pool info, lpTokens, and gaugeTokens to the price feed"
          },
          "addPoolsWithoutValidation(address[],address[],bool[],address[],address[])": {
            "notice": "Adds unvalidated Curve pool info, lpTokens, and gaugeTokens to the price feed"
          },
          "calcUnderlyingValues(address,uint256)": {
            "notice": "Converts a given amount of a derivative to its underlying asset values"
          },
          "getCurvePoolOwner()": {
            "notice": "Gets the Curve pool owner"
          },
          "getFundDeployer()": {
            "notice": "Gets the `FUND_DEPLOYER` variable"
          },
          "getLpTokenForPool(address)": {
            "notice": "Gets the lpToken for a given pool"
          },
          "getOwner()": {
            "notice": "Gets the owner of this contract"
          },
          "getPoolForDerivative(address)": {
            "notice": "Gets the pool for a given derivative"
          },
          "getPoolInfo(address)": {
            "notice": "Gets the stored PoolInfo for a given pool"
          },
          "isSupportedAsset(address)": {
            "notice": "Checks if an asset is supported by the price feed"
          },
          "removeDerivatives(address[])": {
            "notice": "Removes derivatives from the price feed"
          },
          "removePools(address[])": {
            "notice": "Removes pools from the price feed"
          },
          "setCurvePoolOwner(address)": {
            "notice": "Sets the Curve pool owner"
          },
          "updatePoolInfo(address[],address[],bool[])": {
            "notice": "Updates the PoolInfo for the given pools"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/release/infrastructure/price-feeds/derivatives/feeds/CurvePriceFeed.sol": "CurvePriceFeed"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/release/core/fund-deployer/IFundDeployer.sol": {
        "keccak256": "0x5b901b81b3a4ef3d30ef9b4a1fa7fdd6526dfacd66e9971d1f988c2b63334314",
        "urls": [
          "bzz-raw://79eba24bcad7e3abddafd20b518add8d5acb1e8de250a0e20050dfbe2f2d8aea",
          "dweb:/ipfs/QmYq9QYKr1UJaVyhkkSEfeiJ68TwGbwrmZsgRTPjVjkpUp"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/price-feeds/derivatives/IDerivativePriceFeed.sol": {
        "keccak256": "0x5abbc57ccbf28b2c27a0ee496f0a949a0039912975e8f9a65312d884edd05332",
        "urls": [
          "bzz-raw://9cfb87b8df1f3f58c556907e2a9cc197fa5bb90ad9bc9d4717e95fd63258d80e",
          "dweb:/ipfs/QmWxLvfq9NNJJZueeHD5EYWdRwrgzmrVdLUqp9Ta7A9ccK"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/price-feeds/derivatives/feeds/CurvePriceFeed.sol": {
        "keccak256": "0xa8ddbd75bb5cb702b539b963c2694a8abcbd19eb801a36a42c0537f69ad26b42",
        "urls": [
          "bzz-raw://b6422a1ebdf7198942cee6b61ae807887a77864abc0b1bc16dba55c7b5f3ca90",
          "dweb:/ipfs/QmXNCQkT5Er6NvKBJnhk9jR4T1KhNeorAr8F6K6dQPjztx"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/ICurveAddressProvider.sol": {
        "keccak256": "0xf8da903700c623760de62b3e5d0b01997c68b8847391e23b89081128780e55e1",
        "urls": [
          "bzz-raw://735b71b448d4d5c78e98ead84bf8f8e1e94e38ff8a77c7e4f9cc944d1d73e7df",
          "dweb:/ipfs/QmXFgGFVEvQW9wpeBspcaVAXwCcxvnNJZLafTeP2HPArNQ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/ICurveLiquidityPool.sol": {
        "keccak256": "0xd90f3399805f90d670098cc451f9948b8da7dd68be821617c76487fdc20f0731",
        "urls": [
          "bzz-raw://ba6e6e5bf761fa279329a564741e5cd2b78c5be2e50c388ac419c3d84736c9a1",
          "dweb:/ipfs/QmZ96kkg7oHLmdzwQLYbZVHDvKj8jZEJLaxNXy1j3sbgrn"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/ICurvePoolOwner.sol": {
        "keccak256": "0x42a03eb0d757153add18d4f42b5b464041056e23f6965a48705088ddd213c336",
        "urls": [
          "bzz-raw://a4166f75c4c80b8f069ae2b8cfe9bda2babca27fd30b239e30606eca69f8878c",
          "dweb:/ipfs/QmYNULkXYTaKQUiCA8htR9KbCkK5YhrHfJgKtBqXiNPt9R"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/ICurveRegistryMain.sol": {
        "keccak256": "0x9e67cfcd4195bfd8db785be1cba42bf8871d0638770adaf04d638227b29a9b2b",
        "urls": [
          "bzz-raw://cb2587e7026be73f27d4dd75deb44faeca3112a58ddc07bb87bca46d96fd977b",
          "dweb:/ipfs/QmTVdpCWZ9rv583gxP5Ycvs5Nf7jZTxVWr5oeZvywYNSSh"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/ICurveRegistryMetapoolFactory.sol": {
        "keccak256": "0x43aa6bfbda8ca1fdcb0890792e7969999146c690986938ac43818ca9b9343e58",
        "urls": [
          "bzz-raw://3426ad7d87cd51519c288004f970da83bf672d60fc7d1c647af5e84855f6a4b5",
          "dweb:/ipfs/QmevngH3Acet8R6YHzGLRyNeEoUYfbnQm7NSbzHYN7rdpf"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/FundDeployerOwnerMixin.sol": {
        "keccak256": "0xd415583828581051080d575f058643f4975d7048fda0d1765122b260d9d14934",
        "urls": [
          "bzz-raw://8191af7a3cd0867af1a401d3cba1294be054c761c2276d21bff7c9296ecc6927",
          "dweb:/ipfs/QmYBSrx1XrcqMNkH2Q6ALuczRv6LgpzVHvFH3DjvCu6SaM"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
        "urls": [
          "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
          "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
        "urls": [
          "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
          "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 242
}
