{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_convexBooster",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_crvToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cvxToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "PauseToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "RewardTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "rewardTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "claimedAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "TokenNameSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "TokenSymbolSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integral",
          "type": "uint256"
        }
      ],
      "name": "TotalHarvestIntegralUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastCheckpointBalance",
          "type": "uint256"
        }
      ],
      "name": "TotalHarvestLastCheckpointBalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "claimableReward",
          "type": "uint256"
        }
      ],
      "name": "UserHarvestUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addExtraRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_for",
          "type": "address"
        }
      ],
      "name": "claimRewardsFor",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "rewardTokens_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "claimedAmounts_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConvexPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "convexPool_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConvexPoolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "convexPoolId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurveLpToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "curveLPToken_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRewardTokenAtIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "rewardToken_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "rewardTokens_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "name": "getTotalHarvestDataForRewardToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "integral",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "lastCheckpointBalance",
              "type": "uint128"
            }
          ],
          "internalType": "struct IStakingWrapper.TotalHarvestData",
          "name": "totalHarvestData_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "name": "getUserHarvestDataForRewardToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "integral",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimableReward",
              "type": "uint128"
            }
          ],
          "internalType": "struct IStakingWrapper.UserHarvestData",
          "name": "userHarvestData_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isPaused_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setApprovals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isPaused",
          "type": "bool"
        }
      ],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_claimRewards",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "rewardTokens_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "claimedAmounts_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_claimRewardsToHolder",
          "type": "bool"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_onBehalf",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_claimRewardsToHolder",
          "type": "bool"
        }
      ],
      "name": "withdrawToOnBehalf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b506040516200355238038062003552833981016040819052620000359162000174565b604080516020808201808452600080845284519283019094529281528151879383918391620000689160039190620000c5565b5080516200007e906004906020840190620000c5565b50506005805460ff1916601217905550506001600655506001600160601b0319606091821b811660805293811b841660a05291821b831660c052901b1660e052506200020a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b80516200016e81620001f0565b92915050565b600080600080608085870312156200018b57600080fd5b600062000199878762000161565b9450506020620001ac8782880162000161565b9350506040620001bf8782880162000161565b9250506060620001d28782880162000161565b91505092959194509250565b60006001600160a01b0382166200016e565b620001fb81620001de565b81146200020757600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6132fc6200025660003980610d12525080610ce95250806108f25280610ae55280611dcd52508061083352506132fc6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806382e5d07311610104578063b187bd26116100a2578063c4f59f9b11610071578063c4f59f9b146103c6578063d12f8df0146103db578063dd62ed3e146103e3578063ffaad6a5146103f6576101da565b8063b187bd2614610390578063b6b55f2514610398578063b7b0422d146103ab578063b899aea4146103be576101da565b80639655dd61116100de5780639655dd6114610344578063a457c2d714610357578063a7d2793f1461036a578063a9059cbb1461037d576101da565b806382e5d0731461032c5780638757b15b1461033457806395d89b411461033c576101da565b806323b872dd1161017c578063395093511161014b57806339509351146102e057806357d159c6146102f357806370a082311461030657806373e2290c14610319576101da565b806323b872dd146102925780632cfafabe146102a5578063313ce567146102b857806338d07436146102cd576101da565b8063095ea7b3116101b8578063095ea7b31461022757806318160ddd146102475780631ac6d19d1461025c57806320c718101461027d576101da565b80630663b22c146101df57806306fdde03146101e9578063093f636514610207575b600080fd5b6101e7610409565b005b6101f1610597565b6040516101fe9190612f7e565b60405180910390f35b61021a6102153660046125c9565b61062d565b6040516101fe91906130af565b61023a6102353660046126b1565b610688565b6040516101fe9190612f70565b61024f6106a5565b6040516101fe91906130bd565b61026f61026a36600461258d565b6106ab565b6040516101fe929190612f4b565b6102856106f7565b6040516101fe9190612e91565b61023a6102a0366004612603565b610706565b6101e76102b3366004612650565b61078e565b6102c06107bb565b6040516101fe9190613137565b61026f6102db3660046127ef565b6107c0565b61023a6102ee3660046126b1565b6107da565b6101e7610301366004612724565b610828565b61024f61031436600461258d565b6108b9565b6101e76103273660046126e1565b6108d4565b61024f6108e7565b6101e76108ed565b6101f161092e565b61021a61035236600461258d565b61098f565b61023a6103653660046126b1565b6109d9565b6102856103783660046127b3565b610a41565b61023a61038b3660046126b1565b610a6b565b61023a610a7f565b6101e76103a63660046127b3565b610a88565b6101e76103b93660046127b3565b610a96565b610285610d4a565b6103ce610d59565b6040516101fe9190612f3a565b61024f610dba565b61024f6103f13660046125c9565b610dc0565b6101e76104043660046126b1565b610deb565b60006104136106f7565b90506000816001600160a01b031663d55a23f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048891906127d1565b905060005b8181101561059257604051632061aa2360e11b815261058a906001600160a01b038516906340c35446906104c59085906004016130bd565b60206040518083038186803b1580156104dd57600080fd5b505afa1580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051591906125ab565b6001600160a01b031663f7c618c16040518163ffffffff1660e01b815260040160206040518083038186803b15801561054d57600080fd5b505afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906125ab565b610df6565b60010161048d565b505050565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b5050505050905090565b610635612381565b506001600160a01b038082166000908152600a602090815260408083209386168352928152908290208251808401909352546001600160801b038082168452600160801b90910416908201525b92915050565b600061069c610695610ee2565b8484610ee6565b50600192915050565b60025490565b606080600260065414156106da5760405162461bcd60e51b81526004016106d19061307f565b60405180910390fd5b60026006556106e883610f9a565b60016006559094909350915050565b600d546001600160a01b031690565b60006107138484846110ef565b6107838461071f610ee2565b61077e856040518060600160405280602881526020016132a3602891396001600160a01b038a1660009081526001602052604081209061075d610ee2565b6001600160a01b031681526020810191909152604001600020549190611153565b610ee6565b5060015b9392505050565b6107a7843361077e856107a18933610dc0565b9061117f565b6107b3848484846111a7565b505050505050565b601290565b6060806107cf333386866111a7565b915091509250929050565b600061069c6107e7610ee2565b8461077e85600160006107f8610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061128a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108705760405162461bcd60e51b81526004016106d190612f9f565b6007805460ff19168215151790556040517f9077d36bc00859b5c3f320310707208543dd35092cb0a0fe117d0c6a558b148b906108ae908390612f70565b60405180910390a150565b6001600160a01b031660009081526020819052604090205490565b6108e0338484846111a7565b5050505050565b60085490565b61092c7f000000000000000000000000000000000000000000000000000000000000000060001961091c610d4a565b6001600160a01b031691906112af565b565b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b610997612381565b506001600160a01b03166000908152600960209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b600061069c6109e6610ee2565b8461077e856040518060600160405280602581526020016132cb6025913960016000610a10610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611153565b600060088281548110610a5057fe5b6000918252602090912001546001600160a01b031692915050565b600061069c610a78610ee2565b84846110ef565b60075460ff1690565b610a933333836113a9565b50565b6000610aa0610d4a565b6001600160a01b031614610ac65760405162461bcd60e51b81526004016106d19061301f565b610ace612398565b604051631526fe2760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631526fe2790610b1a9085906004016130bd565b60c06040518083038186803b158015610b3257600080fd5b505afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a9190612795565b9050610c0c81602001516001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be89190810190612760565b604051602001610bf89190612e6f565b604051602081830303815290604052611485565b610cac81602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610c4c57600080fd5b505afa158015610c60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c889190810190612760565b604051602001610c989190612e86565b6040516020818303038152906040526114c8565b8051600f80546001600160a01b039283166001600160a01b0319918216179091556060830151600d8054919093169116179055600e829055610d0d7f0000000000000000000000000000000000000000000000000000000000000000610df6565b610d367f0000000000000000000000000000000000000000000000000000000000000000610df6565b610d3e610409565b610d466108ed565b5050565b600f546001600160a01b031690565b6060600880548060200260200160405190810160405280929190818152602001828054801561062357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d93575050505050905090565b600e5490565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610d463383836113a9565b610e63816008805480602002602001604051908101604052809291908181526020018280548015610e5057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e32575b505050505061150b90919063ffffffff16565b610a9357600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0383161790556040517ff3e4c2c64e71e6ba2eaab9a599bced62f9eb91d2cda610bf41aa8c80ff2cf826906108ae908390612e91565b3390565b6001600160a01b038316610f0c5760405162461bcd60e51b81526004016106d19061304f565b6001600160a01b038216610f325760405162461bcd60e51b81526004016106d190612fbf565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f8d9085906130bd565b60405180910390a3505050565b606080610fa5610a7f565b610fb157610fb1611561565b6000610fbb6106a5565b600880546040805160208084028201810190925282815293945083018282801561100e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ff0575b50505050509250825167ffffffffffffffff8111801561102d57600080fd5b50604051908082528060200260200182016040528015611057578160200160208202803683370190505b50915060005b83518110156110a35761108484828151811061107557fe5b602002602001015186846115e3565b83828151811061109057fe5b602090810291909101015260010161105d565b50836001600160a01b03167fc17f1458d7773c19369fc6c68a3b4c44b675c86c50c997d58853aed5e38de6cd3385856040516110e193929190612e9f565b60405180910390a250915091565b600260065414156111125760405162461bcd60e51b81526004016106d19061307f565b6002600655604080518082019091526001600160a01b0380851682528316602082015261113e9061194b565b6111498383836119b4565b5050600160065550565b600081848411156111775760405162461bcd60e51b81526004016106d19190612f7e565b505050900390565b6000828211156111a15760405162461bcd60e51b81526004016106d190612fdf565b50900390565b606080600260065414156111cd5760405162461bcd60e51b81526004016106d19061307f565b600260065582156111eb576111e186610f9a565b9092509050611211565b604080518082019091526001600160a01b0387168152600060208201526112119061194b565b61121b8685611ac9565b6112258585611bab565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fa4195c37c2947bbe89165f03e320b6903116f0b10d8cfdb522330f7ce6f9fa248760405161127291906130bd565b60405180910390a46001600655909590945092505050565b6000828201838110156107875760405162461bcd60e51b81526004016106d190612fcf565b8015806113375750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906112e59030908690600401612edc565b60206040518083038186803b1580156112fd57600080fd5b505afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906127d1565b155b6113535760405162461bcd60e51b81526004016106d19061308f565b6105928363095ea7b360e01b8484604051602401611372929190612f1f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c51565b600260065414156113cc5760405162461bcd60e51b81526004016106d19061307f565b60026006556113d9610a7f565b156113f65760405162461bcd60e51b81526004016106d190612f8f565b604080518082019091526001600160a01b03831681526000602082015261141c9061194b565b6114268282611ce0565b6114308382611d94565b816001600160a01b0316836001600160a01b03167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a78360405161147391906130bd565b60405180910390a35050600160065550565b805161149890600b9060208401906123cd565b507f12e9cab73c0c48661414f76e810af7d10c67f0db958722bf9f26b28a4b4afd69816040516108ae9190612f7e565b80516114db90600c9060208401906123cd565b507f862f26027c5033c09d43eacd856547decb3227c210f6eb7b6bdc0cf5edaa3f4b816040516108ae9190612f7e565b6000805b83518110156115575783818151811061152457fe5b60200260200101516001600160a01b0316836001600160a01b0316141561154f576001915050610682565b60010161150f565b5060009392505050565b611569610409565b6115716106f7565b6001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190612742565b6001600160a01b038316600081815260096020526040808220805491516370a0823160e01b8152929390926001600160801b0390921691849161169e918791906370a0823190611637903090600401612e91565b60206040518083038186803b15801561164f57600080fd5b505afa158015611663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168791906127d1565b8554600160801b90046001600160801b0316611e58565b90508015611710576116b0828261128a565b83546001600160801b0319166001600160801b0382161784556040519092506001600160a01b038816907f64dcb34f2e45bc61753d72992aa4199ec96717158435e8085568ff38844bcd1c906117079085906130bd565b60405180910390a25b6001600160a01b038781166000908152600a60209081526040808320938a1683529290522080546001600160801b03600160801b82048116965016838110156117d15781546001600160801b0319166001600160801b03851617825561178161177a898684611ea3565b879061128a565b9550886001600160a01b0316886001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e86896040516117c8929190613101565b60405180910390a35b85156118475781546001600160801b031682556117f86001600160a01b038a168988611ed5565b886001600160a01b0316886001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e86600060405161183e9291906130e6565b60405180910390a35b6040516370a0823160e01b81526000906001600160a01b038b16906370a0823190611876903090600401612e91565b60206040518083038186803b15801561188e57600080fd5b505afa1580156118a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c691906127d1565b8654909150600160801b90046001600160801b031681101561193e5785546001600160801b03808316600160801b0291161786556040516001600160a01b038b16907fdeb2652df61fdedd2d231dc4d777175097cc26369032d339be2a6db36d7754f2906119359084906130bd565b60405180910390a25b5050505050509392505050565b611953610a7f565b61195f5761195f611561565b60006119696106a5565b60085490915060005b818110156119ae576119a66008828154811061198a57fe5b6000918252602090912001546001600160a01b03168585611ef4565b600101611972565b50505050565b6001600160a01b0383166119da5760405162461bcd60e51b81526004016106d19061303f565b6001600160a01b038216611a005760405162461bcd60e51b81526004016106d190612faf565b611a0b838383610592565b611a488160405180606001604052806026815260200161327d602691396001600160a01b0386166000908152602081905260409020549190611153565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611a77908261128a565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f8d9085906130bd565b6001600160a01b038216611aef5760405162461bcd60e51b81526004016106d19061302f565b611afb82600083610592565b611b388160405180606001604052806022815260200161325b602291396001600160a01b0385166000908152602081905260409020549190611153565b6001600160a01b038316600090815260208190526040902055600254611b5e908261117f565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b9f9085906130bd565b60405180910390a35050565b611bb36106f7565b6001600160a01b031663c32e72028260006040518363ffffffff1660e01b8152600401611be19291906130cb565b602060405180830381600087803b158015611bfb57600080fd5b505af1158015611c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c339190612742565b50610d468282611c41610d4a565b6001600160a01b03169190611ed5565b6060611ca6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121e59092919063ffffffff16565b8051909150156105925780806020019051810190611cc49190612742565b6105925760405162461bcd60e51b81526004016106d19061306f565b6001600160a01b038216611d065760405162461bcd60e51b81526004016106d19061309f565b611d1260008383610592565b600254611d1f908261128a565b6002556001600160a01b038216600090815260208190526040902054611d45908261128a565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b9f9085906130bd565b611db3823083611da2610d4a565b6001600160a01b03169291906121f4565b600e546040516321d0683360e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916343a0d06691611e069190859060019060040161310f565b602060405180830381600087803b158015611e2057600080fd5b505af1158015611e34573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190612742565b60008315611557576000611e6c848461117f565b90508015611e9857611e9085611e8a83670de0b6b3a7640000612215565b9061224f565b915050610787565b505060009392505050565b6000611ecd670de0b6b3a7640000611e8a611ebe868661117f565b611ec7886108b9565b90612215565b949350505050565b6105928363a9059cbb60e01b8484604051602401611372929190612f1f565b6001600160a01b038316600081815260096020526040808220805491516370a0823160e01b815290936001600160801b039092169291906370a0823190611f3f903090600401612e91565b60206040518083038186803b158015611f5757600080fd5b505afa158015611f6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8f91906127d1565b8354909150600090611fb49086908490600160801b90046001600160801b0316611e58565b9050801561208157611fc6838261128a565b84546001600160801b0319166001600160801b0382161785556040519093506001600160a01b038816907f64dcb34f2e45bc61753d72992aa4199ec96717158435e8085568ff38844bcd1c9061201d9086906130bd565b60405180910390a283546001600160801b03808416600160801b0291161784556040516001600160a01b038816907fdeb2652df61fdedd2d231dc4d777175097cc26369032d339be2a6db36d7754f2906120789085906130bd565b60405180910390a25b60005b60028110156121db57600087826002811061209b57fe5b60200201516001600160a01b031614156120b4576121d3565b6001600160a01b0388166000908152600a60205260408120818984600281106120d957fe5b602090810291909101516001600160a01b0316825281019190915260400160002080549091506001600160801b0316858110156121d05760006121486121308b866002811061212457fe5b60200201518985611ea3565b8454600160801b90046001600160801b03169061128a565b83546001600160801b03196001600160801b03918216600160801b84841602171690891617845590506001600160a01b038b168a856002811061218757fe5b60200201516001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e89846040516121c6929190613101565b60405180910390a3505b50505b600101612084565b5050505050505050565b6060611ecd8484600085612281565b6119ae846323b872dd60e01b85858560405160240161137293929190612ef7565b60008261222457506000610682565b8282028284828161223157fe5b04146107875760405162461bcd60e51b81526004016106d19061300f565b60008082116122705760405162461bcd60e51b81526004016106d190612fff565b81838161227957fe5b049392505050565b6060824710156122a35760405162461bcd60e51b81526004016106d190612fef565b6122ac85612342565b6122c85760405162461bcd60e51b81526004016106d19061305f565b60006060866001600160a01b031685876040516122e59190612e63565b60006040518083038185875af1925050503d8060008114612322576040519150601f19603f3d011682016040523d82523d6000602084013e612327565b606091505b5091509150612337828286612348565b979650505050505050565b3b151590565b60608315612357575081610787565b8251156123675782518084602001fd5b8160405162461bcd60e51b81526004016106d19190612f7e565b604080518082019091526000808252602082015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061240e57805160ff191683800117855561243b565b8280016001018555821561243b579182015b8281111561243b578251825591602001919060010190612420565b5061244792915061244b565b5090565b5b80821115612447576000815560010161244c565b803561068281613234565b805161068281613234565b803561068281613248565b805161068281613248565b600082601f83011261249d57600080fd5b81516124b06124ab8261316c565b613145565b915080825260208301602083018583830111156124cc57600080fd5b6124d78382846131fe565b50505092915050565b600060c082840312156124f257600080fd5b6124fc60c0613145565b9050600061250a848461246b565b825250602061251b8484830161246b565b602083015250604061252f8482850161246b565b60408301525060606125438482850161246b565b60608301525060806125578482850161246b565b60808301525060a061256b84828501612481565b60a08301525092915050565b803561068281613251565b805161068281613251565b60006020828403121561259f57600080fd5b6000611ecd8484612460565b6000602082840312156125bd57600080fd5b6000611ecd848461246b565b600080604083850312156125dc57600080fd5b60006125e88585612460565b92505060206125f985828601612460565b9150509250929050565b60008060006060848603121561261857600080fd5b60006126248686612460565b935050602061263586828701612460565b925050604061264686828701612577565b9150509250925092565b6000806000806080858703121561266657600080fd5b60006126728787612460565b945050602061268387828801612460565b935050604061269487828801612577565b92505060606126a587828801612476565b91505092959194509250565b600080604083850312156126c457600080fd5b60006126d08585612460565b92505060206125f985828601612577565b6000806000606084860312156126f657600080fd5b60006127028686612460565b935050602061271386828701612577565b925050604061264686828701612476565b60006020828403121561273657600080fd5b6000611ecd8484612476565b60006020828403121561275457600080fd5b6000611ecd8484612481565b60006020828403121561277257600080fd5b815167ffffffffffffffff81111561278957600080fd5b611ecd8482850161248c565b600060c082840312156127a757600080fd5b6000611ecd84846124e0565b6000602082840312156127c557600080fd5b6000611ecd8484612577565b6000602082840312156127e357600080fd5b6000611ecd8484612582565b6000806040838503121561280257600080fd5b600061280e8585612577565b92505060206125f985828601612476565b600061282b838361284e565b505060200190565b600061282b8383612e51565b612848816131dd565b82525050565b612848816131ac565b60006128628261319a565b61286c818561319e565b935061287783613194565b8060005b838110156128a557815161288f888261281f565b975061289a83613194565b92505060010161287b565b509495945050505050565b60006128bb8261319a565b6128c5818561319e565b93506128d083613194565b8060005b838110156128a55781516128e88882612833565b97506128f383613194565b9250506001016128d4565b612848816131b7565b60006129128261319a565b61291c81856131a7565b935061292c8185602086016131fe565b9290920192915050565b612848816131e8565b600061294a8261319a565b612954818561319e565b93506129648185602086016131fe565b61296d8161322a565b9093019392505050565b600061298460118361319e565b7017d7d9195c1bdcda5d0e8814185d5cd959607a1b815260200192915050565b60006129b160138361319e565b724f6e6c79206f776e65722063616c6c61626c6560681b815260200192915050565b60006129e060238361319e565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b602082015260400192915050565b6000612a25600f836131a7565b6e022b73d3cb6b29029ba30b5b2b21d1608d1b8152600f0192915050565b6000612a5060228361319e565b7f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b602082015260400192915050565b6000612a94601b8361319e565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000612acd601e8361319e565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000612b0660268361319e565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015260400192915050565b6000612b4e601a8361319e565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000612b8760218361319e565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000612bca60118361319e565b701a5b9a5d0e88125b9a5d1a585b1a5e9959607a1b815260200192915050565b6000612bf760218361319e565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265738152607360f81b602082015260400192915050565b6000612c3a60258361319e565b7f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000612c816003836131a7565b6273746b60e81b815260030192915050565b6000612ca060248361319e565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b602082015260400192915050565b6000612ce6601d8361319e565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815260200192915050565b6000612d1f602a8361319e565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000612d6b601f8361319e565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000612da460368361319e565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000612dfc601f8361319e565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300815260200192915050565b80516040830190612e398482612e48565b5060208201516119ae60208501825b612848816131bc565b612848816131d4565b612848816131d7565b60006107878284612907565b6000612e7a82612a18565b91506107878284612907565b6000612e7a82612c74565b60208101610682828461284e565b60608101612ead828661283f565b8181036020830152612ebf8185612857565b90508181036040830152612ed381846128b0565b95945050505050565b60408101612eea828561284e565b610787602083018461284e565b60608101612f05828661284e565b612f12602083018561284e565b611ecd6040830184612e51565b60408101612f2d828561284e565b6107876020830184612e51565b602080825281016107878184612857565b60408082528101612f5c8185612857565b90508181036020830152611ecd81846128b0565b6020810161068282846128fe565b60208082528101610787818461293f565b6020808252810161068281612977565b60208082528101610682816129a4565b60208082528101610682816129d3565b6020808252810161068281612a43565b6020808252810161068281612a87565b6020808252810161068281612ac0565b6020808252810161068281612af9565b6020808252810161068281612b41565b6020808252810161068281612b7a565b6020808252810161068281612bbd565b6020808252810161068281612bea565b6020808252810161068281612c2d565b6020808252810161068281612c93565b6020808252810161068281612cd9565b6020808252810161068281612d12565b6020808252810161068281612d5e565b6020808252810161068281612d97565b6020808252810161068281612def565b604081016106828284612e28565b602081016106828284612e51565b604081016130d98285612e51565b61078760208301846128fe565b604081016130f48285612e51565b6107876020830184612936565b60408101612f2d8285612e51565b6060810161311d8286612e51565b61312a6020830185612e51565b611ecd60408301846128fe565b602081016106828284612e5a565b60405181810167ffffffffffffffff8111828210171561316457600080fd5b604052919050565b600067ffffffffffffffff82111561318357600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610682826131c8565b151590565b6001600160801b031690565b6001600160a01b031690565b90565b60ff1690565b6000610682826131f3565b6000610682826131d4565b6000610682826131ac565b60005b83811015613219578181015183820152602001613201565b838111156119ae5750506000910152565b601f01601f191690565b61323d816131ac565b8114610a9357600080fd5b61323d816131b7565b61323d816131d456fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c634300060c000a",
    "sourceMap": "702:4799:263:-:0;;;1019:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2712:182:259;;;;;;;;;;-1:-1:-1;2712:182:259;;;;;;;;;;;;;;2032:13:447;;1173:6:263;;2712:182:259;;;;2032:13:447;;:5;;2712:182:259;2032:13:447;:::i;:::-;-1:-1:-1;2055:17:447;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:447;:14;;-1:-1:-1;;2082:14:447;2094:2;2082:14;;;-1:-1:-1;;;1760:7:453;:22;-1:-1:-1;;;;2873:14:259;;;;;::::1;::::0;1199:56:263;;;;;::::1;::::0;1265:21;;;;;::::1;::::0;1296;;;::::1;::::0;-1:-1:-1;702:4799:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;702:4799:263;;;-1:-1:-1;702:4799:263;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;:::-;68:71;;;;:::o;146:672::-;;;;;312:3;300:9;291:7;287:23;283:33;280:2;;;329:1;326;319:12;280:2;364:1;381:64;437:7;417:9;381:64;:::i;:::-;371:74;;343:108;482:2;500:64;556:7;547:6;536:9;532:22;500:64;:::i;:::-;490:74;;461:109;601:2;619:64;675:7;666:6;655:9;651:22;619:64;:::i;:::-;609:74;;580:109;720:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;699:109;274:544;;;;;;;:::o;825:91::-;;-1:-1;;;;;985:54;;887:24;968:76::o;1051:117::-;1120:24;1138:5;1120:24;:::i;:::-;1113:5;1110:35;1100:2;;1159:1;1156;1149:12;1100:2;1094:74;:::o;:::-;702:4799:263;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806382e5d07311610104578063b187bd26116100a2578063c4f59f9b11610071578063c4f59f9b146103c6578063d12f8df0146103db578063dd62ed3e146103e3578063ffaad6a5146103f6576101da565b8063b187bd2614610390578063b6b55f2514610398578063b7b0422d146103ab578063b899aea4146103be576101da565b80639655dd61116100de5780639655dd6114610344578063a457c2d714610357578063a7d2793f1461036a578063a9059cbb1461037d576101da565b806382e5d0731461032c5780638757b15b1461033457806395d89b411461033c576101da565b806323b872dd1161017c578063395093511161014b57806339509351146102e057806357d159c6146102f357806370a082311461030657806373e2290c14610319576101da565b806323b872dd146102925780632cfafabe146102a5578063313ce567146102b857806338d07436146102cd576101da565b8063095ea7b3116101b8578063095ea7b31461022757806318160ddd146102475780631ac6d19d1461025c57806320c718101461027d576101da565b80630663b22c146101df57806306fdde03146101e9578063093f636514610207575b600080fd5b6101e7610409565b005b6101f1610597565b6040516101fe9190612f7e565b60405180910390f35b61021a6102153660046125c9565b61062d565b6040516101fe91906130af565b61023a6102353660046126b1565b610688565b6040516101fe9190612f70565b61024f6106a5565b6040516101fe91906130bd565b61026f61026a36600461258d565b6106ab565b6040516101fe929190612f4b565b6102856106f7565b6040516101fe9190612e91565b61023a6102a0366004612603565b610706565b6101e76102b3366004612650565b61078e565b6102c06107bb565b6040516101fe9190613137565b61026f6102db3660046127ef565b6107c0565b61023a6102ee3660046126b1565b6107da565b6101e7610301366004612724565b610828565b61024f61031436600461258d565b6108b9565b6101e76103273660046126e1565b6108d4565b61024f6108e7565b6101e76108ed565b6101f161092e565b61021a61035236600461258d565b61098f565b61023a6103653660046126b1565b6109d9565b6102856103783660046127b3565b610a41565b61023a61038b3660046126b1565b610a6b565b61023a610a7f565b6101e76103a63660046127b3565b610a88565b6101e76103b93660046127b3565b610a96565b610285610d4a565b6103ce610d59565b6040516101fe9190612f3a565b61024f610dba565b61024f6103f13660046125c9565b610dc0565b6101e76104043660046126b1565b610deb565b60006104136106f7565b90506000816001600160a01b031663d55a23f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048891906127d1565b905060005b8181101561059257604051632061aa2360e11b815261058a906001600160a01b038516906340c35446906104c59085906004016130bd565b60206040518083038186803b1580156104dd57600080fd5b505afa1580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051591906125ab565b6001600160a01b031663f7c618c16040518163ffffffff1660e01b815260040160206040518083038186803b15801561054d57600080fd5b505afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906125ab565b610df6565b60010161048d565b505050565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b5050505050905090565b610635612381565b506001600160a01b038082166000908152600a602090815260408083209386168352928152908290208251808401909352546001600160801b038082168452600160801b90910416908201525b92915050565b600061069c610695610ee2565b8484610ee6565b50600192915050565b60025490565b606080600260065414156106da5760405162461bcd60e51b81526004016106d19061307f565b60405180910390fd5b60026006556106e883610f9a565b60016006559094909350915050565b600d546001600160a01b031690565b60006107138484846110ef565b6107838461071f610ee2565b61077e856040518060600160405280602881526020016132a3602891396001600160a01b038a1660009081526001602052604081209061075d610ee2565b6001600160a01b031681526020810191909152604001600020549190611153565b610ee6565b5060015b9392505050565b6107a7843361077e856107a18933610dc0565b9061117f565b6107b3848484846111a7565b505050505050565b601290565b6060806107cf333386866111a7565b915091509250929050565b600061069c6107e7610ee2565b8461077e85600160006107f8610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061128a565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108705760405162461bcd60e51b81526004016106d190612f9f565b6007805460ff19168215151790556040517f9077d36bc00859b5c3f320310707208543dd35092cb0a0fe117d0c6a558b148b906108ae908390612f70565b60405180910390a150565b6001600160a01b031660009081526020819052604090205490565b6108e0338484846111a7565b5050505050565b60085490565b61092c7f000000000000000000000000000000000000000000000000000000000000000060001961091c610d4a565b6001600160a01b031691906112af565b565b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b610997612381565b506001600160a01b03166000908152600960209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b600061069c6109e6610ee2565b8461077e856040518060600160405280602581526020016132cb6025913960016000610a10610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611153565b600060088281548110610a5057fe5b6000918252602090912001546001600160a01b031692915050565b600061069c610a78610ee2565b84846110ef565b60075460ff1690565b610a933333836113a9565b50565b6000610aa0610d4a565b6001600160a01b031614610ac65760405162461bcd60e51b81526004016106d19061301f565b610ace612398565b604051631526fe2760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631526fe2790610b1a9085906004016130bd565b60c06040518083038186803b158015610b3257600080fd5b505afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a9190612795565b9050610c0c81602001516001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be89190810190612760565b604051602001610bf89190612e6f565b604051602081830303815290604052611485565b610cac81602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610c4c57600080fd5b505afa158015610c60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c889190810190612760565b604051602001610c989190612e86565b6040516020818303038152906040526114c8565b8051600f80546001600160a01b039283166001600160a01b0319918216179091556060830151600d8054919093169116179055600e829055610d0d7f0000000000000000000000000000000000000000000000000000000000000000610df6565b610d367f0000000000000000000000000000000000000000000000000000000000000000610df6565b610d3e610409565b610d466108ed565b5050565b600f546001600160a01b031690565b6060600880548060200260200160405190810160405280929190818152602001828054801561062357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d93575050505050905090565b600e5490565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610d463383836113a9565b610e63816008805480602002602001604051908101604052809291908181526020018280548015610e5057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e32575b505050505061150b90919063ffffffff16565b610a9357600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b0383161790556040517ff3e4c2c64e71e6ba2eaab9a599bced62f9eb91d2cda610bf41aa8c80ff2cf826906108ae908390612e91565b3390565b6001600160a01b038316610f0c5760405162461bcd60e51b81526004016106d19061304f565b6001600160a01b038216610f325760405162461bcd60e51b81526004016106d190612fbf565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f8d9085906130bd565b60405180910390a3505050565b606080610fa5610a7f565b610fb157610fb1611561565b6000610fbb6106a5565b600880546040805160208084028201810190925282815293945083018282801561100e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ff0575b50505050509250825167ffffffffffffffff8111801561102d57600080fd5b50604051908082528060200260200182016040528015611057578160200160208202803683370190505b50915060005b83518110156110a35761108484828151811061107557fe5b602002602001015186846115e3565b83828151811061109057fe5b602090810291909101015260010161105d565b50836001600160a01b03167fc17f1458d7773c19369fc6c68a3b4c44b675c86c50c997d58853aed5e38de6cd3385856040516110e193929190612e9f565b60405180910390a250915091565b600260065414156111125760405162461bcd60e51b81526004016106d19061307f565b6002600655604080518082019091526001600160a01b0380851682528316602082015261113e9061194b565b6111498383836119b4565b5050600160065550565b600081848411156111775760405162461bcd60e51b81526004016106d19190612f7e565b505050900390565b6000828211156111a15760405162461bcd60e51b81526004016106d190612fdf565b50900390565b606080600260065414156111cd5760405162461bcd60e51b81526004016106d19061307f565b600260065582156111eb576111e186610f9a565b9092509050611211565b604080518082019091526001600160a01b0387168152600060208201526112119061194b565b61121b8685611ac9565b6112258585611bab565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fa4195c37c2947bbe89165f03e320b6903116f0b10d8cfdb522330f7ce6f9fa248760405161127291906130bd565b60405180910390a46001600655909590945092505050565b6000828201838110156107875760405162461bcd60e51b81526004016106d190612fcf565b8015806113375750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906112e59030908690600401612edc565b60206040518083038186803b1580156112fd57600080fd5b505afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906127d1565b155b6113535760405162461bcd60e51b81526004016106d19061308f565b6105928363095ea7b360e01b8484604051602401611372929190612f1f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c51565b600260065414156113cc5760405162461bcd60e51b81526004016106d19061307f565b60026006556113d9610a7f565b156113f65760405162461bcd60e51b81526004016106d190612f8f565b604080518082019091526001600160a01b03831681526000602082015261141c9061194b565b6114268282611ce0565b6114308382611d94565b816001600160a01b0316836001600160a01b03167f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a78360405161147391906130bd565b60405180910390a35050600160065550565b805161149890600b9060208401906123cd565b507f12e9cab73c0c48661414f76e810af7d10c67f0db958722bf9f26b28a4b4afd69816040516108ae9190612f7e565b80516114db90600c9060208401906123cd565b507f862f26027c5033c09d43eacd856547decb3227c210f6eb7b6bdc0cf5edaa3f4b816040516108ae9190612f7e565b6000805b83518110156115575783818151811061152457fe5b60200260200101516001600160a01b0316836001600160a01b0316141561154f576001915050610682565b60010161150f565b5060009392505050565b611569610409565b6115716106f7565b6001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190612742565b6001600160a01b038316600081815260096020526040808220805491516370a0823160e01b8152929390926001600160801b0390921691849161169e918791906370a0823190611637903090600401612e91565b60206040518083038186803b15801561164f57600080fd5b505afa158015611663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168791906127d1565b8554600160801b90046001600160801b0316611e58565b90508015611710576116b0828261128a565b83546001600160801b0319166001600160801b0382161784556040519092506001600160a01b038816907f64dcb34f2e45bc61753d72992aa4199ec96717158435e8085568ff38844bcd1c906117079085906130bd565b60405180910390a25b6001600160a01b038781166000908152600a60209081526040808320938a1683529290522080546001600160801b03600160801b82048116965016838110156117d15781546001600160801b0319166001600160801b03851617825561178161177a898684611ea3565b879061128a565b9550886001600160a01b0316886001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e86896040516117c8929190613101565b60405180910390a35b85156118475781546001600160801b031682556117f86001600160a01b038a168988611ed5565b886001600160a01b0316886001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e86600060405161183e9291906130e6565b60405180910390a35b6040516370a0823160e01b81526000906001600160a01b038b16906370a0823190611876903090600401612e91565b60206040518083038186803b15801561188e57600080fd5b505afa1580156118a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c691906127d1565b8654909150600160801b90046001600160801b031681101561193e5785546001600160801b03808316600160801b0291161786556040516001600160a01b038b16907fdeb2652df61fdedd2d231dc4d777175097cc26369032d339be2a6db36d7754f2906119359084906130bd565b60405180910390a25b5050505050509392505050565b611953610a7f565b61195f5761195f611561565b60006119696106a5565b60085490915060005b818110156119ae576119a66008828154811061198a57fe5b6000918252602090912001546001600160a01b03168585611ef4565b600101611972565b50505050565b6001600160a01b0383166119da5760405162461bcd60e51b81526004016106d19061303f565b6001600160a01b038216611a005760405162461bcd60e51b81526004016106d190612faf565b611a0b838383610592565b611a488160405180606001604052806026815260200161327d602691396001600160a01b0386166000908152602081905260409020549190611153565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611a77908261128a565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f8d9085906130bd565b6001600160a01b038216611aef5760405162461bcd60e51b81526004016106d19061302f565b611afb82600083610592565b611b388160405180606001604052806022815260200161325b602291396001600160a01b0385166000908152602081905260409020549190611153565b6001600160a01b038316600090815260208190526040902055600254611b5e908261117f565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b9f9085906130bd565b60405180910390a35050565b611bb36106f7565b6001600160a01b031663c32e72028260006040518363ffffffff1660e01b8152600401611be19291906130cb565b602060405180830381600087803b158015611bfb57600080fd5b505af1158015611c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c339190612742565b50610d468282611c41610d4a565b6001600160a01b03169190611ed5565b6060611ca6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121e59092919063ffffffff16565b8051909150156105925780806020019051810190611cc49190612742565b6105925760405162461bcd60e51b81526004016106d19061306f565b6001600160a01b038216611d065760405162461bcd60e51b81526004016106d19061309f565b611d1260008383610592565b600254611d1f908261128a565b6002556001600160a01b038216600090815260208190526040902054611d45908261128a565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b9f9085906130bd565b611db3823083611da2610d4a565b6001600160a01b03169291906121f4565b600e546040516321d0683360e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916343a0d06691611e069190859060019060040161310f565b602060405180830381600087803b158015611e2057600080fd5b505af1158015611e34573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190612742565b60008315611557576000611e6c848461117f565b90508015611e9857611e9085611e8a83670de0b6b3a7640000612215565b9061224f565b915050610787565b505060009392505050565b6000611ecd670de0b6b3a7640000611e8a611ebe868661117f565b611ec7886108b9565b90612215565b949350505050565b6105928363a9059cbb60e01b8484604051602401611372929190612f1f565b6001600160a01b038316600081815260096020526040808220805491516370a0823160e01b815290936001600160801b039092169291906370a0823190611f3f903090600401612e91565b60206040518083038186803b158015611f5757600080fd5b505afa158015611f6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8f91906127d1565b8354909150600090611fb49086908490600160801b90046001600160801b0316611e58565b9050801561208157611fc6838261128a565b84546001600160801b0319166001600160801b0382161785556040519093506001600160a01b038816907f64dcb34f2e45bc61753d72992aa4199ec96717158435e8085568ff38844bcd1c9061201d9086906130bd565b60405180910390a283546001600160801b03808416600160801b0291161784556040516001600160a01b038816907fdeb2652df61fdedd2d231dc4d777175097cc26369032d339be2a6db36d7754f2906120789085906130bd565b60405180910390a25b60005b60028110156121db57600087826002811061209b57fe5b60200201516001600160a01b031614156120b4576121d3565b6001600160a01b0388166000908152600a60205260408120818984600281106120d957fe5b602090810291909101516001600160a01b0316825281019190915260400160002080549091506001600160801b0316858110156121d05760006121486121308b866002811061212457fe5b60200201518985611ea3565b8454600160801b90046001600160801b03169061128a565b83546001600160801b03196001600160801b03918216600160801b84841602171690891617845590506001600160a01b038b168a856002811061218757fe5b60200201516001600160a01b03167fe3bdf7e684a4024370a702abfcca4a32b08642aadc27065f3356458bd23e977e89846040516121c6929190613101565b60405180910390a3505b50505b600101612084565b5050505050505050565b6060611ecd8484600085612281565b6119ae846323b872dd60e01b85858560405160240161137293929190612ef7565b60008261222457506000610682565b8282028284828161223157fe5b04146107875760405162461bcd60e51b81526004016106d19061300f565b60008082116122705760405162461bcd60e51b81526004016106d190612fff565b81838161227957fe5b049392505050565b6060824710156122a35760405162461bcd60e51b81526004016106d190612fef565b6122ac85612342565b6122c85760405162461bcd60e51b81526004016106d19061305f565b60006060866001600160a01b031685876040516122e59190612e63565b60006040518083038185875af1925050503d8060008114612322576040519150601f19603f3d011682016040523d82523d6000602084013e612327565b606091505b5091509150612337828286612348565b979650505050505050565b3b151590565b60608315612357575081610787565b8251156123675782518084602001fd5b8160405162461bcd60e51b81526004016106d19190612f7e565b604080518082019091526000808252602082015290565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061240e57805160ff191683800117855561243b565b8280016001018555821561243b579182015b8281111561243b578251825591602001919060010190612420565b5061244792915061244b565b5090565b5b80821115612447576000815560010161244c565b803561068281613234565b805161068281613234565b803561068281613248565b805161068281613248565b600082601f83011261249d57600080fd5b81516124b06124ab8261316c565b613145565b915080825260208301602083018583830111156124cc57600080fd5b6124d78382846131fe565b50505092915050565b600060c082840312156124f257600080fd5b6124fc60c0613145565b9050600061250a848461246b565b825250602061251b8484830161246b565b602083015250604061252f8482850161246b565b60408301525060606125438482850161246b565b60608301525060806125578482850161246b565b60808301525060a061256b84828501612481565b60a08301525092915050565b803561068281613251565b805161068281613251565b60006020828403121561259f57600080fd5b6000611ecd8484612460565b6000602082840312156125bd57600080fd5b6000611ecd848461246b565b600080604083850312156125dc57600080fd5b60006125e88585612460565b92505060206125f985828601612460565b9150509250929050565b60008060006060848603121561261857600080fd5b60006126248686612460565b935050602061263586828701612460565b925050604061264686828701612577565b9150509250925092565b6000806000806080858703121561266657600080fd5b60006126728787612460565b945050602061268387828801612460565b935050604061269487828801612577565b92505060606126a587828801612476565b91505092959194509250565b600080604083850312156126c457600080fd5b60006126d08585612460565b92505060206125f985828601612577565b6000806000606084860312156126f657600080fd5b60006127028686612460565b935050602061271386828701612577565b925050604061264686828701612476565b60006020828403121561273657600080fd5b6000611ecd8484612476565b60006020828403121561275457600080fd5b6000611ecd8484612481565b60006020828403121561277257600080fd5b815167ffffffffffffffff81111561278957600080fd5b611ecd8482850161248c565b600060c082840312156127a757600080fd5b6000611ecd84846124e0565b6000602082840312156127c557600080fd5b6000611ecd8484612577565b6000602082840312156127e357600080fd5b6000611ecd8484612582565b6000806040838503121561280257600080fd5b600061280e8585612577565b92505060206125f985828601612476565b600061282b838361284e565b505060200190565b600061282b8383612e51565b612848816131dd565b82525050565b612848816131ac565b60006128628261319a565b61286c818561319e565b935061287783613194565b8060005b838110156128a557815161288f888261281f565b975061289a83613194565b92505060010161287b565b509495945050505050565b60006128bb8261319a565b6128c5818561319e565b93506128d083613194565b8060005b838110156128a55781516128e88882612833565b97506128f383613194565b9250506001016128d4565b612848816131b7565b60006129128261319a565b61291c81856131a7565b935061292c8185602086016131fe565b9290920192915050565b612848816131e8565b600061294a8261319a565b612954818561319e565b93506129648185602086016131fe565b61296d8161322a565b9093019392505050565b600061298460118361319e565b7017d7d9195c1bdcda5d0e8814185d5cd959607a1b815260200192915050565b60006129b160138361319e565b724f6e6c79206f776e65722063616c6c61626c6560681b815260200192915050565b60006129e060238361319e565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b602082015260400192915050565b6000612a25600f836131a7565b6e022b73d3cb6b29029ba30b5b2b21d1608d1b8152600f0192915050565b6000612a5060228361319e565b7f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b602082015260400192915050565b6000612a94601b8361319e565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000612acd601e8361319e565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815260200192915050565b6000612b0660268361319e565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015260400192915050565b6000612b4e601a8361319e565b7f536166654d6174683a206469766973696f6e206279207a65726f000000000000815260200192915050565b6000612b8760218361319e565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000612bca60118361319e565b701a5b9a5d0e88125b9a5d1a585b1a5e9959607a1b815260200192915050565b6000612bf760218361319e565b7f45524332303a206275726e2066726f6d20746865207a65726f206164647265738152607360f81b602082015260400192915050565b6000612c3a60258361319e565b7f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b602082015260400192915050565b6000612c816003836131a7565b6273746b60e81b815260030192915050565b6000612ca060248361319e565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b602082015260400192915050565b6000612ce6601d8361319e565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815260200192915050565b6000612d1f602a8361319e565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000612d6b601f8361319e565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000612da460368361319e565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b6000612dfc601f8361319e565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300815260200192915050565b80516040830190612e398482612e48565b5060208201516119ae60208501825b612848816131bc565b612848816131d4565b612848816131d7565b60006107878284612907565b6000612e7a82612a18565b91506107878284612907565b6000612e7a82612c74565b60208101610682828461284e565b60608101612ead828661283f565b8181036020830152612ebf8185612857565b90508181036040830152612ed381846128b0565b95945050505050565b60408101612eea828561284e565b610787602083018461284e565b60608101612f05828661284e565b612f12602083018561284e565b611ecd6040830184612e51565b60408101612f2d828561284e565b6107876020830184612e51565b602080825281016107878184612857565b60408082528101612f5c8185612857565b90508181036020830152611ecd81846128b0565b6020810161068282846128fe565b60208082528101610787818461293f565b6020808252810161068281612977565b60208082528101610682816129a4565b60208082528101610682816129d3565b6020808252810161068281612a43565b6020808252810161068281612a87565b6020808252810161068281612ac0565b6020808252810161068281612af9565b6020808252810161068281612b41565b6020808252810161068281612b7a565b6020808252810161068281612bbd565b6020808252810161068281612bea565b6020808252810161068281612c2d565b6020808252810161068281612c93565b6020808252810161068281612cd9565b6020808252810161068281612d12565b6020808252810161068281612d5e565b6020808252810161068281612d97565b6020808252810161068281612def565b604081016106828284612e28565b602081016106828284612e51565b604081016130d98285612e51565b61078760208301846128fe565b604081016130f48285612e51565b6107876020830184612936565b60408101612f2d8285612e51565b6060810161311d8286612e51565b61312a6020830185612e51565b611ecd60408301846128fe565b602081016106828284612e5a565b60405181810167ffffffffffffffff8111828210171561316457600080fd5b604052919050565b600067ffffffffffffffff82111561318357600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610682826131c8565b151590565b6001600160801b031690565b6001600160a01b031690565b90565b60ff1690565b6000610682826131f3565b6000610682826131d4565b6000610682826131ac565b60005b83811015613219578181015183820152602001613201565b838111156119ae5750506000910152565b601f01601f191690565b61323d816131ac565b8114610a9357600080fd5b61323d816131b7565b61323d816131d456fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c634300060c000a",
    "sourceMap": "702:4799:263:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:680;;;:::i;:::-;;1293:100:260;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17864:261:259;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4244:166:447:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3235:106::-;;;:::i;:::-;;;;;;;:::i;3628:231:259:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4970:101:263:-;;;:::i;:::-;;;;;;;:::i;4877:317:447:-;;;;;;:::i;:::-;;:::i;6483:372:259:-;;;;;;:::i;:::-;;:::i;15957:115::-;;;:::i;:::-;;;;;;;:::i;5347:258::-;;;;;;:::i;:::-;;:::i;5589:215:447:-;;;;;;:::i;:::-;;:::i;3042:130:259:-;;;;;;:::i;:::-;;:::i;3399:125:447:-;;;;;;:::i;:::-;;:::i;5863:202:259:-;;;;;;:::i;:::-;;:::i;16873:120::-;;;:::i;3100:137:263:-;;;:::i;1548:106:260:-;;;:::i;17404:241:259:-;;;;;;:::i;:::-;;:::i;6291:266:447:-;;;;;;:::i;:::-;;:::i;16591:179:259:-;;;;;;:::i;:::-;;:::i;3727:172:447:-;;;;;;:::i;:::-;;:::i;18244:96:259:-;;;:::i;4014:111::-;;;;;;:::i;:::-;;:::i;1434:723:263:-;;;;;;:::i;:::-;;:::i;5392:107::-;;;:::i;17102:125:259:-;;;:::i;:::-;;;;;;;:::i;5179:107:263:-;;;:::i;3957:149:447:-;;;;;;:::i;:::-;;:::i;4334:119:259:-;;;;;;:::i;:::-;;:::i;2356:680:263:-;2400:40;2465:15;:13;:15::i;:::-;2400:81;;2695:25;2723:18;-1:-1:-1;;;;;2723:37:263;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2695:67;;2777:9;2772:258;2792:17;2788:1;:21;2772:258;;;2956:34;;-1:-1:-1;;;2956:34:263;;2890:129;;-1:-1:-1;;;;;2956:31:263;;;;;:34;;2988:1;;2956:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2924:79:263;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2890:16;:129::i;:::-;2811:3;;2772:258;;;;2356:680;;:::o;1293:100:260:-;1377:9;1370:16;;;;;;;;-1:-1:-1;;1370:16:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:19;;1370:16;;1377:9;;1370:16;;1377:9;1370:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:100;:::o;17864:261:259:-;18005:39;;:::i;:::-;-1:-1:-1;;;;;;18067:44:259;;;;;;;:30;:44;;;;;;;;:51;;;;;;;;;;;;18060:58;;;;;;;;;-1:-1:-1;;;;;18060:58:259;;;;;-1:-1:-1;;;18060:58:259;;;;;;;;17864:261;;;;;:::o;4244:166:447:-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:447;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;3628:231:259:-;3739:30;3771:32;1688:1:453;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:453;;;;;;;:::i;:::-;;;;;;;;;1688:1;2407:7;:18;3826:26:259::1;3847:4:::0;3826:20:::1;:26::i;:::-;1645:1:453::0;2580:7;:22;3819:33:259;;;;-1:-1:-1;3628:231:259;-1:-1:-1;;3628:231:259:o;4970:101:263:-;5054:10;;-1:-1:-1;;;;;5054:10:263;;4970:101::o;4877:317:447:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:447;;;;;;-1:-1:-1;5076:19:447;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:447;;;;;;;;;;;;-1:-1:-1;5076:33:447;;;;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:447;4877:317;;;;;;:::o;6483:372:259:-;6701:78;6710:9;6721:10;6733:45;6770:7;6733:32;6743:9;6754:10;6733:9;:32::i;:::-;:36;;:45::i;6701:78::-;6790:58;6801:9;6812:3;6817:7;6826:21;6790:10;:58::i;:::-;;;6483:372;;;;:::o;15957:115::-;2212:2;15957:115;:::o;5347:258::-;5453:30;5485:32;5540:58;5551:10;5563;5575:7;5584:13;5540:10;:58::i;:::-;5533:65;;;;5347:258;;;;;:::o;5589:215:447:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:447;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:447;;;:34;;;;;;;;;;;:38;:50::i;3042:130:259:-;2645:10;-1:-1:-1;;;;;2659:5:259;2645:19;;2637:51;;;;-1:-1:-1;;;2637:51:259;;;;;;;:::i;:::-;3108:6:::1;:18:::0;;-1:-1:-1;;3108:18:259::1;::::0;::::1;;;::::0;;3142:23:::1;::::0;::::1;::::0;::::1;::::0;3108:18;;3142:23:::1;:::i;:::-;;;;;;;;3042:130:::0;:::o;3399:125:447:-;-1:-1:-1;;;;;3499:18:447;3473:7;3499:18;;;;;;;;;;;;3399:125::o;5863:202:259:-;5999:59;6010:10;6022:3;6027:7;6036:21;5999:10;:59::i;:::-;;;5863:202;;;:::o;16873:120::-;16967:12;:19;16873:120;:::o;3100:137:263:-;3141:89;3186:23;-1:-1:-1;;3147:17:263;:15;:17::i;:::-;-1:-1:-1;;;;;3141:36:263;;;;:89::i;:::-;3100:137::o;1548:106:260:-;1636:11;1629:18;;;;;;;;-1:-1:-1;;1629:18:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:21;;1629:18;;1636:11;;1629:18;;1636:11;1629:18;;;;;;;;;;;;;;;;;;;;;;;;17404:241:259;17531:41;;:::i;:::-;-1:-1:-1;;;;;;17595:43:259;;;;;:29;:43;;;;;;;;;17588:50;;;;;;;;;-1:-1:-1;;;;;17588:50:259;;;;;-1:-1:-1;;;17588:50:259;;;;;;;;;17404:241::o;6291:266:447:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:447;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:447;;;:34;;;;;;;;;;;;:38;:96::i;16591:179:259:-;16700:20;16743:12;16756:6;16743:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16743:20:259;;;-1:-1:-1;;16591:179:259:o;3727:172:447:-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;18244:96:259:-;18327:6;;;;18244:96;:::o;4014:111::-;4076:42;4086:10;4098;4110:7;4076:9;:42::i;:::-;4014:111;:::o;1434:723:263:-;1569:1;1540:17;:15;:17::i;:::-;-1:-1:-1;;;;;1540:31:263;;1532:61;;;;-1:-1:-1;;;1532:61:263;;;;;;;:::i;:::-;1604:39;;:::i;:::-;1646:38;;-1:-1:-1;;;1646:38:263;;-1:-1:-1;;;;;1646:23:263;:32;;-1:-1:-1;;1646:38:263;;1679:4;;1646:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1604:80;;1730:89;1794:8;:14;;;-1:-1:-1;;;;;1788:26:263;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1788:28:263;;;;;;;;;;;;:::i;:::-;1752:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;1730:14;:89::i;:::-;1829:81;1883:8;:14;;;-1:-1:-1;;;;;1877:28:263;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1877:30:263;;;;;;;;;;;;:::i;:::-;1853:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;1829:16;:81::i;:::-;1936:16;;1921:12;:31;;-1:-1:-1;;;;;1921:31:263;;;-1:-1:-1;;;;;;1921:31:263;;;;;;;1975:19;;;;1962:10;:32;;;;;;;;;;;2004:12;:19;;;2034:27;2051:9;2034:16;:27::i;:::-;2071;2088:9;2071:16;:27::i;:::-;2108:17;:15;:17::i;:::-;2136:14;:12;:14::i;:::-;1434:723;;:::o;5392:107::-;5480:12;;-1:-1:-1;;;;;5480:12:263;;5392:107::o;17102:125:259:-;17159:30;17208:12;17201:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17201:19:259;;;-1:-1:-1;17201:19:259;;;;;;;;;;;;;;;;;;17102:125;:::o;5179:107:263:-;5267:12;;5179:107;:::o;3957:149:447:-;-1:-1:-1;;;;;4072:18:447;;;4046:7;4072:18;;;-1:-1:-1;4072:18:447;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;4334:119:259:-;4411:35;4421:10;4433:3;4438:7;4411:9;:35::i;8006:221::-;8078:35;8100:12;8078;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8078:21:259;;;-1:-1:-1;8078:21:259;;;;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;8073:148;;8129:12;:31;;;;;;;-1:-1:-1;8129:31:259;;;;;;;;-1:-1:-1;;;;;;8129:31:259;-1:-1:-1;;;;;8129:31:259;;;;;8180:30;;;;;;8129:31;;8180:30;:::i;598:104:452:-;685:10;598:104;:::o;9355:340:447:-;-1:-1:-1;;;;;9456:19:447;;9448:68;;;;-1:-1:-1;;;9448:68:447;;;;;;;:::i;:::-;-1:-1:-1;;;;;9534:21:447;;9526:68;;;;-1:-1:-1;;;9526:68:447;;;;;;;:::i;:::-;-1:-1:-1;;;;;9605:18:447;;;;;;;-1:-1:-1;9605:18:447;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9656:32;;;;;9605:36;;9656:32;:::i;:::-;;;;;;;;9355:340;;;:::o;9974:753:259:-;10055:30;10087:32;10223:10;:8;:10::i;:::-;10218:65;;10249:23;:21;:23::i;:::-;10293:14;10310:13;:11;:13::i;:::-;10350:12;10334:28;;;;;;;;;;;;;;;;;;;10293:30;;-1:-1:-1;10334:28:259;;10350:12;10334:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10334:28:259;;;-1:-1:-1;10334:28:259;;;;;;;;;;;;;;;;;;;10404:13;:20;10390:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10390:35:259;;10372:53;;10440:9;10435:152;10455:13;:20;10451:1;:24;10435:152;;;10517:59;10541:13;10555:1;10541:16;;;;;;;;;;;;;;10559:8;10569:6;10517:23;:59::i;:::-;10496:15;10512:1;10496:18;;;;;;;;;;;;;;;;;:80;10477:3;;10435:152;;;-1:-1:-1;10602:68:259;;-1:-1:-1;;;;;10602:68:259;;;;;;;10617:10;;10639:13;;10654:15;;10602:68;:::i;:::-;;;;;;;;10681:39;9974:753;;;:::o;16184:214::-;1688:1:453;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:453;;;;;;;:::i;:::-;1688:1;2407:7;:18;16319:26:259::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;16319:26:259;;::::1;::::0;;;::::1;;::::0;::::1;::::0;::::1;::::0;:12:::1;:26::i;:::-;16355:36;16371:5;16378:3;16383:7;16355:15;:36::i;:::-;-1:-1:-1::0;;1645:1:453;2580:7;:22;-1:-1:-1;16184:214:259:o;5432:163:442:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:442;;;;;;;;:::i;:::-;-1:-1:-1;;;5583:5:442;;;5432:163::o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;-1:-1:-1;;;3213:49:442;;;;;;;:::i;:::-;-1:-1:-1;3279:5:442;;;3136:155::o;6907:650:259:-;7084:30;7116:32;1688:1:453;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:453;;;;;;;:::i;:::-;1688:1;2407:7;:18;7201:170:259;::::1;;;7269:27;7290:5;7269:20;:27::i;:::-;7234:62:::0;;-1:-1:-1;7234:62:259;-1:-1:-1;7201:170:259::1;;;7327:33;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;7327:33:259;::::1;::::0;;-1:-1:-1;7327:33:259::1;::::0;::::1;::::0;::::1;::::0;:12:::1;:33::i;:::-;7381:21;7387:5;7394:7;7381:5;:21::i;:::-;7413:29;7429:3;7434:7;7413:15;:29::i;:::-;7458:42;::::0;-1:-1:-1;;;;;7458:42:259;;::::1;::::0;;;::::1;::::0;7468:10:::1;::::0;7458:42:::1;::::0;::::1;::::0;7492:7;;7458:42:::1;:::i;:::-;;;;;;;;1645:1:453::0;2580:7;:22;6907:650:259;;;;-1:-1:-1;6907:650:259;-1:-1:-1;;;6907:650:259:o;2690:175:442:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;-1:-1:-1;;;2794:46:442;;;;;;;:::i;1348:613:450:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:450;;-1:-1:-1;;;1729:39:450;;-1:-1:-1;;;;;1729:15:450;;;;;:39;;1753:4;;1760:7;;1729:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:450;;;;;;;:::i;:::-;1864:90;1884:5;1914:22;;;1938:7;1947:5;1891:62;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1891:62:450;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:450;-1:-1:-1;;;;;;1891:62:450;;;;;;;;;;;1864:19;:90::i;4510:368:259:-;1688:1:453;2277:7;;:19;;2269:63;;;;-1:-1:-1;;;2269:63:453;;;;;;;:::i;:::-;1688:1;2407:7;:18;4644:10:259::1;:8;:10::i;:::-;4643:11;4635:41;;;::::0;-1:-1:-1;;;4635:41:259;;::::1;::::0;::::1;;;:::i;:::-;4724:31;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;4724:31:259;::::1;::::0;;-1:-1:-1;4724:31:259::1;::::0;::::1;::::0;::::1;::::0;:12:::1;:31::i;:::-;4765:19;4771:3;4776:7;4765:5;:19::i;:::-;4795:30;4810:5;4817:7;4795:14;:30::i;:::-;4841;::::0;-1:-1:-1;;;;;4841:30:259;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;4863:7;;4841:30:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:453;2580:7;:22;-1:-1:-1;4510:368:259:o;752:123:260:-;816:17;;;;:9;;:17;;;;;:::i;:::-;;849:19;862:5;849:19;;;;;;:::i;930:135::-;998:21;;;;:11;;:21;;;;;:::i;:::-;;1035:23;1050:7;1035:23;;;;;;:::i;2489:299:354:-;2595:17;2633:9;2628:132;2648:5;:12;2644:1;:16;2628:132;;;2696:5;2702:1;2696:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2685:19:354;;;;;;2681:69;;;2731:4;2724:11;;;;;2681:69;2662:3;;2628:132;;;-1:-1:-1;2776:5:354;;2489:299;-1:-1:-1;;;2489:299:354:o;3983:406:263:-;4305:17;:15;:17::i;:::-;4354:15;:13;:15::i;:::-;-1:-1:-1;;;;;4332:48:263;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12767:2058:259:-;-1:-1:-1;;;;;12982:43:259;;12904:22;12982:43;;;:29;:43;;;;;;13060:25;;13178:44;;-1:-1:-1;;;13178:44:259;;12904:22;;12982:43;;-1:-1:-1;;;;;13060:25:259;;;;12904:22;;13119:165;;13157:7;;12982:43;-1:-1:-1;;13178:44:259;;13216:4;;13178:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13236:38;;-1:-1:-1;;;13236:38:259;;-1:-1:-1;;;;;13236:38:259;13119:24;:165::i;:::-;13095:189;-1:-1:-1;13298:17:259;;13294:236;;13347:32;:13;13365;13347:17;:32::i;:::-;13393:50;;-1:-1:-1;;;;;;13393:50:259;-1:-1:-1;;;;;13393:50:259;;;;;13463:56;;13393:50;;-1:-1:-1;;;;;;13463:56:259;;;;;;;13393:50;;13463:56;:::i;:::-;;;;;;;;13294:236;-1:-1:-1;;;;;13582:44:259;;;13540:39;13582:44;;;:30;:44;;;;;;;;:76;;;;;;;;;13692:24;;-1:-1:-1;;;;;;;;13743:31:259;;;;;-1:-1:-1;13692:24:259;13788:28;;;13784:357;;;13832:49;;-1:-1:-1;;;;;;13832:49:259;-1:-1:-1;;;;;13832:49:259;;;;;13912:125;13948:75;13985:8;13832:49;14010:12;13948:36;:75::i;:::-;13912:14;;:18;:125::i;:::-;14057:73;;13895:142;;-1:-1:-1;;;;;;14057:73:259;;;;;;;;;;;;14100:13;;13895:142;;14057:73;:::i;:::-;;;;;;;;13784:357;14155:18;;14151:236;;14189:35;;-1:-1:-1;;;;;14189:35:259;;;14238:58;-1:-1:-1;;;;;14238:32:259;;14271:8;14281:14;14238:32;:58::i;:::-;14316:60;;-1:-1:-1;;;;;14316:60:259;;;;;;;;;;;;14359:13;;14374:1;;14316:60;:::i;:::-;;;;;;;;14151:236;14511:44;;-1:-1:-1;;;14511:44:259;;14492:16;;-1:-1:-1;;;;;14511:29:259;;;-1:-1:-1;;14511:44:259;;14549:4;;14511:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14580:38;;14492:63;;-1:-1:-1;;;;14580:38:259;;-1:-1:-1;;;;;14580:38:259;14569:49;;14565:222;;;14634:58;;-1:-1:-1;;;;;14634:58:259;;;-1:-1:-1;;;14634:58:259;;;;;;14712:64;;-1:-1:-1;;;;;14712:64:259;;;;;;;14634:58;;14712:64;:::i;:::-;;;;;;;;14565:222;14797:21;;;;;;12767:2058;;;;;:::o;9394:453::-;9551:10;:8;:10::i;:::-;9546:65;;9577:23;:21;:23::i;:::-;9621:14;9638:13;:11;:13::i;:::-;9691:12;:19;9621:30;;-1:-1:-1;9662:26:259;9720:121;9740:18;9736:1;:22;9720:121;;;9779:51;9795:12;9808:1;9795:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9795:15:259;9812:9;9823:6;9779:15;:51::i;:::-;9760:3;;9720:121;;;;9394:453;;;:::o;7031:530:447:-;-1:-1:-1;;;;;7136:20:447;;7128:70;;;;-1:-1:-1;;;7128:70:447;;;;;;;:::i;:::-;-1:-1:-1;;;;;7216:23:447;;7208:71;;;;-1:-1:-1;;;7208:71:447;;;;;;;:::i;:::-;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:447;;:9;:17;;;;;;;;;;;;;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:447;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:447;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;;;;7547:6;;7519:35;:::i;8522:410::-;-1:-1:-1;;;;;8605:21:447;;8597:67;;;;-1:-1:-1;;;8597:67:447;;;;;;;:::i;:::-;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:447;;:9;:18;;;;;;;;;;;;;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:447;;:9;:18;;;;;;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;8914:1;;-1:-1:-1;;;;;8888:37:447;;;;;;;8918:6;;8888:37;:::i;:::-;;;;;;;;8522:410;;:::o;4561:223:263:-;4666:15;:13;:15::i;:::-;4644:72;;-1:-1:-1;;;4644:72:263;;-1:-1:-1;;;;;4644:56:263;;;;;;;:72;;4701:7;;4710:5;;4644:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4726:51;4764:3;4769:7;4732:17;:15;:17::i;:::-;-1:-1:-1;;;;;4726:37:263;;;;:51::i;2967:751:450:-;3412:69;;;;;;;;;;;;;;;;;;3386:23;;3412:69;;-1:-1:-1;;;;;3412:27:450;;;3440:4;;3412:27;:69::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:450;3491:221;;3635:10;3624:30;;;;;;;;;;;;:::i;:::-;3616:85;;;;-1:-1:-1;;;3616:85:450;;;;;;;:::i;7832:370:447:-;-1:-1:-1;;;;;7915:21:447;;7907:65;;;;-1:-1:-1;;;7907:65:447;;;;;;;:::i;:::-;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:447;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:447;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;8092:18;;:9;8158:37;;;;8188:6;;8158:37;:::i;3517:233:263:-;3601:72;3643:5;3658:4;3665:7;3607:17;:15;:17::i;:::-;-1:-1:-1;;;;;3601:41:263;;;;;:72::i;:::-;3715:12;;3683:60;;-1:-1:-1;;;3683:60:263;;-1:-1:-1;;;;;3683:23:263;:31;;;;:60;;3715:12;3729:7;;-1:-1:-1;;3683:60:263;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8836:431:259:-;8996:17;9029:11;;9025:217;;9056:15;9074:43;:15;9094:22;9074:19;:43::i;:::-;9056:61;-1:-1:-1;9135:11:259;;9131:101;;9173:44;9209:7;9173:31;:7;2266:4;9173:11;:31::i;:::-;:35;;:44::i;:::-;9166:51;;;;;9131:101;9025:217;-1:-1:-1;9259:1:259;8836:431;;;;;:::o;8364:365::-;8541:24;8596:126;2266:4;8596:72;8620:47;:21;8646:20;8620:25;:47::i;:::-;8596:19;8606:8;8596:9;:19::i;:::-;:23;;:72::i;:126::-;8577:145;8364:365;-1:-1:-1;;;;8364:365:259:o;704:175:450:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;:::i;10776:1910:259:-;-1:-1:-1;;;;;10961:43:259;;10917:41;10961:43;;;:29;:43;;;;;;11039:25;;11088:44;;-1:-1:-1;;;11088:44:259;;10961:43;;-1:-1:-1;;;;;11039:25:259;;;;10917:41;10961:43;-1:-1:-1;;11088:44:259;;11126:4;;11088:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11242:38;;11074:58;;-1:-1:-1;11142:21:259;;11166:124;;11204:7;;11074:58;;-1:-1:-1;;;11242:38:259;;-1:-1:-1;;;;;11242:38:259;11166:24;:124::i;:::-;11142:148;-1:-1:-1;11304:17:259;;11300:381;;11353:32;:13;11371;11353:17;:32::i;:::-;11399:50;;-1:-1:-1;;;;;;11399:50:259;-1:-1:-1;;;;;11399:50:259;;;;;11468:56;;11399:50;;-1:-1:-1;;;;;;11468:56:259;;;;;;;11399:50;;11468:56;:::i;:::-;;;;;;;;11539:53;;-1:-1:-1;;;;;11539:53:259;;;-1:-1:-1;;;11539:53:259;;;;;;11611:59;;-1:-1:-1;;;;;11611:59:259;;;;;;;11539:53;;11611:59;:::i;:::-;;;;;;;;11300:381;11696:9;11691:989;11711:16;11707:1;:20;11691:989;;;11837:1;11813:9;11823:1;11813:12;;;;;;;;;;;-1:-1:-1;;;;;11813:26:259;;11809:40;;;11841:8;;11809:40;-1:-1:-1;;;;;11906:44:259;;11864:39;11906:44;;;:30;:44;;;;;11864:39;11968:9;11978:1;11968:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11906:88:259;;;;;;;;;;;-1:-1:-1;11906:88:259;12032:24;;11906:88;;-1:-1:-1;;;;;;12032:24:259;12074:28;;;12070:600;;;12122:23;12148:163;12214:79;12251:9;12261:1;12251:12;;;;;;;;;;;12265:13;12280:12;12214:36;:79::i;:::-;12156:31;;-1:-1:-1;;;12156:31:259;;-1:-1:-1;;;;;12156:31:259;;12148:44;:163::i;:::-;12330:58;;-1:-1:-1;;;;;;;;;;;12330:58:259;;;-1:-1:-1;;;12330:58:259;;;;;12406:49;;;;;;;12330:58;-1:-1:-1;;;;;;12479:176:259;;12519:9;12529:1;12519:12;;;;;;;;;;;-1:-1:-1;;;;;12479:176:259;;12587:13;12622:15;12479:176;;;;;;;:::i;:::-;;;;;;;;12070:600;;11691:989;;;11729:3;;11691:989;;;;10776:1910;;;;;;;:::o;3581:193:451:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;885:203:450:-;985:96;1005:5;1035:27;;;1064:4;1070:2;1074:5;1012:68;;;;;;;;;;:::i;3538:215:442:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:442;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:442;;;;;;;:::i;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;-1:-1:-1;;;4294:44:442;;;;;;;:::i;:::-;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:442:o;4608:523:451:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:451;;;;;;;:::i;:::-;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;-1:-1:-1;;;4850:60:451;;;;;;;:::i;:::-;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:451;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:451:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:451;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:451;;;;7772:12;;7765:20;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:130;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;283:124::-;347:20;;372:30;347:20;372:30;:::i;414:128::-;489:13;;507:30;489:13;507:30;:::i;550:444::-;;663:3;656:4;648:6;644:17;640:27;630:2;;681:1;678;671:12;630:2;711:6;705:13;733:65;748:49;790:6;748:49;:::i;:::-;733:65;:::i;:::-;724:74;;818:6;811:5;804:21;854:4;846:6;842:17;887:4;880:5;876:16;922:3;913:6;908:3;904:16;901:25;898:2;;;939:1;936;929:12;898:2;949:39;981:6;976:3;971;949:39;:::i;:::-;623:371;;;;;;;:::o;1039:1137::-;;1166:4;1154:9;1149:3;1145:19;1141:30;1138:2;;;1184:1;1181;1174:12;1138:2;1202:20;1217:4;1202:20;:::i;:::-;1193:29;-1:-1;1275:1;1307:60;1363:3;1343:9;1307:60;:::i;:::-;1282:86;;-1:-1;1430:2;1463:60;1519:3;1495:22;;;1463:60;:::i;:::-;1456:4;1449:5;1445:16;1438:86;1389:146;1586:2;1619:60;1675:3;1666:6;1655:9;1651:22;1619:60;:::i;:::-;1612:4;1605:5;1601:16;1594:86;1545:146;1747:2;1780:60;1836:3;1827:6;1816:9;1812:22;1780:60;:::i;:::-;1773:4;1766:5;1762:16;1755:86;1701:151;1903:3;1937:60;1993:3;1984:6;1973:9;1969:22;1937:60;:::i;:::-;1930:4;1923:5;1919:16;1912:86;1862:147;2063:3;2097:57;2150:3;2141:6;2130:9;2126:22;2097:57;:::i;:::-;2090:4;2083:5;2079:16;2072:83;2019:147;1132:1044;;;;:::o;2183:130::-;2250:20;;2275:33;2250:20;2275:33;:::i;2320:134::-;2398:13;;2416:33;2398:13;2416:33;:::i;2461:241::-;;2565:2;2553:9;2544:7;2540:23;2536:32;2533:2;;;2581:1;2578;2571:12;2533:2;2616:1;2633:53;2678:7;2658:9;2633:53;:::i;2709:263::-;;2824:2;2812:9;2803:7;2799:23;2795:32;2792:2;;;2840:1;2837;2830:12;2792:2;2875:1;2892:64;2948:7;2928:9;2892:64;:::i;2979:366::-;;;3100:2;3088:9;3079:7;3075:23;3071:32;3068:2;;;3116:1;3113;3106:12;3068:2;3151:1;3168:53;3213:7;3193:9;3168:53;:::i;:::-;3158:63;;3130:97;3258:2;3276:53;3321:7;3312:6;3301:9;3297:22;3276:53;:::i;:::-;3266:63;;3237:98;3062:283;;;;;:::o;3352:491::-;;;;3490:2;3478:9;3469:7;3465:23;3461:32;3458:2;;;3506:1;3503;3496:12;3458:2;3541:1;3558:53;3603:7;3583:9;3558:53;:::i;:::-;3548:63;;3520:97;3648:2;3666:53;3711:7;3702:6;3691:9;3687:22;3666:53;:::i;:::-;3656:63;;3627:98;3756:2;3774:53;3819:7;3810:6;3799:9;3795:22;3774:53;:::i;:::-;3764:63;;3735:98;3452:391;;;;;:::o;3850:611::-;;;;;4002:3;3990:9;3981:7;3977:23;3973:33;3970:2;;;4019:1;4016;4009:12;3970:2;4054:1;4071:53;4116:7;4096:9;4071:53;:::i;:::-;4061:63;;4033:97;4161:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4140:98;4269:2;4287:53;4332:7;4323:6;4312:9;4308:22;4287:53;:::i;:::-;4277:63;;4248:98;4377:2;4395:50;4437:7;4428:6;4417:9;4413:22;4395:50;:::i;:::-;4385:60;;4356:95;3964:497;;;;;;;:::o;4468:366::-;;;4589:2;4577:9;4568:7;4564:23;4560:32;4557:2;;;4605:1;4602;4595:12;4557:2;4640:1;4657:53;4702:7;4682:9;4657:53;:::i;:::-;4647:63;;4619:97;4747:2;4765:53;4810:7;4801:6;4790:9;4786:22;4765:53;:::i;4841:485::-;;;;4976:2;4964:9;4955:7;4951:23;4947:32;4944:2;;;4992:1;4989;4982:12;4944:2;5027:1;5044:53;5089:7;5069:9;5044:53;:::i;:::-;5034:63;;5006:97;5134:2;5152:53;5197:7;5188:6;5177:9;5173:22;5152:53;:::i;:::-;5142:63;;5113:98;5242:2;5260:50;5302:7;5293:6;5282:9;5278:22;5260:50;:::i;5333:235::-;;5434:2;5422:9;5413:7;5409:23;5405:32;5402:2;;;5450:1;5447;5440:12;5402:2;5485:1;5502:50;5544:7;5524:9;5502:50;:::i;5575:257::-;;5687:2;5675:9;5666:7;5662:23;5658:32;5655:2;;;5703:1;5700;5693:12;5655:2;5738:1;5755:61;5808:7;5788:9;5755:61;:::i;5839:362::-;;5964:2;5952:9;5943:7;5939:23;5935:32;5932:2;;;5980:1;5977;5970:12;5932:2;6015:24;;6059:18;6048:30;;6045:2;;;6091:1;6088;6081:12;6045:2;6111:74;6177:7;6168:6;6157:9;6153:22;6111:74;:::i;6208:318::-;;6350:3;6338:9;6329:7;6325:23;6321:33;6318:2;;;6367:1;6364;6357:12;6318:2;6402:1;6419:91;6502:7;6482:9;6419:91;:::i;6533:241::-;;6637:2;6625:9;6616:7;6612:23;6608:32;6605:2;;;6653:1;6650;6643:12;6605:2;6688:1;6705:53;6750:7;6730:9;6705:53;:::i;6781:263::-;;6896:2;6884:9;6875:7;6871:23;6867:32;6864:2;;;6912:1;6909;6902:12;6864:2;6947:1;6964:64;7020:7;7000:9;6964:64;:::i;7051:360::-;;;7169:2;7157:9;7148:7;7144:23;7140:32;7137:2;;;7185:1;7182;7175:12;7137:2;7220:1;7237:53;7282:7;7262:9;7237:53;:::i;:::-;7227:63;;7199:97;7327:2;7345:50;7387:7;7378:6;7367:9;7363:22;7345:50;:::i;7419:173::-;;7506:46;7548:3;7540:6;7506:46;:::i;:::-;-1:-1;;7581:4;7572:14;;7499:93::o;7601:173::-;;7688:46;7730:3;7722:6;7688:46;:::i;7782:142::-;7873:45;7912:5;7873:45;:::i;:::-;7868:3;7861:58;7855:69;;:::o;7931:103::-;8004:24;8022:5;8004:24;:::i;8192:690::-;;8337:54;8385:5;8337:54;:::i;:::-;8404:86;8483:6;8478:3;8404:86;:::i;:::-;8397:93;;8511:56;8561:5;8511:56;:::i;:::-;8587:7;8615:1;8600:260;8625:6;8622:1;8619:13;8600:260;;;8692:6;8686:13;8713:63;8772:3;8757:13;8713:63;:::i;:::-;8706:70;;8793:60;8846:6;8793:60;:::i;:::-;8783:70;-1:-1;;8647:1;8640:9;8600:260;;;-1:-1;8873:3;;8316:566;-1:-1;;;;;8316:566::o;8921:690::-;;9066:54;9114:5;9066:54;:::i;:::-;9133:86;9212:6;9207:3;9133:86;:::i;:::-;9126:93;;9240:56;9290:5;9240:56;:::i;:::-;9316:7;9344:1;9329:260;9354:6;9351:1;9348:13;9329:260;;;9421:6;9415:13;9442:63;9501:3;9486:13;9442:63;:::i;:::-;9435:70;;9522:60;9575:6;9522:60;:::i;:::-;9512:70;-1:-1;;9376:1;9369:9;9329:260;;9619:104;9696:21;9711:5;9696:21;:::i;9730:356::-;;9858:38;9890:5;9858:38;:::i;:::-;9908:88;9989:6;9984:3;9908:88;:::i;:::-;9901:95;;10001:52;10046:6;10041:3;10034:4;10027:5;10023:16;10001:52;:::i;:::-;10065:16;;;;;9838:248;-1:-1;;9838:248::o;10093:142::-;10184:45;10223:5;10184:45;:::i;10242:347::-;;10354:39;10387:5;10354:39;:::i;:::-;10405:71;10469:6;10464:3;10405:71;:::i;:::-;10398:78;;10481:52;10526:6;10521:3;10514:4;10507:5;10503:16;10481:52;:::i;:::-;10554:29;10576:6;10554:29;:::i;:::-;10545:39;;;;10334:255;-1:-1;;;10334:255::o;10964:317::-;;11124:67;11188:2;11183:3;11124:67;:::i;:::-;-1:-1;;;11204:40;;11272:2;11263:12;;;-1:-1;;11110:171::o;11290:319::-;;11450:67;11514:2;11509:3;11450:67;:::i;:::-;-1:-1;;;11530:42;;11600:2;11591:12;;;-1:-1;;11436:173::o;11618:372::-;;11778:67;11842:2;11837:3;11778:67;:::i;:::-;11878:34;11858:55;;-1:-1;;;11942:2;11933:12;;11926:27;11981:2;11972:12;;;-1:-1;;11764:226::o;11999:351::-;;12177:85;12259:2;12254:3;12177:85;:::i;:::-;-1:-1;;;12275:38;;12341:2;12332:12;;;-1:-1;;12163:187::o;12359:371::-;;12519:67;12583:2;12578:3;12519:67;:::i;:::-;12619:34;12599:55;;-1:-1;;;12683:2;12674:12;;12667:26;12721:2;12712:12;;;-1:-1;;12505:225::o;12739:327::-;;12899:67;12963:2;12958:3;12899:67;:::i;:::-;12999:29;12979:50;;13057:2;13048:12;;12885:181;-1:-1;;12885:181::o;13075:330::-;;13235:67;13299:2;13294:3;13235:67;:::i;:::-;13335:32;13315:53;;13396:2;13387:12;;13221:184;-1:-1;;13221:184::o;13414:375::-;;13574:67;13638:2;13633:3;13574:67;:::i;:::-;13674:34;13654:55;;-1:-1;;;13738:2;13729:12;;13722:30;13780:2;13771:12;;;-1:-1;;13560:229::o;13798:326::-;;13958:67;14022:2;14017:3;13958:67;:::i;:::-;14058:28;14038:49;;14115:2;14106:12;;13944:180;-1:-1;;13944:180::o;14133:370::-;;14293:67;14357:2;14352:3;14293:67;:::i;:::-;14393:34;14373:55;;-1:-1;;;14457:2;14448:12;;14441:25;14494:2;14485:12;;;-1:-1;;14279:224::o;14512:317::-;;14672:67;14736:2;14731:3;14672:67;:::i;:::-;-1:-1;;;14752:40;;14820:2;14811:12;;;-1:-1;;14658:171::o;14838:370::-;;14998:67;15062:2;15057:3;14998:67;:::i;:::-;15098:34;15078:55;;-1:-1;;;15162:2;15153:12;;15146:25;15199:2;15190:12;;;-1:-1;;14984:224::o;15217:374::-;;15377:67;15441:2;15436:3;15377:67;:::i;:::-;15477:34;15457:55;;-1:-1;;;15541:2;15532:12;;15525:29;15582:2;15573:12;;;-1:-1;;15363:228::o;15600:337::-;;15778:84;15860:1;15855:3;15778:84;:::i;:::-;-1:-1;;;15875:26;;15929:1;15920:11;;;-1:-1;;15764:173::o;15946:373::-;;16106:67;16170:2;16165:3;16106:67;:::i;:::-;16206:34;16186:55;;-1:-1;;;16270:2;16261:12;;16254:28;16310:2;16301:12;;;-1:-1;;16092:227::o;16328:329::-;;16488:67;16552:2;16547:3;16488:67;:::i;:::-;16588:31;16568:52;;16648:2;16639:12;;16474:183;-1:-1;;16474:183::o;16666:379::-;;16826:67;16890:2;16885:3;16826:67;:::i;:::-;16926:34;16906:55;;-1:-1;;;16990:2;16981:12;;16974:34;17036:2;17027:12;;;-1:-1;;16812:233::o;17054:331::-;;17214:67;17278:2;17273:3;17214:67;:::i;:::-;17314:33;17294:54;;17376:2;17367:12;;17200:185;-1:-1;;17200:185::o;17394:391::-;;17554:67;17618:2;17613:3;17554:67;:::i;:::-;17654:34;17634:55;;-1:-1;;;17718:2;17709:12;;17702:46;17776:2;17767:12;;;-1:-1;;17540:245::o;17794:331::-;;17954:67;18018:2;18013:3;17954:67;:::i;:::-;18054:33;18034:54;;18116:2;18107:12;;17940:185;-1:-1;;17940:185::o;18222:517::-;18455:23;;18385:4;18376:14;;;18484:63;18380:3;18455:23;18484:63;:::i;:::-;18405:148;18643:4;18636:5;18632:16;18626:23;18655:63;18712:4;18707:3;18703:14;18689:12;19349:103;19422:24;19440:5;19422:24;:::i;19459:103::-;19532:24;19550:5;19532:24;:::i;19689:107::-;19768:22;19784:5;19768:22;:::i;19803:271::-;;19956:93;20045:3;20036:6;19956:93;:::i;20081:542::-;;20337:148;20481:3;20337:148;:::i;:::-;20330:155;;20503:95;20594:3;20585:6;20503:95;:::i;20630:542::-;;20886:148;21030:3;20886:148;:::i;21179:222::-;21306:2;21291:18;;21320:71;21295:9;21364:6;21320:71;:::i;21408:756::-;21699:2;21684:18;;21713:79;21688:9;21765:6;21713:79;:::i;:::-;21840:9;21834:4;21830:20;21825:2;21814:9;21810:18;21803:48;21865:108;21968:4;21959:6;21865:108;:::i;:::-;21857:116;;22021:9;22015:4;22011:20;22006:2;21995:9;21991:18;21984:48;22046:108;22149:4;22140:6;22046:108;:::i;:::-;22038:116;21670:494;-1:-1;;;;;21670:494::o;22171:333::-;22326:2;22311:18;;22340:71;22315:9;22384:6;22340:71;:::i;:::-;22422:72;22490:2;22479:9;22475:18;22466:6;22422:72;:::i;22511:444::-;22694:2;22679:18;;22708:71;22683:9;22752:6;22708:71;:::i;:::-;22790:72;22858:2;22847:9;22843:18;22834:6;22790:72;:::i;:::-;22873;22941:2;22930:9;22926:18;22917:6;22873:72;:::i;22962:333::-;23117:2;23102:18;;23131:71;23106:9;23175:6;23131:71;:::i;:::-;23213:72;23281:2;23270:9;23266:18;23257:6;23213:72;:::i;23302:370::-;23479:2;23493:47;;;23464:18;;23554:108;23464:18;23648:6;23554:108;:::i;23679:629::-;23934:2;23948:47;;;23919:18;;24009:108;23919:18;24103:6;24009:108;:::i;:::-;24001:116;;24165:9;24159:4;24155:20;24150:2;24139:9;24135:18;24128:48;24190:108;24293:4;24284:6;24190:108;:::i;24315:210::-;24436:2;24421:18;;24450:65;24425:9;24488:6;24450:65;:::i;24532:310::-;24679:2;24693:47;;;24664:18;;24754:78;24664:18;24818:6;24754:78;:::i;24849:416::-;25049:2;25063:47;;;25034:18;;25124:131;25034:18;25124:131;:::i;25272:416::-;25472:2;25486:47;;;25457:18;;25547:131;25457:18;25547:131;:::i;25695:416::-;25895:2;25909:47;;;25880:18;;25970:131;25880:18;25970:131;:::i;26118:416::-;26318:2;26332:47;;;26303:18;;26393:131;26303:18;26393:131;:::i;26541:416::-;26741:2;26755:47;;;26726:18;;26816:131;26726:18;26816:131;:::i;26964:416::-;27164:2;27178:47;;;27149:18;;27239:131;27149:18;27239:131;:::i;27387:416::-;27587:2;27601:47;;;27572:18;;27662:131;27572:18;27662:131;:::i;27810:416::-;28010:2;28024:47;;;27995:18;;28085:131;27995:18;28085:131;:::i;28233:416::-;28433:2;28447:47;;;28418:18;;28508:131;28418:18;28508:131;:::i;28656:416::-;28856:2;28870:47;;;28841:18;;28931:131;28841:18;28931:131;:::i;29079:416::-;29279:2;29293:47;;;29264:18;;29354:131;29264:18;29354:131;:::i;29502:416::-;29702:2;29716:47;;;29687:18;;29777:131;29687:18;29777:131;:::i;29925:416::-;30125:2;30139:47;;;30110:18;;30200:131;30110:18;30200:131;:::i;30348:416::-;30548:2;30562:47;;;30533:18;;30623:131;30533:18;30623:131;:::i;30771:416::-;30971:2;30985:47;;;30956:18;;31046:131;30956:18;31046:131;:::i;31194:416::-;31394:2;31408:47;;;31379:18;;31469:131;31379:18;31469:131;:::i;31617:416::-;31817:2;31831:47;;;31802:18;;31892:131;31802:18;31892:131;:::i;32040:416::-;32240:2;32254:47;;;32225:18;;32315:131;32225:18;32315:131;:::i;32463:362::-;32660:2;32645:18;;32674:141;32649:9;32788:6;32674:141;:::i;33197:222::-;33324:2;33309:18;;33338:71;33313:9;33382:6;33338:71;:::i;33426:321::-;33575:2;33560:18;;33589:71;33564:9;33633:6;33589:71;:::i;:::-;33671:66;33733:2;33722:9;33718:18;33709:6;33671:66;:::i;33754:349::-;33917:2;33902:18;;33931:71;33906:9;33975:6;33931:71;:::i;:::-;34013:80;34089:2;34078:9;34074:18;34065:6;34013:80;:::i;34110:333::-;34265:2;34250:18;;34279:71;34254:9;34323:6;34279:71;:::i;34450:432::-;34627:2;34612:18;;34641:71;34616:9;34685:6;34641:71;:::i;:::-;34723:72;34791:2;34780:9;34776:18;34767:6;34723:72;:::i;:::-;34806:66;34868:2;34857:9;34853:18;34844:6;34806:66;:::i;34889:214::-;35012:2;34997:18;;35026:67;35001:9;35066:6;35026:67;:::i;35110:256::-;35172:2;35166:9;35198:17;;;35273:18;35258:34;;35294:22;;;35255:62;35252:2;;;35330:1;35327;35320:12;35252:2;35346;35339:22;35150:216;;-1:-1;35150:216::o;35373:322::-;;35517:18;35509:6;35506:30;35503:2;;;35549:1;35546;35539:12;35503:2;-1:-1;35680:4;-1:-1;35593:17;;;;-1:-1;;35589:33;35670:15;;35440:255::o;35702:151::-;35826:4;35817:14;;35774:79::o;36018:137::-;36121:12;;36092:63::o;36794:178::-;36912:19;;;36961:4;36952:14;;36905:67::o;37168:144::-;37303:3;37281:31;-1:-1;37281:31::o;37646:91::-;;37708:24;37726:5;37708:24;:::i;37744:85::-;37810:13;37803:21;;37786:43::o;37836:113::-;-1:-1;;;;;37898:46;;37881:68::o;37956:121::-;-1:-1;;;;;38018:54;;38001:76::o;38084:72::-;38146:5;38129:27::o;38163:81::-;38234:4;38223:16;;38206:38::o;38251:129::-;;38338:37;38369:5;38338:37;:::i;38387:116::-;;38474:24;38492:5;38474:24;:::i;38510:121::-;;38589:37;38620:5;38589:37;:::i;38754:268::-;38819:1;38826:101;38840:6;38837:1;38834:13;38826:101;;;38907:11;;;38901:18;38888:11;;;38881:39;38862:2;38855:10;38826:101;;;38942:6;38939:1;38936:13;38933:2;;;-1:-1;;39007:1;38989:16;;38982:27;38803:219::o;39030:97::-;39118:2;39098:14;-1:-1;;39094:28;;39078:49::o;39135:117::-;39204:24;39222:5;39204:24;:::i;:::-;39197:5;39194:35;39184:2;;39243:1;39240;39233:12;39259:111;39325:21;39340:5;39325:21;:::i;39377:117::-;39446:24;39464:5;39446:24;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "68522": [
        {
          "start": 2099,
          "length": 32
        }
      ],
      "69875": [
        {
          "start": 2290,
          "length": 32
        },
        {
          "start": 2789,
          "length": 32
        },
        {
          "start": 7629,
          "length": 32
        }
      ],
      "69877": [
        {
          "start": 3305,
          "length": 32
        }
      ],
      "69879": [
        {
          "start": 3346,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addExtraRewards()": "0663b22c",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claimRewardsFor(address)": "1ac6d19d",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256)": "b6b55f25",
    "depositTo(address,uint256)": "ffaad6a5",
    "getConvexPool()": "20c71810",
    "getConvexPoolId()": "d12f8df0",
    "getCurveLpToken()": "b899aea4",
    "getRewardTokenAtIndex(uint256)": "a7d2793f",
    "getRewardTokenCount()": "82e5d073",
    "getRewardTokens()": "c4f59f9b",
    "getTotalHarvestDataForRewardToken(address)": "9655dd61",
    "getUserHarvestDataForRewardToken(address,address)": "093f6365",
    "increaseAllowance(address,uint256)": "39509351",
    "init(uint256)": "b7b0422d",
    "isPaused()": "b187bd26",
    "name()": "06fdde03",
    "setApprovals()": "8757b15b",
    "symbol()": "95d89b41",
    "togglePause(bool)": "57d159c6",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(uint256,bool)": "38d07436",
    "withdrawTo(address,uint256,bool)": "73e2290c",
    "withdrawToOnBehalf(address,address,uint256,bool)": "2cfafabe"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_convexBooster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_crvToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cvxToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"RewardTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"rewardTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"TokenNameSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TokenSymbolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integral\",\"type\":\"uint256\"}],\"name\":\"TotalHarvestIntegralUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastCheckpointBalance\",\"type\":\"uint256\"}],\"name\":\"TotalHarvestLastCheckpointBalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimableReward\",\"type\":\"uint256\"}],\"name\":\"UserHarvestUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addExtraRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimRewardsFor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConvexPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"convexPool_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConvexPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"convexPoolId_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurveLpToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"curveLPToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRewardTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getTotalHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastCheckpointBalance\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.TotalHarvestData\",\"name\":\"totalHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getUserHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimableReward\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.UserHarvestData\",\"name\":\"userHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setApprovals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isPaused\",\"type\":\"bool\"}],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewards\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewardsToHolder\",\"type\":\"bool\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onBehalf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewardsToHolder\",\"type\":\"bool\"}],\"name\":\"withdrawToOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"addExtraRewards()\":{\"details\":\"Anybody can call, in case more pool tokens are added. Is called prior to every new harvest.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimRewardsFor(address)\":{\"details\":\"Can be called off-chain to simulate the total harvestable rewards for a particular user\",\"params\":{\"_for\":\"The account for which to claim rewards\"},\"returns\":{\"claimedAmounts_\":\"The reward token amounts claimed\",\"rewardTokens_\":\"The reward tokens\"}},\"decimals()\":{\"details\":\"Implementing contracts should override to set different decimals\",\"returns\":{\"decimals_\":\"The token decimals\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\"}},\"depositTo(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit\",\"_to\":\"The account to receive staking tokens\"}},\"getConvexPool()\":{\"returns\":{\"convexPool_\":\"The reward pool\"}},\"getConvexPoolId()\":{\"returns\":{\"convexPoolId_\":\"The pid\"}},\"getCurveLpToken()\":{\"returns\":{\"curveLPToken_\":\"The Curve LP token\"}},\"getRewardTokenAtIndex(uint256)\":{\"returns\":{\"rewardToken_\":\"The reward token address\"}},\"getRewardTokenCount()\":{\"returns\":{\"count_\":\"The count\"}},\"getRewardTokens()\":{\"returns\":{\"rewardTokens_\":\"The reward tokens\"}},\"getTotalHarvestDataForRewardToken(address)\":{\"params\":{\"_rewardToken\":\"The reward token\"},\"returns\":{\"totalHarvestData_\":\"The TotalHarvestData\"}},\"getUserHarvestDataForRewardToken(address,address)\":{\"params\":{\"_rewardToken\":\"The reward token\",\"_user\":\"The account\"},\"returns\":{\"userHarvestData_\":\"The UserHarvestData\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"init(uint256)\":{\"params\":{\"_pid\":\"The Convex pool id for which to use the proxy\"}},\"isPaused()\":{\"returns\":{\"isPaused_\":\"True if paused\"}},\"name()\":{\"details\":\"Overrides the constructor-set storage for use in proxies\",\"returns\":{\"name_\":\"The token name\"}},\"symbol()\":{\"details\":\"Overrides the constructor-set storage for use in proxies\",\"returns\":{\"symbol_\":\"The token symbol\"}},\"togglePause(bool)\":{\"params\":{\"_isPaused\":\"True if next state is paused, false if unpaused\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"withdraw(uint256,bool)\":{\"details\":\"Setting `_claimRewards` to true will save gas over separate calls to withdraw + claim\",\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_claimRewards\":\"True if accrued rewards should be claimed\"},\"returns\":{\"claimedAmounts_\":\"The reward token amounts claimed\",\"rewardTokens_\":\"The reward tokens\"}},\"withdrawTo(address,uint256,bool)\":{\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_to\":\"The account to receive tokens\"}},\"withdrawToOnBehalf(address,address,uint256,bool)\":{\"details\":\"The caller must have an adequate ERC20.allowance() for _onBehalf\",\"params\":{\"_amount\":\"The amount of tokens to withdraw\",\"_onBehalf\":\"The account on behalf to withdraw\",\"_to\":\"The account to receive tokens\"}}},\"title\":\"ConvexCurveLpStakingWrapperLib Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addExtraRewards()\":{\"notice\":\"Adds rewards tokens that have not yet been added to the wrapper\"},\"claimRewardsFor(address)\":{\"notice\":\"Claims all rewards for a given account\"},\"decimals()\":{\"notice\":\"Gets the token decimals\"},\"deposit(uint256)\":{\"notice\":\"Deposits tokens to be staked, minting staking token to sender\"},\"depositTo(address,uint256)\":{\"notice\":\"Deposits tokens to be staked, minting staking token to a specified account\"},\"getConvexPool()\":{\"notice\":\"Gets the associated Convex reward pool address\"},\"getConvexPoolId()\":{\"notice\":\"Gets the associated Convex reward pool id (pid)\"},\"getCurveLpToken()\":{\"notice\":\"Gets the associated Curve LP token\"},\"getRewardTokenAtIndex(uint256)\":{\"notice\":\"Gets the reward token at a particular index\"},\"getRewardTokenCount()\":{\"notice\":\"Gets the count of reward tokens being harvested\"},\"getRewardTokens()\":{\"notice\":\"Gets all reward tokens being harvested\"},\"getTotalHarvestDataForRewardToken(address)\":{\"notice\":\"Gets the TotalHarvestData for a specified reward token\"},\"getUserHarvestDataForRewardToken(address,address)\":{\"notice\":\"Gets the UserHarvestData for a specified account and reward token\"},\"init(uint256)\":{\"notice\":\"Initializes the proxy\"},\"isPaused()\":{\"notice\":\"Checks if deposits and new reward harvesting are paused\"},\"name()\":{\"notice\":\"Gets the token name\"},\"setApprovals()\":{\"notice\":\"Sets necessary ERC20 approvals, as-needed\"},\"symbol()\":{\"notice\":\"Gets the token symbol\"},\"togglePause(bool)\":{\"notice\":\"Toggles pause for deposit and harvesting new rewards\"},\"withdraw(uint256,bool)\":{\"notice\":\"Withdraws staked tokens, returning tokens to the sender, and optionally claiming rewards\"},\"withdrawTo(address,uint256,bool)\":{\"notice\":\"Withdraws staked tokens, returning tokens to a specified account, and optionally claims rewards to the staked token holder\"},\"withdrawToOnBehalf(address,address,uint256,bool)\":{\"notice\":\"Withdraws staked tokens on behalf of AccountA, returning tokens to a specified AccountB, and optionally claims rewards to the staked token holder\"}},\"notice\":\"A library contract for ConvexCurveLpStakingWrapper instances\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/infrastructure/staking-wrappers/convex-curve-lp/ConvexCurveLpStakingWrapperLib.sol\":\"ConvexCurveLpStakingWrapperLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol\":{\"keccak256\":\"0xaeb9aba4e74eb3243a85090fded7b157969cf83e1f4159b1da2f662a3e7b15be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://92346911c044a54808d2d425fe58c6dc9594dfafb8d83496f6599e3bc23803d0\",\"dweb:/ipfs/QmYWf7yx9ZfUnP81K1hjvApthqNhpXzUhGuFBm4gX1aDRB\"]},\"contracts/release/infrastructure/staking-wrappers/StakingWrapperBase.sol\":{\"keccak256\":\"0x3e28050fbe625f1469701b231772ce321e719ddbce4f84b6caa1d8d634a4234a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f0871b7d6b595e444e598f68751225a596d969267c289a465462fdeb67530fc8\",\"dweb:/ipfs/QmX2z5QGP3kpKx9ruGnZHYH5bDCD9sjRGTRhg9SRiowctg\"]},\"contracts/release/infrastructure/staking-wrappers/StakingWrapperLibBase.sol\":{\"keccak256\":\"0x94d4057419743d9354d77774e1e5279a5ed2fc70012ef28115357f9921bfb5be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1e461f460a0339cada6cdfb0107bde47d236b336fec0ed470235ce7928666bb\",\"dweb:/ipfs/QmcMzSrcWTKyqgBAACVCidd2dpMfbeUtcQYu4D1ASiyFzk\"]},\"contracts/release/infrastructure/staking-wrappers/convex-curve-lp/ConvexCurveLpStakingWrapperLib.sol\":{\"keccak256\":\"0x1ec08f37e592766bb7f0d62edb04261bcd3c26154bb5dc437465f836fabf3427\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0265250d2255bcb61fdb1842e7dbb26e4d56a11a1e3fd87f0790644277bb7259\",\"dweb:/ipfs/Qmb5kVMTr86qYkJu8o1YNwnCrbUJMhmhnFHMrdx2vZhdED\"]},\"contracts/release/interfaces/IConvexBaseRewardPool.sol\":{\"keccak256\":\"0x7c82b546c3c339c6f602191bc9062d6887af7db438800359c0547aa6bb025acc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13a488b1d715000d1ed9415917a8f9c347ec91b04770b74746facacd88e2e105\",\"dweb:/ipfs/QmaHJKxagREc7Mbq8SkSbWgzwk8bNSFTwojAD5hNemwy1Y\"]},\"contracts/release/interfaces/IConvexBooster.sol\":{\"keccak256\":\"0x6e7561d2d7e71a0c89a6e62445de5c54c2e50d17877b23d8b5af10721dd90ed5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://772cf7f429a04a557d3b0ed36a73390da64fd93a9df253e0c7e9ebeeecd063ea\",\"dweb:/ipfs/QmXjfnXmtGV67wypxof8nWVTkXAEZqBpFjYePfr17K8rAL\"]},\"contracts/release/interfaces/IConvexVirtualBalanceRewardPool.sol\":{\"keccak256\":\"0x45a7d783e4088cf1b5dcb548da2fce6b0caa9c572c43af9f39aff46498fa101c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82ed678230fe900991bd81a6c31dae01d120fe5521f96d1cc36c40334385f907\",\"dweb:/ipfs/QmYre4JtyoXmetrYUwFMrPKwBY1NEm2XYdgMiAR7Z7P2jW\"]},\"contracts/release/utils/AddressArrayLib.sol\":{\"keccak256\":\"0xd76e220cc754d7c939e54c18d4060f843ca798bccaf9a9dbbd428e38d0f0960f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf0cbaedaec3390b6912ecef7bf62b2e8ec00d7f2b4f0045bab121b812e6f9d6\",\"dweb:/ipfs/QmSd5kxsv5x37TXeRDD91YmVCVA3GVFishdVyC2B9ed9ap\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_convexBooster",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_crvToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_cvxToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauseToggled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokenAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "rewardTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "claimedAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenNameSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenSymbolSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "integral",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TotalHarvestIntegralUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "lastCheckpointBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TotalHarvestLastCheckpointBalanceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "integral",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "claimableReward",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserHarvestUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addExtraRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_for",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewardsFor",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "rewardTokens_",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "claimedAmounts_",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "decimals_",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTo"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getConvexPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "convexPool_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getConvexPoolId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "convexPoolId_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurveLpToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "curveLPToken_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenAtIndex",
          "outputs": [
            {
              "internalType": "address",
              "name": "rewardToken_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokenCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "rewardTokens_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalHarvestDataForRewardToken",
          "outputs": [
            {
              "internalType": "struct IStakingWrapper.TotalHarvestData",
              "name": "totalHarvestData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "integral",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "lastCheckpointBalance",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserHarvestDataForRewardToken",
          "outputs": [
            {
              "internalType": "struct IStakingWrapper.UserHarvestData",
              "name": "userHarvestData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "integral",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "claimableReward",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isPaused_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_isPaused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "togglePause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_claimRewards",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "rewardTokens_",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "claimedAmounts_",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_claimRewardsToHolder",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_onBehalf",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_claimRewardsToHolder",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToOnBehalf"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addExtraRewards()": {
            "details": "Anybody can call, in case more pool tokens are added. Is called prior to every new harvest."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "claimRewardsFor(address)": {
            "details": "Can be called off-chain to simulate the total harvestable rewards for a particular user",
            "params": {
              "_for": "The account for which to claim rewards"
            },
            "returns": {
              "claimedAmounts_": "The reward token amounts claimed",
              "rewardTokens_": "The reward tokens"
            }
          },
          "decimals()": {
            "details": "Implementing contracts should override to set different decimals",
            "returns": {
              "decimals_": "The token decimals"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256)": {
            "params": {
              "_amount": "The amount of tokens to deposit"
            }
          },
          "depositTo(address,uint256)": {
            "params": {
              "_amount": "The amount of tokens to deposit",
              "_to": "The account to receive staking tokens"
            }
          },
          "getConvexPool()": {
            "returns": {
              "convexPool_": "The reward pool"
            }
          },
          "getConvexPoolId()": {
            "returns": {
              "convexPoolId_": "The pid"
            }
          },
          "getCurveLpToken()": {
            "returns": {
              "curveLPToken_": "The Curve LP token"
            }
          },
          "getRewardTokenAtIndex(uint256)": {
            "returns": {
              "rewardToken_": "The reward token address"
            }
          },
          "getRewardTokenCount()": {
            "returns": {
              "count_": "The count"
            }
          },
          "getRewardTokens()": {
            "returns": {
              "rewardTokens_": "The reward tokens"
            }
          },
          "getTotalHarvestDataForRewardToken(address)": {
            "params": {
              "_rewardToken": "The reward token"
            },
            "returns": {
              "totalHarvestData_": "The TotalHarvestData"
            }
          },
          "getUserHarvestDataForRewardToken(address,address)": {
            "params": {
              "_rewardToken": "The reward token",
              "_user": "The account"
            },
            "returns": {
              "userHarvestData_": "The UserHarvestData"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "init(uint256)": {
            "params": {
              "_pid": "The Convex pool id for which to use the proxy"
            }
          },
          "isPaused()": {
            "returns": {
              "isPaused_": "True if paused"
            }
          },
          "name()": {
            "details": "Overrides the constructor-set storage for use in proxies",
            "returns": {
              "name_": "The token name"
            }
          },
          "symbol()": {
            "details": "Overrides the constructor-set storage for use in proxies",
            "returns": {
              "symbol_": "The token symbol"
            }
          },
          "togglePause(bool)": {
            "params": {
              "_isPaused": "True if next state is paused, false if unpaused"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
          },
          "withdraw(uint256,bool)": {
            "details": "Setting `_claimRewards` to true will save gas over separate calls to withdraw + claim",
            "params": {
              "_amount": "The amount of tokens to withdraw",
              "_claimRewards": "True if accrued rewards should be claimed"
            },
            "returns": {
              "claimedAmounts_": "The reward token amounts claimed",
              "rewardTokens_": "The reward tokens"
            }
          },
          "withdrawTo(address,uint256,bool)": {
            "params": {
              "_amount": "The amount of tokens to withdraw",
              "_to": "The account to receive tokens"
            }
          },
          "withdrawToOnBehalf(address,address,uint256,bool)": {
            "details": "The caller must have an adequate ERC20.allowance() for _onBehalf",
            "params": {
              "_amount": "The amount of tokens to withdraw",
              "_onBehalf": "The account on behalf to withdraw",
              "_to": "The account to receive tokens"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addExtraRewards()": {
            "notice": "Adds rewards tokens that have not yet been added to the wrapper"
          },
          "claimRewardsFor(address)": {
            "notice": "Claims all rewards for a given account"
          },
          "decimals()": {
            "notice": "Gets the token decimals"
          },
          "deposit(uint256)": {
            "notice": "Deposits tokens to be staked, minting staking token to sender"
          },
          "depositTo(address,uint256)": {
            "notice": "Deposits tokens to be staked, minting staking token to a specified account"
          },
          "getConvexPool()": {
            "notice": "Gets the associated Convex reward pool address"
          },
          "getConvexPoolId()": {
            "notice": "Gets the associated Convex reward pool id (pid)"
          },
          "getCurveLpToken()": {
            "notice": "Gets the associated Curve LP token"
          },
          "getRewardTokenAtIndex(uint256)": {
            "notice": "Gets the reward token at a particular index"
          },
          "getRewardTokenCount()": {
            "notice": "Gets the count of reward tokens being harvested"
          },
          "getRewardTokens()": {
            "notice": "Gets all reward tokens being harvested"
          },
          "getTotalHarvestDataForRewardToken(address)": {
            "notice": "Gets the TotalHarvestData for a specified reward token"
          },
          "getUserHarvestDataForRewardToken(address,address)": {
            "notice": "Gets the UserHarvestData for a specified account and reward token"
          },
          "init(uint256)": {
            "notice": "Initializes the proxy"
          },
          "isPaused()": {
            "notice": "Checks if deposits and new reward harvesting are paused"
          },
          "name()": {
            "notice": "Gets the token name"
          },
          "setApprovals()": {
            "notice": "Sets necessary ERC20 approvals, as-needed"
          },
          "symbol()": {
            "notice": "Gets the token symbol"
          },
          "togglePause(bool)": {
            "notice": "Toggles pause for deposit and harvesting new rewards"
          },
          "withdraw(uint256,bool)": {
            "notice": "Withdraws staked tokens, returning tokens to the sender, and optionally claiming rewards"
          },
          "withdrawTo(address,uint256,bool)": {
            "notice": "Withdraws staked tokens, returning tokens to a specified account, and optionally claims rewards to the staked token holder"
          },
          "withdrawToOnBehalf(address,address,uint256,bool)": {
            "notice": "Withdraws staked tokens on behalf of AccountA, returning tokens to a specified AccountB, and optionally claims rewards to the staked token holder"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/release/infrastructure/staking-wrappers/convex-curve-lp/ConvexCurveLpStakingWrapperLib.sol": "ConvexCurveLpStakingWrapperLib"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol": {
        "keccak256": "0xaeb9aba4e74eb3243a85090fded7b157969cf83e1f4159b1da2f662a3e7b15be",
        "urls": [
          "bzz-raw://92346911c044a54808d2d425fe58c6dc9594dfafb8d83496f6599e3bc23803d0",
          "dweb:/ipfs/QmYWf7yx9ZfUnP81K1hjvApthqNhpXzUhGuFBm4gX1aDRB"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/staking-wrappers/StakingWrapperBase.sol": {
        "keccak256": "0x3e28050fbe625f1469701b231772ce321e719ddbce4f84b6caa1d8d634a4234a",
        "urls": [
          "bzz-raw://f0871b7d6b595e444e598f68751225a596d969267c289a465462fdeb67530fc8",
          "dweb:/ipfs/QmX2z5QGP3kpKx9ruGnZHYH5bDCD9sjRGTRhg9SRiowctg"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/staking-wrappers/StakingWrapperLibBase.sol": {
        "keccak256": "0x94d4057419743d9354d77774e1e5279a5ed2fc70012ef28115357f9921bfb5be",
        "urls": [
          "bzz-raw://d1e461f460a0339cada6cdfb0107bde47d236b336fec0ed470235ce7928666bb",
          "dweb:/ipfs/QmcMzSrcWTKyqgBAACVCidd2dpMfbeUtcQYu4D1ASiyFzk"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/infrastructure/staking-wrappers/convex-curve-lp/ConvexCurveLpStakingWrapperLib.sol": {
        "keccak256": "0x1ec08f37e592766bb7f0d62edb04261bcd3c26154bb5dc437465f836fabf3427",
        "urls": [
          "bzz-raw://0265250d2255bcb61fdb1842e7dbb26e4d56a11a1e3fd87f0790644277bb7259",
          "dweb:/ipfs/Qmb5kVMTr86qYkJu8o1YNwnCrbUJMhmhnFHMrdx2vZhdED"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IConvexBaseRewardPool.sol": {
        "keccak256": "0x7c82b546c3c339c6f602191bc9062d6887af7db438800359c0547aa6bb025acc",
        "urls": [
          "bzz-raw://13a488b1d715000d1ed9415917a8f9c347ec91b04770b74746facacd88e2e105",
          "dweb:/ipfs/QmaHJKxagREc7Mbq8SkSbWgzwk8bNSFTwojAD5hNemwy1Y"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IConvexBooster.sol": {
        "keccak256": "0x6e7561d2d7e71a0c89a6e62445de5c54c2e50d17877b23d8b5af10721dd90ed5",
        "urls": [
          "bzz-raw://772cf7f429a04a557d3b0ed36a73390da64fd93a9df253e0c7e9ebeeecd063ea",
          "dweb:/ipfs/QmXjfnXmtGV67wypxof8nWVTkXAEZqBpFjYePfr17K8rAL"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/interfaces/IConvexVirtualBalanceRewardPool.sol": {
        "keccak256": "0x45a7d783e4088cf1b5dcb548da2fce6b0caa9c572c43af9f39aff46498fa101c",
        "urls": [
          "bzz-raw://82ed678230fe900991bd81a6c31dae01d120fe5521f96d1cc36c40334385f907",
          "dweb:/ipfs/QmYre4JtyoXmetrYUwFMrPKwBY1NEm2XYdgMiAR7Z7P2jW"
        ],
        "license": "GPL-3.0"
      },
      "contracts/release/utils/AddressArrayLib.sol": {
        "keccak256": "0xd76e220cc754d7c939e54c18d4060f843ca798bccaf9a9dbbd428e38d0f0960f",
        "urls": [
          "bzz-raw://bf0cbaedaec3390b6912ecef7bf62b2e8ec00d7f2b4f0045bab121b812e6f9d6",
          "dweb:/ipfs/QmSd5kxsv5x37TXeRDD91YmVCVA3GVFishdVyC2B9ed9ap"
        ],
        "license": "GPL-3.0"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3",
        "urls": [
          "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e",
          "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
        "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
        "urls": [
          "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
          "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
        "urls": [
          "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
          "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
        "urls": [
          "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
          "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61",
        "urls": [
          "bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182",
          "dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 263
}
