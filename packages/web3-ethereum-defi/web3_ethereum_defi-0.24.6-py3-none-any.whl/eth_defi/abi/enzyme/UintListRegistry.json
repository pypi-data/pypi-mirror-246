{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dispatcher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "item",
          "type": "uint256"
        }
      ],
      "name": "ItemAddedToList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "item",
          "type": "uint256"
        }
      ],
      "name": "ItemRemovedFromList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ListAttested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "updateType",
          "type": "uint8"
        }
      ],
      "name": "ListCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nextOwner",
          "type": "address"
        }
      ],
      "name": "ListOwnerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "prevUpdateType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "nextUpdateType",
          "type": "uint8"
        }
      ],
      "name": "ListUpdateTypeSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "addToList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "areAllInAllLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInAllLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "areAllInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "areAllInSomeOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllInSomeOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "areAllNotInAnyOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllNotInAnyOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "areAllNotInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "areAllNotInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_descriptions",
          "type": "string[]"
        }
      ],
      "name": "attestLists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "_updateType",
          "type": "uint8"
        },
        {
          "internalType": "uint256[]",
          "name": "_initialItems",
          "type": "uint256[]"
        }
      ],
      "name": "createList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDispatcher",
      "outputs": [
        {
          "internalType": "address",
          "name": "dispatcher_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getListOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getListUpdateType",
      "outputs": [
        {
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "updateType_",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_item",
          "type": "uint256"
        }
      ],
      "name": "isInAllLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInAllLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_item",
          "type": "uint256"
        }
      ],
      "name": "isInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInList_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_item",
          "type": "uint256"
        }
      ],
      "name": "isInSomeOfLists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isInSomeOfLists_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_items",
          "type": "uint256[]"
        }
      ],
      "name": "removeFromList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nextOwner",
          "type": "address"
        }
      ],
      "name": "setListOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "enum UintListRegistry.UpdateType",
          "name": "_nextUpdateType",
          "type": "uint8"
        }
      ],
      "name": "setListUpdateType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200153b3803806200153b8339810160408190526200003491620000ef565b606081901b6001600160601b031916608052604080518082019091526000808252602082018181528154600181018355918052825160029092027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b039093166001600160a01b031990931692909217808355905190829060ff60a01b1916600160a01b836003811115620000ce57fe5b021790555050505062000144565b8051620000e9816200012a565b92915050565b6000602082840312156200010257600080fd5b6000620001108484620000dc565b949350505050565b60006001600160a01b038216620000e9565b620001358162000118565b81146200014157600080fd5b50565b60805160601c6113d9620001626000398061086352506113d96000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637e7f6936116100a2578063b426f94611610071578063b426f94614610246578063e75411ef14610259578063ebb3d5891461026c578063ee4483dc14610274578063f71e46691461028757610116565b80637e7f6936146101fa57806382b719761461020d578063956e8faa14610220578063a62b27271461023357610116565b80632cfd1d16116100e95780632cfd1d161461018c57806342a61ecd146101a15780634e4edcd0146101b45780634ee5b4aa146101c7578063539f2ab4146101da57610116565b806319bcc9381461011b578063285ddf3c146101445780632a182965146101645780632ce37b1014610177575b600080fd5b61012e610129366004610ee2565b61029a565b60405161013b91906111d8565b60405180910390f35b610157610152366004610fd5565b6102ca565b60405161013b91906111e6565b610157610172366004610e32565b610304565b61017f61034e565b60405161013b9190611274565b61019f61019a366004610f30565b610354565b005b6101576101af366004610e9b565b6104b2565b61019f6101c2366004610f30565b6104f2565b6101576101d5366004610e9b565b6105ab565b6101ed6101e8366004610ee2565b6105e8565b60405161013b91906111f4565b610157610208366004610f86565b610617565b61015761021b366004610e32565b610658565b61019f61022e366004610f00565b610698565b610157610241366004610e32565b610728565b61019f610254366004610dda565b61075c565b610157610267366004610f86565b61082e565b61012e610861565b61019f610282366004610fa5565b610885565b61017f610295366004610d72565b610981565b60008082815481106102a857fe5b60009182526020909120600290910201546001600160a01b031690505b919050565b60008083815481106102d857fe5b600091825260208083208584526001600290930201919091019052604090205460ff1690505b92915050565b6000805b82518110156103445761032e8484838151811061032157fe5b60200260200101516104b2565b61033c5760009150506102fe565b600101610308565b5060019392505050565b60005490565b8261035f3382610aac565b6103845760405162461bcd60e51b815260040161037b90611214565b60405180910390fd5b600061038f856105e8565b9050600281600381111561039f57fe5b14806103b6575060038160038111156103b457fe5b145b6103d25760405162461bcd60e51b815260040161037b90611244565b60005b838110156104aa576103f9868686848181106103ed57fe5b905060200201356102ca565b156104a257600080878154811061040c57fe5b9060005260206000209060020201600101600087878581811061042b57fe5b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550857fa62524cf3a1efcf9b74bd64dce1275bc3d56375cbdff2d81b823be3c5cce763586868481811061048557fe5b905060200201356040516104999190611274565b60405180910390a25b6001016103d5565b505050505050565b6000805b8351811015610344576104dc8482815181106104ce57fe5b6020026020010151846102ca565b6104ea5760009150506102fe565b6001016104b6565b826104fd3382610aac565b6105195760405162461bcd60e51b815260040161037b90611214565b6000610524856105e8565b9050600181600381111561053457fe5b148061054b5750600381600381111561054957fe5b145b6105675760405162461bcd60e51b815260040161037b90611254565b6105a485858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610b8c92505050565b5050505050565b6000805b83518110156105de576105c78482815181106104ce57fe5b156105d65760019150506102fe565b6001016105af565b5060009392505050565b60008082815481106105f657fe5b6000918252602090912060029091020154600160a01b900460ff1692915050565b6000805b8251811015610344576106418484838151811061063457fe5b60200260200101516102ca565b156106505760009150506102fe565b60010161061b565b6000805b8251811015610344576106828484838151811061067557fe5b60200260200101516105ab565b6106905760009150506102fe565b60010161065c565b816106a33382610aac565b6106bf5760405162461bcd60e51b815260040161037b90611214565b81600084815481106106cd57fe5b6000918252602082206002919091020180546001600160a01b0319166001600160a01b039384161790556040519184169185917f2d1c424d2803af2219fba896bc3092aed0ab3f7b022f412b79562b0fc2c2907d91a3505050565b6000805b8251811015610344576107458484838151811061067557fe5b156107545760009150506102fe565b60010161072c565b82811461077b5760405162461bcd60e51b815260040161037b90611224565b60005b838110156105a4576107a23386868481811061079657fe5b90506020020135610aac565b6107be5760405162461bcd60e51b815260040161037b90611234565b8484828181106107ca57fe5b905060200201357fddbb257b211697fab7f1ee9f59674cba284dbd7b9f6e1f3da5b645c890bf94008484848181106107fe57fe5b905060200281019061081091906112a4565b60405161081e929190611202565b60405180910390a260010161077e565b6000805b82518110156103445761084b8484838151811061063457fe5b6108595760009150506102fe565b600101610832565b7f000000000000000000000000000000000000000000000000000000000000000090565b816108903382610aac565b6108ac5760405162461bcd60e51b815260040161037b90611214565b60006108b7846105e8565b905060008360038111156108c757fe5b14806108de575060038160038111156108dc57fe5b145b6108fa5760405162461bcd60e51b815260040161037b90611264565b826000858154811061090857fe5b60009182526020909120600290910201805460ff60a01b1916600160a01b83600381111561093257fe5b021790555082600381111561094357fe5b847f44966c6bc2b3eef1eea6958dc704bb8527d350a282589bb13dd056819bd9d6468360405161097391906111f4565b60405180910390a350505050565b600061098b61034e565b905060006040518060400160405280876001600160a01b031681526020018660038111156109b557fe5b905281546001810183556000928352602092839020825160029092020180546001600160a01b0319166001600160a01b0390921691909117808255928201519192909190829060ff60a01b1916600160a01b836003811115610a1357fe5b02179055505050846001600160a01b0316336001600160a01b03167fc2b2d696fda57bcf0347d9ea036ce8258434f4171cd131b4c1d22a6f0ae960d28387604051610a5f929190611282565b60405180910390a3610aa481848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610b8c92505050565b949350505050565b600080610ab88361029a565b9050806001600160a01b0316846001600160a01b03161480610aa45750610add610861565b6001600160a01b0316816001600160a01b0316148015610aa45750610b00610861565b6001600160a01b031663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3857600080fd5b505afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190610d54565b6001600160a01b0316846001600160a01b031614949350505050565b60005b8151811015610c5b57610ba88383838151811061063457fe5b610c5357600160008481548110610bbb57fe5b90600052602060002090600202016001016000848481518110610bda57fe5b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550827f07cfe25e4b14780897cda3f2e73a50b728b4363e3bc6ff3fcd0c70e09f2b19dd838381518110610c3557fe5b6020026020010151604051610c4a9190611274565b60405180910390a25b600101610b8f565b505050565b80356102fe816113a2565b80516102fe816113a2565b60008083601f840112610c8857600080fd5b50813567ffffffffffffffff811115610ca057600080fd5b602083019150836020820283011115610cb857600080fd5b9250929050565b600082601f830112610cd057600080fd5b8135610ce3610cde82611321565b6112fa565b91508181835260208401935060208101905083856020840282011115610d0857600080fd5b60005b83811015610d345781610d1e8882610d49565b8452506020928301929190910190600101610d0b565b5050505092915050565b80356102fe816113b6565b80356102fe816113c3565b600060208284031215610d6657600080fd5b6000610aa48484610c6b565b60008060008060608587031215610d8857600080fd5b6000610d948787610c60565b9450506020610da587828801610d3e565b935050604085013567ffffffffffffffff811115610dc257600080fd5b610dce87828801610c76565b95989497509550505050565b60008060008060408587031215610df057600080fd5b843567ffffffffffffffff811115610e0757600080fd5b610e1387828801610c76565b9450945050602085013567ffffffffffffffff811115610dc257600080fd5b60008060408385031215610e4557600080fd5b823567ffffffffffffffff811115610e5c57600080fd5b610e6885828601610cbf565b925050602083013567ffffffffffffffff811115610e8557600080fd5b610e9185828601610cbf565b9150509250929050565b60008060408385031215610eae57600080fd5b823567ffffffffffffffff811115610ec557600080fd5b610ed185828601610cbf565b9250506020610e9185828601610d49565b600060208284031215610ef457600080fd5b6000610aa48484610d49565b60008060408385031215610f1357600080fd5b6000610f1f8585610d49565b9250506020610e9185828601610c60565b600080600060408486031215610f4557600080fd5b6000610f518686610d49565b935050602084013567ffffffffffffffff811115610f6e57600080fd5b610f7a86828701610c76565b92509250509250925092565b60008060408385031215610f9957600080fd5b6000610e688585610d49565b60008060408385031215610fb857600080fd5b6000610fc48585610d49565b9250506020610e9185828601610d3e565b60008060408385031215610fe857600080fd5b6000610ed18585610d49565b610ffd8161134b565b82525050565b610ffd81611356565b610ffd81611374565b60006110218385611342565b935061102e83858461137f565b6110378361138b565b9093019392505050565b600061104e601b83611342565b7f4f6e6c792063616c6c61626c65206279206c697374206f776e65720000000000815260200192915050565b6000611087601b83611342565b7f6174746573744c697374733a20556e657175616c206172726179730000000000815260200192915050565b60006110c0602883611342565b7f6174746573744c697374733a204f6e6c792063616c6c61626c65206279206c6981526739ba1037bbb732b960c11b602082015260400192915050565b600061110a602783611342565b7f72656d6f766546726f6d4c6973743a2043616e6e6f742072656d6f76652066728152661bdb481b1a5cdd60ca1b602082015260400192915050565b6000611153601d83611342565b7f616464546f4c6973743a2043616e6e6f742061646420746f206c697374000000815260200192915050565b600061118c602e83611342565b7f7365744c697374557064617465547970653a205f6e657874557064617465547981526d1c19481b9bdd08185b1b1bddd95960921b602082015260400192915050565b610ffd81611371565b602081016102fe8284610ff4565b602081016102fe8284611003565b602081016102fe828461100c565b60208082528101610aa4818486611015565b602080825281016102fe81611041565b602080825281016102fe8161107a565b602080825281016102fe816110b3565b602080825281016102fe816110fd565b602080825281016102fe81611146565b602080825281016102fe8161117f565b602081016102fe82846111cf565b6040810161129082856111cf565b61129d602083018461100c565b9392505050565b6000808335601e19368590030181126112bc57600080fd5b80840192508235915067ffffffffffffffff8211156112da57600080fd5b6020830192506001820236038313156112f257600080fd5b509250929050565b60405181810167ffffffffffffffff8111828210171561131957600080fd5b604052919050565b600067ffffffffffffffff82111561133857600080fd5b5060209081020190565b90815260200190565b60006102fe82611365565b151590565b806102c581611395565b6001600160a01b031690565b90565b60006102fe8261135b565b82818337506000910152565b601f01601f191690565b6004811061139f57fe5b50565b6113ab8161134b565b811461139f57600080fd5b6004811061139f57600080fd5b6113ab8161137156fea164736f6c634300060c000a",
    "sourceMap": "517:11544:65:-:0;;;1548:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1598:24;;;;-1:-1:-1;;;;;;1598:24:65;;;1740:58;;;;;;;;;-1:-1:-1;1740:58:65;;;;;;;;;1729:70;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1729:70:65;;;-1:-1:-1;;;;;;1729:70:65;;;;;;;;;;;;;;;-1:-1:-1;;;;1729:70:65;-1:-1:-1;;;1729:70:65;;;;;;;;;;;;;;;;1548:258;517:11544;;5:134:-1;83:13;;101:33;83:13;101:33;:::i;:::-;68:71;;;;:::o;146:263::-;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;365:9;329:64;:::i;:::-;319:74;223:186;-1:-1;;;;223:186::o;416:91::-;;-1:-1;;;;;576:54;;478:24;559:76::o;642:117::-;711:24;729:5;711:24;:::i;:::-;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;:::o;:::-;517:11544:65;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "517:11544:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11359:112;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11920:139;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8147:332::-;;;;;;:::i;:::-;;:::i;11145:97::-;;;:::i;:::-;;;;;;;:::i;4113:626::-;;;;;;:::i;:::-;;:::i;:::-;;9928:305;;;;;;:::i;:::-;;:::i;1971:344::-;;;;;;:::i;:::-;;:::i;10457:310::-;;;;;;:::i;:::-;;:::i;11603:130::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7558:314::-;;;;;;:::i;:::-;;:::i;8718:341::-;;;;;;:::i;:::-;;:::i;4874:174::-;;;;;;:::i;:::-;;:::i;9311:344::-;;;;;;:::i;:::-;;:::i;2781:445::-;;;;;;:::i;:::-;;:::i;7031:309::-;;;;;;:::i;:::-;;:::i;10953:101::-;;;:::i;5292:486::-;;;;;;:::i;:::-;;:::i;3572:393::-;;;;;;:::i;:::-;;:::i;11359:112::-;11415:14;11448:5;11454:3;11448:10;;;;;;;;;;;;;;;;;;;;;:16;-1:-1:-1;;;;;11448:16:65;;-1:-1:-1;11359:112:65;;;;:::o;11920:139::-;11987:14;12020:5;12026:3;12020:10;;;;;;;;;;;;;;;;:32;;;:25;:10;;;;;:25;;;;:32;;;;;;;;;-1:-1:-1;11920:139:65;;;;;:::o;8147:332::-;8268:22;8311:9;8306:145;8326:6;:13;8322:1;:17;8306:145;;;8365:29;8378:4;8384:6;8391:1;8384:9;;;;;;;;;;;;;;8365:12;:29::i;:::-;8360:81;;8421:5;8414:12;;;;;8360:81;8341:3;;8306:145;;;-1:-1:-1;8468:4:65;;8147:332;-1:-1:-1;;;8147:332:65:o;11145:97::-;11190:14;11223:12;11145:97;:::o;4113:626::-;4200:3;1462:30;1476:10;1488:3;1462:13;:30::i;:::-;1454:70;;;;-1:-1:-1;;;1454:70:65;;;;;;;:::i;:::-;;;;;;;;;4215:21:::1;4239:22;4257:3;4239:17;:22::i;:::-;4215:46:::0;-1:-1:-1;4306:21:65::1;4292:10;:35;;;;;;;;;:76;;;-1:-1:-1::0;4345:23:65::1;4331:10;:37;;;;;;;;;4292:76;4271:162;;;;-1:-1:-1::0;;;4271:162:65::1;;;;;;;:::i;:::-;4508:9;4503:230;4519:17:::0;;::::1;4503:230;;;4561:24;4570:3;4575:6;;4582:1;4575:9;;;;;;;;;;;;;4561:8;:24::i;:::-;4557:166;;;4644:5;4605::::0;4611:3:::1;4605:10;;;;;;;;;;;;;;;;;;:25;;:36;4631:6;;4638:1;4631:9;;;;;;;;;;;;;4605:36;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;4693:3;4673:35;4698:6;;4705:1;4698:9;;;;;;;;;;;;;4673:35;;;;;;:::i;:::-;;;;;;;;4557:166;4538:3;;4503:230;;;;1534:1;4113:626:::0;;;;:::o;9928:305::-;10033:18;10072:9;10067:138;10087:4;:11;10083:1;:15;10067:138;;;10124:24;10133:4;10138:1;10133:7;;;;;;;;;;;;;;10142:5;10124:8;:24::i;:::-;10119:76;;10175:5;10168:12;;;;;10119:76;10100:3;;10067:138;;1971:344;2053:3;1462:30;1476:10;1488:3;1462:13;:30::i;:::-;1454:70;;;;-1:-1:-1;;;1454:70:65;;;;;;;:::i;:::-;2068:21:::1;2092:22;2110:3;2092:17;:22::i;:::-;2068:46:::0;-1:-1:-1;2159:18:65::1;2145:10;:32;;;;;;;;;:73;;;-1:-1:-1::0;2195:23:65::1;2181:10;:37;;;;;;;;;2145:73;2124:149;;;;-1:-1:-1::0;;;2124:149:65::1;;;;;;;:::i;:::-;2284:24;2296:3;2301:6;;2284:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2284:11:65::1;::::0;-1:-1:-1;;;2284:24:65:i:1;:::-;1534:1;1971:344:::0;;;;:::o;10457:310::-;10565:21;10607:9;10602:136;10622:4;:11;10618:1;:15;10602:136;;;10658:24;10667:4;10672:1;10667:7;;;;;;;10658:24;10654:74;;;10709:4;10702:11;;;;;10654:74;10635:3;;10602:136;;;-1:-1:-1;10755:5:65;;10457:310;-1:-1:-1;;;10457:310:65:o;11603:130::-;11664:22;11705:5;11711:3;11705:10;;;;;;;;;;;;;;;;;;;;;:21;-1:-1:-1;;;11705:21:65;;;;;11603:130;-1:-1:-1;;11603:130:65:o;7558:314::-;7668:21;7710:9;7705:139;7725:6;:13;7721:1;:17;7705:139;;;7763:24;7772:3;7777:6;7784:1;7777:9;;;;;;;;;;;;;;7763:8;:24::i;:::-;7759:75;;;7814:5;7807:12;;;;;7759:75;7740:3;;7705:139;;8718:341;8842:25;8888:9;8883:148;8903:6;:13;8899:1;:17;8883:148;;;8942:32;8958:4;8964:6;8971:1;8964:9;;;;;;;;;;;;;;8942:15;:32::i;:::-;8937:84;;9001:5;8994:12;;;;;8937:84;8918:3;;8883:148;;4874:174;4952:3;1462:30;1476:10;1488:3;1462:13;:30::i;:::-;1454:70;;;;-1:-1:-1;;;1454:70:65;;;;;;;:::i;:::-;4986:10:::1;4967:5;4973:3;4967:10;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:29:::0;;-1:-1:-1;;;;;;4967:29:65::1;-1:-1:-1::0;;;;;4967:29:65;;::::1;;::::0;;5012::::1;::::0;;;::::1;::::0;5025:3;;5012:29:::1;::::0;::::1;4874:174:::0;;;:::o;9311:344::-;9437:27;9485:9;9480:147;9500:6;:13;9496:1;:17;9480:147;;;9538:32;9554:4;9560:6;9567:1;9560:9;;;;;;;9538:32;9534:83;;;9597:5;9590:12;;;;;9534:83;9515:3;;9480:147;;2781:445;2887:35;;;2879:75;;;;-1:-1:-1;;;2879:75:65;;;;;;;:::i;:::-;2970:9;2965:255;2981:15;;;2965:255;;;3042:34;3056:10;3068:4;;3073:1;3068:7;;;;;;;;;;;;;3042:13;:34::i;:::-;3017:133;;;;-1:-1:-1;;;3017:133:65;;;;;;;:::i;:::-;3183:4;;3188:1;3183:7;;;;;;;;;;;;;3170:39;3192:13;;3206:1;3192:16;;;;;;;;;;;;;;;;;;:::i;:::-;3170:39;;;;;;;:::i;:::-;;;;;;;;2998:3;;2965:255;;7031:309;7138:18;7177:9;7172:140;7192:6;:13;7188:1;:17;7172:140;;;7231:24;7240:3;7245:6;7252:1;7245:9;;;;;;;7231:24;7226:76;;7282:5;7275:12;;;;;7226:76;7207:3;;7172:140;;10953:101;11037:10;10953:101;:::o;5292:486::-;5399:3;1462:30;1476:10;1488:3;1462:13;:30::i;:::-;1454:70;;;;-1:-1:-1;;;1454:70:65;;;;;;;:::i;:::-;5418:25:::1;5446:22;5464:3;5446:17;:22::i;:::-;5418:50:::0;-1:-1:-1;5518:15:65::1;5499;:34;;;;;;;;;:79;;;-1:-1:-1::0;5555:23:65::1;5537:14;:41;;;;;;;;;5499:79;5478:172;;;;-1:-1:-1::0;;;5478:172:65::1;;;;;;;:::i;:::-;5685:15;5661:5;5667:3;5661:10;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:39:::0;;-1:-1:-1;;;;5661:39:65::1;-1:-1:-1::0;;;5661:39:65;::::1;::::0;::::1;;;;;;;;;;;5755:15;5716:55;;;;;;;;5734:3;5716:55;5739:14;5716:55;;;;;;:::i;:::-;;;;;;;;1534:1;5292:486:::0;;;:::o;3572:393::-;3714:11;3743:14;:12;:14::i;:::-;3737:20;;3768:5;3779:50;;;;;;;;3796:6;-1:-1:-1;;;;;3779:50:65;;;;;3816:11;3779:50;;;;;;;;;;3768:62;;;;;;;-1:-1:-1;3768:62:65;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3768:62:65;-1:-1:-1;;;;;3768:62:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3768:62:65;-1:-1:-1;;;3768:62:65;;;;;;;;;;;;;;;;3870:6;-1:-1:-1;;;;;3846:49:65;3858:10;-1:-1:-1;;;;;3846:49:65;;3878:3;3883:11;3846:49;;;;;;;:::i;:::-;;;;;;;;3906:31;3918:3;3923:13;;3906:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:11:65;;-1:-1:-1;;;3906:31:65:i;:::-;3572:393;;;;;;:::o;6240:276::-;6312:17;6341:13;6357:17;6370:3;6357:12;:17::i;:::-;6341:33;;6411:5;-1:-1:-1;;;;;6403:13:65;:4;-1:-1:-1;;;;;6403:13:65;;:106;;;;6442:15;:13;:15::i;:::-;-1:-1:-1;;;;;6433:24:65;:5;-1:-1:-1;;;;;6433:24:65;;:75;;;;;6481:15;:13;:15::i;:::-;-1:-1:-1;;;;;6469:37:65;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6461:47:65;:4;-1:-1:-1;;;;;6461:47:65;;6384:125;6240:276;-1:-1:-1;;;;6240:276:65:o;5853:309::-;5935:9;5930:226;5950:6;:13;5946:1;:17;5930:226;;;5989:24;5998:3;6003:6;6010:1;6003:9;;;;;;;5989:24;5984:162;;6072:4;6033:5;6039:3;6033:10;;;;;;;;;;;;;;;;;;:25;;:36;6059:6;6066:1;6059:9;;;;;;;;;;;;;;6033:36;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;6116:3;6100:31;6121:6;6128:1;6121:9;;;;;;;;;;;;;;6100:31;;;;;;:::i;:::-;;;;;;;;5984:162;5965:3;;5930:226;;;;5853:309;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;300:364::-;;;442:3;435:4;427:6;423:17;419:27;409:2;;460:1;457;450:12;409:2;-1:-1;480:20;;520:18;509:30;;506:2;;;552:1;549;542:12;506:2;586:4;578:6;574:17;562:29;;637:3;629:4;621:6;617:17;607:8;603:32;600:41;597:2;;;654:1;651;644:12;597:2;402:262;;;;;:::o;1068:707::-;;1185:3;1178:4;1170:6;1166:17;1162:27;1152:2;;1203:1;1200;1193:12;1152:2;1240:6;1227:20;1262:80;1277:64;1334:6;1277:64;:::i;:::-;1262:80;:::i;:::-;1253:89;;1359:5;1384:6;1377:5;1370:21;1414:4;1406:6;1402:17;1392:27;;1436:4;1431:3;1427:14;1420:21;;1489:6;1536:3;1528:4;1520:6;1516:17;1511:3;1507:27;1504:36;1501:2;;;1553:1;1550;1543:12;1501:2;1578:1;1563:206;1588:6;1585:1;1582:13;1563:206;;;1646:3;1668:37;1701:3;1689:10;1668:37;:::i;:::-;1656:50;;-1:-1;1729:4;1720:14;;;;1748;;;;;1610:1;1603:9;1563:206;;;1567:14;1145:630;;;;;;;:::o;1783:162::-;1866:20;;1891:49;1866:20;1891:49;:::i;1952:130::-;2019:20;;2044:33;2019:20;2044:33;:::i;2089:263::-;;2204:2;2192:9;2183:7;2179:23;2175:32;2172:2;;;2220:1;2217;2210:12;2172:2;2255:1;2272:64;2328:7;2308:9;2272:64;:::i;2359:679::-;;;;;2548:2;2536:9;2527:7;2523:23;2519:32;2516:2;;;2564:1;2561;2554:12;2516:2;2599:1;2616:53;2661:7;2641:9;2616:53;:::i;:::-;2606:63;;2578:97;2706:2;2724:69;2785:7;2776:6;2765:9;2761:22;2724:69;:::i;:::-;2714:79;;2685:114;2858:2;2847:9;2843:18;2830:32;2882:18;2874:6;2871:30;2868:2;;;2914:1;2911;2904:12;2868:2;2942:80;3014:7;3005:6;2994:9;2990:22;2942:80;:::i;:::-;2510:528;;;;-1:-1;2924:98;-1:-1;;;;2510:528::o;3045:702::-;;;;;3248:2;3236:9;3227:7;3223:23;3219:32;3216:2;;;3264:1;3261;3254:12;3216:2;3299:31;;3350:18;3339:30;;3336:2;;;3382:1;3379;3372:12;3336:2;3410:80;3482:7;3473:6;3462:9;3458:22;3410:80;:::i;:::-;3392:98;;;;3278:218;3555:2;3544:9;3540:18;3527:32;3579:18;3571:6;3568:30;3565:2;;;3611:1;3608;3601:12;3754:638;;;3925:2;3913:9;3904:7;3900:23;3896:32;3893:2;;;3941:1;3938;3931:12;3893:2;3976:31;;4027:18;4016:30;;4013:2;;;4059:1;4056;4049:12;4013:2;4079:78;4149:7;4140:6;4129:9;4125:22;4079:78;:::i;:::-;4069:88;;3955:208;4222:2;4211:9;4207:18;4194:32;4246:18;4238:6;4235:30;4232:2;;;4278:1;4275;4268:12;4232:2;4298:78;4368:7;4359:6;4348:9;4344:22;4298:78;:::i;:::-;4288:88;;4173:209;3887:505;;;;;:::o;4399:502::-;;;4545:2;4533:9;4524:7;4520:23;4516:32;4513:2;;;4561:1;4558;4551:12;4513:2;4596:31;;4647:18;4636:30;;4633:2;;;4679:1;4676;4669:12;4633:2;4699:78;4769:7;4760:6;4749:9;4745:22;4699:78;:::i;:::-;4689:88;;4575:208;4814:2;4832:53;4877:7;4868:6;4857:9;4853:22;4832:53;:::i;4908:241::-;;5012:2;5000:9;4991:7;4987:23;4983:32;4980:2;;;5028:1;5025;5018:12;4980:2;5063:1;5080:53;5125:7;5105:9;5080:53;:::i;5156:366::-;;;5277:2;5265:9;5256:7;5252:23;5248:32;5245:2;;;5293:1;5290;5283:12;5245:2;5328:1;5345:53;5390:7;5370:9;5345:53;:::i;:::-;5335:63;;5307:97;5435:2;5453:53;5498:7;5489:6;5478:9;5474:22;5453:53;:::i;5529:522::-;;;;5685:2;5673:9;5664:7;5660:23;5656:32;5653:2;;;5701:1;5698;5691:12;5653:2;5736:1;5753:53;5798:7;5778:9;5753:53;:::i;:::-;5743:63;;5715:97;5871:2;5860:9;5856:18;5843:32;5895:18;5887:6;5884:30;5881:2;;;5927:1;5924;5917:12;5881:2;5955:80;6027:7;6018:6;6007:9;6003:22;5955:80;:::i;:::-;5937:98;;;;5822:219;5647:404;;;;;:::o;6058:502::-;;;6204:2;6192:9;6183:7;6179:23;6175:32;6172:2;;;6220:1;6217;6210:12;6172:2;6255:1;6272:53;6317:7;6297:9;6272:53;:::i;6567:398::-;;;6704:2;6692:9;6683:7;6679:23;6675:32;6672:2;;;6720:1;6717;6710:12;6672:2;6755:1;6772:53;6817:7;6797:9;6772:53;:::i;:::-;6762:63;;6734:97;6862:2;6880:69;6941:7;6932:6;6921:9;6917:22;6880:69;:::i;6972:366::-;;;7093:2;7081:9;7072:7;7068:23;7064:32;7061:2;;;7109:1;7106;7099:12;7061:2;7144:1;7161:53;7206:7;7186:9;7161:53;:::i;7345:113::-;7428:24;7446:5;7428:24;:::i;:::-;7423:3;7416:37;7410:48;;:::o;7465:104::-;7542:21;7557:5;7542:21;:::i;7576:154::-;7673:51;7718:5;7673:51;:::i;7762:300::-;;7878:71;7942:6;7937:3;7878:71;:::i;:::-;7871:78;;7961:43;7997:6;7992:3;7985:5;7961:43;:::i;:::-;8026:29;8048:6;8026:29;:::i;:::-;8017:39;;;;7864:198;-1:-1;;;7864:198::o;8071:327::-;;8231:67;8295:2;8290:3;8231:67;:::i;:::-;8331:29;8311:50;;8389:2;8380:12;;8217:181;-1:-1;;8217:181::o;8407:327::-;;8567:67;8631:2;8626:3;8567:67;:::i;:::-;8667:29;8647:50;;8725:2;8716:12;;8553:181;-1:-1;;8553:181::o;8743:377::-;;8903:67;8967:2;8962:3;8903:67;:::i;:::-;9003:34;8983:55;;-1:-1;;;9067:2;9058:12;;9051:32;9111:2;9102:12;;8889:231;-1:-1;;8889:231::o;9129:376::-;;9289:67;9353:2;9348:3;9289:67;:::i;:::-;9389:34;9369:55;;-1:-1;;;9453:2;9444:12;;9437:31;9496:2;9487:12;;9275:230;-1:-1;;9275:230::o;9514:329::-;;9674:67;9738:2;9733:3;9674:67;:::i;:::-;9774:31;9754:52;;9834:2;9825:12;;9660:183;-1:-1;;9660:183::o;9852:383::-;;10012:67;10076:2;10071:3;10012:67;:::i;:::-;10112:34;10092:55;;-1:-1;;;10176:2;10167:12;;10160:38;10226:2;10217:12;;9998:237;-1:-1;;9998:237::o;10243:113::-;10326:24;10344:5;10326:24;:::i;10363:222::-;10490:2;10475:18;;10504:71;10479:9;10548:6;10504:71;:::i;10592:210::-;10713:2;10698:18;;10727:65;10702:9;10765:6;10727:65;:::i;10809:250::-;10950:2;10935:18;;10964:85;10939:9;11022:6;10964:85;:::i;11066:330::-;11223:2;11237:47;;;11208:18;;11298:88;11208:18;11372:6;11364;11298:88;:::i;11403:416::-;11603:2;11617:47;;;11588:18;;11678:131;11588:18;11678:131;:::i;11826:416::-;12026:2;12040:47;;;12011:18;;12101:131;12011:18;12101:131;:::i;12249:416::-;12449:2;12463:47;;;12434:18;;12524:131;12434:18;12524:131;:::i;12672:416::-;12872:2;12886:47;;;12857:18;;12947:131;12857:18;12947:131;:::i;13095:416::-;13295:2;13309:47;;;13280:18;;13370:131;13280:18;13370:131;:::i;13518:416::-;13718:2;13732:47;;;13703:18;;13793:131;13703:18;13793:131;:::i;13941:222::-;14068:2;14053:18;;14082:71;14057:9;14126:6;14082:71;:::i;14170:361::-;14339:2;14324:18;;14353:71;14328:9;14397:6;14353:71;:::i;:::-;14435:86;14517:2;14506:9;14502:18;14493:6;14435:86;:::i;:::-;14310:221;;;;;:::o;14538:507::-;;;14661:25;;-1:-1;;14733:14;14729:29;;;14725:48;14701:73;;14691:2;;14788:1;14785;14778:12;14691:2;14819:18;14809:8;14805:33;14797:41;;14872:4;14859:18;14849:28;;14897:18;14889:6;14886:30;14883:2;;;14929:1;14926;14919:12;14883:2;14957;14951:4;14947:13;14939:21;;15011:4;15003:6;14999:17;14983:14;14979:38;14973:4;14969:49;14966:2;;;15031:1;15028;15021:12;14966:2;14629:416;;;;;;:::o;15052:256::-;15114:2;15108:9;15140:17;;;15215:18;15200:34;;15236:22;;;15197:62;15194:2;;;15272:1;15269;15262:12;15194:2;15288;15281:22;15092:216;;-1:-1;15092:216::o;15315:304::-;;15474:18;15466:6;15463:30;15460:2;;;15506:1;15503;15496:12;15460:2;-1:-1;15541:4;15529:17;;;15594:15;;15397:222::o;15627:163::-;15730:19;;;15779:4;15770:14;;15723:67::o;15798:91::-;;15860:24;15878:5;15860:24;:::i;15896:85::-;15962:13;15955:21;;15938:43::o;15988:138::-;16066:5;16072:49;16066:5;16072:49;:::i;16133:121::-;-1:-1;;;;;16195:54;;16178:76::o;16261:72::-;16323:5;16306:27::o;16340:138::-;;16433:40;16467:5;16433:40;:::i;16486:145::-;16567:6;16562:3;16557;16544:30;-1:-1;16623:1;16605:16;;16598:27;16537:94::o;16639:97::-;16727:2;16707:14;-1:-1;;16703:28;;16687:49::o;16744:107::-;16829:1;16822:5;16819:12;16809:2;;16835:9;16809:2;16803:48;:::o;16858:117::-;16927:24;16945:5;16927:24;:::i;:::-;16920:5;16917:35;16907:2;;16966:1;16963;16956:12;16982:110;17067:1;17060:5;17057:12;17047:2;;17083:1;17080;17073:12;17099:117;17168:24;17186:5;17168:24;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "10601": [
        {
          "start": 2147,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addToList(uint256,uint256[])": "4e4edcd0",
    "areAllInAllLists(uint256[],uint256[])": "2a182965",
    "areAllInList(uint256,uint256[])": "e75411ef",
    "areAllInSomeOfLists(uint256[],uint256[])": "82b71976",
    "areAllNotInAnyOfLists(uint256[],uint256[])": "a62b2727",
    "areAllNotInList(uint256,uint256[])": "7e7f6936",
    "attestLists(uint256[],string[])": "b426f946",
    "createList(address,uint8,uint256[])": "f71e4669",
    "getDispatcher()": "ebb3d589",
    "getListCount()": "2ce37b10",
    "getListOwner(uint256)": "19bcc938",
    "getListUpdateType(uint256)": "539f2ab4",
    "isInAllLists(uint256[],uint256)": "42a61ecd",
    "isInList(uint256,uint256)": "285ddf3c",
    "isInSomeOfLists(uint256[],uint256)": "4ee5b4aa",
    "removeFromList(uint256,uint256[])": "2cfd1d16",
    "setListOwner(uint256,address)": "956e8faa",
    "setListUpdateType(uint256,uint8)": "ee4483dc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"}],\"name\":\"ItemAddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"}],\"name\":\"ItemRemovedFromList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ListAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"updateType\",\"type\":\"uint8\"}],\"name\":\"ListCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nextOwner\",\"type\":\"address\"}],\"name\":\"ListOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"prevUpdateType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"nextUpdateType\",\"type\":\"uint8\"}],\"name\":\"ListUpdateTypeSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"addToList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"areAllInAllLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInAllLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"areAllInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"areAllInSomeOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllInSomeOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"areAllNotInAnyOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllNotInAnyOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"areAllNotInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"areAllNotInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_descriptions\",\"type\":\"string[]\"}],\"name\":\"attestLists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"_updateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"_initialItems\",\"type\":\"uint256[]\"}],\"name\":\"createList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getListOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getListUpdateType\",\"outputs\":[{\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"updateType_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"}],\"name\":\"isInAllLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInAllLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"}],\"name\":\"isInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInList_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"}],\"name\":\"isInSomeOfLists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInSomeOfLists_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_items\",\"type\":\"uint256[]\"}],\"name\":\"removeFromList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nextOwner\",\"type\":\"address\"}],\"name\":\"setListOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum UintListRegistry.UpdateType\",\"name\":\"_nextUpdateType\",\"type\":\"uint8\"}],\"name\":\"setListUpdateType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"addToList(uint256,uint256[])\":{\"params\":{\"_id\":\"The id of the list\",\"_items\":\"The items to add to the list\"}},\"areAllInAllLists(uint256[],uint256[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInAllLists_\":\"True if all items are in all of the lists\"}},\"areAllInList(uint256,uint256[])\":{\"params\":{\"_id\":\"The list id\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInList_\":\"True if all items are in the list\"}},\"areAllInSomeOfLists(uint256[],uint256[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllInSomeOfLists_\":\"True if all items are in one of the lists\"}},\"areAllNotInAnyOfLists(uint256[],uint256[])\":{\"params\":{\"_ids\":\"The list ids\",\"_items\":\"The items to check\"},\"returns\":{\"areAllNotInAnyOfLists_\":\"True if all items are absent from all lists\"}},\"areAllNotInList(uint256,uint256[])\":{\"params\":{\"_id\":\"The list id\",\"_items\":\"The items to check\"},\"returns\":{\"areAllNotInList_\":\"True if no items are in the list\"}},\"attestLists(uint256[],string[])\":{\"details\":\"Since UserA can create a list on behalf of UserB, this function provides a mechanism for UserB to attest to their management of the items therein. It will not be visible on-chain, but will be available in event logs.\",\"params\":{\"_descriptions\":\"The descriptions of the lists' content\",\"_ids\":\"The ids of the lists\"}},\"createList(address,uint8,uint256[])\":{\"details\":\"Specify the DISPATCHER as the _owner to make the Enzyme Council the owner\",\"params\":{\"_initialItems\":\"The initial items to add to the list\",\"_owner\":\"The owner of the list\",\"_updateType\":\"The UpdateType for the list\"},\"returns\":{\"id_\":\"The id of the newly-created list\"}},\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `DISPATCHER` variable value\"}},\"getListCount()\":{\"returns\":{\"count_\":\"The total count\"}},\"getListOwner(uint256)\":{\"params\":{\"_id\":\"The list id\"},\"returns\":{\"owner_\":\"The owner\"}},\"getListUpdateType(uint256)\":{\"params\":{\"_id\":\"The list id\"},\"returns\":{\"updateType_\":\"The UpdateType\"}},\"isInAllLists(uint256[],uint256)\":{\"params\":{\"_ids\":\"The list ids\",\"_item\":\"The item to check\"},\"returns\":{\"isInAllLists_\":\"True if item is in all of the lists\"}},\"isInList(uint256,uint256)\":{\"params\":{\"_id\":\"The list id\",\"_item\":\"The item to check\"},\"returns\":{\"isInList_\":\"True if the item is in the list\"}},\"isInSomeOfLists(uint256[],uint256)\":{\"params\":{\"_ids\":\"The list ids\",\"_item\":\"The item to check\"},\"returns\":{\"isInSomeOfLists_\":\"True if item is in one of the lists\"}},\"removeFromList(uint256,uint256[])\":{\"params\":{\"_id\":\"The id of the list\",\"_items\":\"The items to remove from the list\"}},\"setListOwner(uint256,address)\":{\"params\":{\"_id\":\"The id of the list\",\"_nextOwner\":\"The owner to set\"}},\"setListUpdateType(uint256,uint8)\":{\"details\":\"Can only change to a less mutable option (e.g., both add and remove => add only)\",\"params\":{\"_id\":\"The id of the list\",\"_nextUpdateType\":\"The UpdateType to set\"}}},\"title\":\"UintListRegistry Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToList(uint256,uint256[])\":{\"notice\":\"Adds items to a given list\"},\"areAllInAllLists(uint256[],uint256[])\":{\"notice\":\"Checks if multiple items are all in all of a given set of lists\"},\"areAllInList(uint256,uint256[])\":{\"notice\":\"Checks if multiple items are all in a given list\"},\"areAllInSomeOfLists(uint256[],uint256[])\":{\"notice\":\"Checks if multiple items are all in one of a given set of lists\"},\"areAllNotInAnyOfLists(uint256[],uint256[])\":{\"notice\":\"Checks if multiple items are all absent from all of a given set of lists\"},\"areAllNotInList(uint256,uint256[])\":{\"notice\":\"Checks if multiple items are all absent from a given list\"},\"attestLists(uint256[],string[])\":{\"notice\":\"Attests active ownership for lists and (optionally) a description of each list's content\"},\"createList(address,uint8,uint256[])\":{\"notice\":\"Creates a new list\"},\"getDispatcher()\":{\"notice\":\"Gets the `DISPATCHER` variable\"},\"getListCount()\":{\"notice\":\"Gets the total count of lists\"},\"getListOwner(uint256)\":{\"notice\":\"Gets the owner of a given list\"},\"getListUpdateType(uint256)\":{\"notice\":\"Gets the UpdateType of a given list\"},\"isInAllLists(uint256[],uint256)\":{\"notice\":\"Checks if an item is in all of a given set of lists\"},\"isInList(uint256,uint256)\":{\"notice\":\"Checks if an item is in a given list\"},\"isInSomeOfLists(uint256[],uint256)\":{\"notice\":\"Checks if an item is in at least one of a given set of lists\"},\"removeFromList(uint256,uint256[])\":{\"notice\":\"Removes items from a given list\"},\"setListOwner(uint256,address)\":{\"notice\":\"Sets the owner for a given list\"},\"setListUpdateType(uint256,uint8)\":{\"notice\":\"Sets the UpdateType for a given list\"}},\"notice\":\"A contract for creating and updating lists of uint256 items\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/uint-list-registry/UintListRegistry.sol\":\"UintListRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]},\"contracts/persistent/uint-list-registry/UintListRegistry.sol\":{\"keccak256\":\"0x79b8f209651bbeffcb7274a88753a929f022689a9bce9575a53ff03658ee2825\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a8e334b6b57232ab6dae49e38cf4cbbe376ff9bb8e4f71665a7cca33c2aed99d\",\"dweb:/ipfs/QmNiTw8WyGBjhqAy4JB1dGscKEBxvrpWNJYuPvb3ojxG6y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.6.12+commit.27d51765"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dispatcher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "item",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ItemAddedToList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "item",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ItemRemovedFromList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListAttested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "updateType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "nextOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListOwnerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "prevUpdateType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "nextUpdateType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListUpdateTypeSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInAllLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInAllLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllInSomeOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllInSomeOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllNotInAnyOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllNotInAnyOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areAllNotInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "areAllNotInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "_descriptions",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attestLists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "_updateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "_initialItems",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createList",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDispatcher",
          "outputs": [
            {
              "internalType": "address",
              "name": "dispatcher_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getListCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getListOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getListUpdateType",
          "outputs": [
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "updateType_",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_item",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInAllLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInAllLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_item",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInList_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "_item",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInSomeOfLists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isInSomeOfLists_",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "_items",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFromList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_nextOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setListOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "enum UintListRegistry.UpdateType",
              "name": "_nextUpdateType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setListUpdateType"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addToList(uint256,uint256[])": {
            "params": {
              "_id": "The id of the list",
              "_items": "The items to add to the list"
            }
          },
          "areAllInAllLists(uint256[],uint256[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInAllLists_": "True if all items are in all of the lists"
            }
          },
          "areAllInList(uint256,uint256[])": {
            "params": {
              "_id": "The list id",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInList_": "True if all items are in the list"
            }
          },
          "areAllInSomeOfLists(uint256[],uint256[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllInSomeOfLists_": "True if all items are in one of the lists"
            }
          },
          "areAllNotInAnyOfLists(uint256[],uint256[])": {
            "params": {
              "_ids": "The list ids",
              "_items": "The items to check"
            },
            "returns": {
              "areAllNotInAnyOfLists_": "True if all items are absent from all lists"
            }
          },
          "areAllNotInList(uint256,uint256[])": {
            "params": {
              "_id": "The list id",
              "_items": "The items to check"
            },
            "returns": {
              "areAllNotInList_": "True if no items are in the list"
            }
          },
          "attestLists(uint256[],string[])": {
            "details": "Since UserA can create a list on behalf of UserB, this function provides a mechanism for UserB to attest to their management of the items therein. It will not be visible on-chain, but will be available in event logs.",
            "params": {
              "_descriptions": "The descriptions of the lists' content",
              "_ids": "The ids of the lists"
            }
          },
          "createList(address,uint8,uint256[])": {
            "details": "Specify the DISPATCHER as the _owner to make the Enzyme Council the owner",
            "params": {
              "_initialItems": "The initial items to add to the list",
              "_owner": "The owner of the list",
              "_updateType": "The UpdateType for the list"
            },
            "returns": {
              "id_": "The id of the newly-created list"
            }
          },
          "getDispatcher()": {
            "returns": {
              "dispatcher_": "The `DISPATCHER` variable value"
            }
          },
          "getListCount()": {
            "returns": {
              "count_": "The total count"
            }
          },
          "getListOwner(uint256)": {
            "params": {
              "_id": "The list id"
            },
            "returns": {
              "owner_": "The owner"
            }
          },
          "getListUpdateType(uint256)": {
            "params": {
              "_id": "The list id"
            },
            "returns": {
              "updateType_": "The UpdateType"
            }
          },
          "isInAllLists(uint256[],uint256)": {
            "params": {
              "_ids": "The list ids",
              "_item": "The item to check"
            },
            "returns": {
              "isInAllLists_": "True if item is in all of the lists"
            }
          },
          "isInList(uint256,uint256)": {
            "params": {
              "_id": "The list id",
              "_item": "The item to check"
            },
            "returns": {
              "isInList_": "True if the item is in the list"
            }
          },
          "isInSomeOfLists(uint256[],uint256)": {
            "params": {
              "_ids": "The list ids",
              "_item": "The item to check"
            },
            "returns": {
              "isInSomeOfLists_": "True if item is in one of the lists"
            }
          },
          "removeFromList(uint256,uint256[])": {
            "params": {
              "_id": "The id of the list",
              "_items": "The items to remove from the list"
            }
          },
          "setListOwner(uint256,address)": {
            "params": {
              "_id": "The id of the list",
              "_nextOwner": "The owner to set"
            }
          },
          "setListUpdateType(uint256,uint8)": {
            "details": "Can only change to a less mutable option (e.g., both add and remove => add only)",
            "params": {
              "_id": "The id of the list",
              "_nextUpdateType": "The UpdateType to set"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addToList(uint256,uint256[])": {
            "notice": "Adds items to a given list"
          },
          "areAllInAllLists(uint256[],uint256[])": {
            "notice": "Checks if multiple items are all in all of a given set of lists"
          },
          "areAllInList(uint256,uint256[])": {
            "notice": "Checks if multiple items are all in a given list"
          },
          "areAllInSomeOfLists(uint256[],uint256[])": {
            "notice": "Checks if multiple items are all in one of a given set of lists"
          },
          "areAllNotInAnyOfLists(uint256[],uint256[])": {
            "notice": "Checks if multiple items are all absent from all of a given set of lists"
          },
          "areAllNotInList(uint256,uint256[])": {
            "notice": "Checks if multiple items are all absent from a given list"
          },
          "attestLists(uint256[],string[])": {
            "notice": "Attests active ownership for lists and (optionally) a description of each list's content"
          },
          "createList(address,uint8,uint256[])": {
            "notice": "Creates a new list"
          },
          "getDispatcher()": {
            "notice": "Gets the `DISPATCHER` variable"
          },
          "getListCount()": {
            "notice": "Gets the total count of lists"
          },
          "getListOwner(uint256)": {
            "notice": "Gets the owner of a given list"
          },
          "getListUpdateType(uint256)": {
            "notice": "Gets the UpdateType of a given list"
          },
          "isInAllLists(uint256[],uint256)": {
            "notice": "Checks if an item is in all of a given set of lists"
          },
          "isInList(uint256,uint256)": {
            "notice": "Checks if an item is in a given list"
          },
          "isInSomeOfLists(uint256[],uint256)": {
            "notice": "Checks if an item is in at least one of a given set of lists"
          },
          "removeFromList(uint256,uint256[])": {
            "notice": "Removes items from a given list"
          },
          "setListOwner(uint256,address)": {
            "notice": "Sets the owner for a given list"
          },
          "setListUpdateType(uint256,uint8)": {
            "notice": "Sets the UpdateType for a given list"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@enzyme/=contracts/",
        ":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "runs": 200,
        "details": {
          "peephole": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": false
        }
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/persistent/uint-list-registry/UintListRegistry.sol": "UintListRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/persistent/dispatcher/IDispatcher.sol": {
        "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30",
        "urls": [
          "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0",
          "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ"
        ],
        "license": "GPL-3.0"
      },
      "contracts/persistent/uint-list-registry/UintListRegistry.sol": {
        "keccak256": "0x79b8f209651bbeffcb7274a88753a929f022689a9bce9575a53ff03658ee2825",
        "urls": [
          "bzz-raw://a8e334b6b57232ab6dae49e38cf4cbbe376ff9bb8e4f71665a7cca33c2aed99d",
          "dweb:/ipfs/QmNiTw8WyGBjhqAy4JB1dGscKEBxvrpWNJYuPvb3ojxG6y"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "id": 65
}
