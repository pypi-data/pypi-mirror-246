name: Tag on label

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  get-severity:
    name: Get severity
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      SEVERITY: ${{ steps.severity.outputs.SEVERITY }}
    steps:
      - name: Get severity from labels
        id: severity
        run: |
          LABELS="${{ join(github.event.pull_request.labels.*.name, ', ') }}"
          echo "PR Labels: ${LABELS}" >> "${GITHUB_STEP_SUMMARY}"
          for SEVERITY in "major" "minor" "patch"; do
            if [[ "${LABELS}" == *"${SEVERITY}"* ]]; then
              echo "SEVERITY=${SEVERITY}" >> ${GITHUB_OUTPUT}
              echo "Severity: ${SEVERITY}" >> "${GITHUB_STEP_SUMMARY}"
              exit 0
            fi
          done
          echo "Labels do not contain 'major', 'minor', or 'patch'."  >> "${GITHUB_STEP_SUMMARY}"
          exit 1

  tag-on-label:
    name: Tag on label
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: [ get-severity ]
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip-release') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install semver
        run: npm install -g semver
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Git config
        run: |
          git config --global user.email "khrapovs@gmail.com"
          git config --global user.name "khrapovs"
      - name: Apply version bump
        id: version-bump
        env:
          SEVERITY: ${{ needs.get-severity.outputs.SEVERITY }}
        run: |
          OLD_TAG=$(git for-each-ref --sort=creatordate --format "%(refname)" refs/tags | tail -n 1 | cut -d"/" -f3)
          if [[ -z "${OLD_TAG}" ]]; then
            NEW_TAG="0.1.0"
          else
            NEW_TAG=$(semver -i ${SEVERITY} ${OLD_TAG#*/})
          fi
          echo "NEW_TAG=${NEW_TAG}" >> ${GITHUB_OUTPUT}
          echo "Old tag: ${OLD_TAG}. New tag: ${NEW_TAG}." >> "${GITHUB_STEP_SUMMARY}"
          git tag "${NEW_TAG}"
          git push origin "${NEW_TAG}"
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: tags
          message: "- [${{ steps.version-bump.outputs.NEW_TAG }}](https://github.com/khrapovs/OrderBookMatchingEngine/releases/tag/${{ steps.version-bump.outputs.NEW_TAG }})"
          append: true
