{"version":3,"file":"5921.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/factory.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/panel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/tocitem.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/toctree.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/treeview.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/tracker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/utils/common.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc/lib/utils/markdown.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ActivityMonitor, PathExt } from '@jupyterlab/coreutils';\n/**\n * Timeout for throttling ToC rendering following model changes.\n *\n * @private\n */\nconst RENDER_TIMEOUT = 1000;\n/**\n * Abstract table of contents model factory for IDocumentWidget.\n */\nexport class TableOfContentsFactory {\n    /**\n     * Constructor\n     *\n     * @param tracker Widget tracker\n     */\n    constructor(tracker) {\n        this.tracker = tracker;\n    }\n    /**\n     * Whether the factory can handle the widget or not.\n     *\n     * @param widget - widget\n     * @returns boolean indicating a ToC can be generated\n     */\n    isApplicable(widget) {\n        if (!this.tracker.has(widget)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Create a new table of contents model for the widget\n     *\n     * @param widget - widget\n     * @param configuration - Table of contents configuration\n     * @returns The table of contents model\n     */\n    createNew(widget, configuration) {\n        const model = this._createNew(widget, configuration);\n        const context = widget.context;\n        const updateHeadings = () => {\n            model.refresh().catch(reason => {\n                console.error('Failed to update the table of contents.', reason);\n            });\n        };\n        const monitor = new ActivityMonitor({\n            signal: context.model.contentChanged,\n            timeout: RENDER_TIMEOUT\n        });\n        monitor.activityStopped.connect(updateHeadings);\n        const updateTitle = () => {\n            model.title = PathExt.basename(context.localPath);\n        };\n        context.pathChanged.connect(updateTitle);\n        context.ready\n            .then(() => {\n            updateTitle();\n            updateHeadings();\n        })\n            .catch(reason => {\n            console.error(`Failed to initiate headings for ${context.localPath}.`);\n        });\n        widget.disposed.connect(() => {\n            monitor.activityStopped.disconnect(updateHeadings);\n            context.pathChanged.disconnect(updateTitle);\n        });\n        return model;\n    }\n}\n//# sourceMappingURL=factory.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/**\n * Table of contents registry token.\n */\nexport const ITableOfContentsRegistry = new Token('@jupyterlab/toc:ITableOfContentsRegistry', 'A service to register table of content factory.');\n/**\n * Table of contents tracker token.\n */\nexport const ITableOfContentsTracker = new Token('@jupyterlab/toc:ITableOfContentsTracker', 'A widget tracker for table of contents.');\n/**\n * Namespace for table of contents interface\n */\nexport var TableOfContents;\n(function (TableOfContents) {\n    /**\n     * Default table of content configuration\n     */\n    TableOfContents.defaultConfig = {\n        baseNumbering: 1,\n        maximalDepth: 4,\n        numberingH1: true,\n        numberHeaders: false,\n        includeOutput: true,\n        syncCollapseState: false\n    };\n})(TableOfContents || (TableOfContents = {}));\n//# sourceMappingURL=tokens.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel } from '@jupyterlab/ui-components';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { TableOfContents } from './tokens';\n/**\n * Abstract table of contents model.\n */\nexport class TableOfContentsModel extends VDomModel {\n    /**\n     * Constructor\n     *\n     * @param widget The widget to search in\n     * @param configuration Default model configuration\n     */\n    constructor(widget, configuration) {\n        super();\n        this.widget = widget;\n        this._activeHeading = null;\n        this._activeHeadingChanged = new Signal(this);\n        this._collapseChanged = new Signal(this);\n        this._configuration = configuration !== null && configuration !== void 0 ? configuration : { ...TableOfContents.defaultConfig };\n        this._headings = new Array();\n        this._headingsChanged = new Signal(this);\n        this._isActive = false;\n        this._isRefreshing = false;\n        this._needsRefreshing = false;\n    }\n    /**\n     * Current active entry.\n     *\n     * @returns table of contents active entry\n     */\n    get activeHeading() {\n        return this._activeHeading;\n    }\n    /**\n     * Signal emitted when the active heading changes.\n     */\n    get activeHeadingChanged() {\n        return this._activeHeadingChanged;\n    }\n    /**\n     * Signal emitted when a table of content section collapse state changes.\n     */\n    get collapseChanged() {\n        return this._collapseChanged;\n    }\n    /**\n     * Model configuration\n     */\n    get configuration() {\n        return this._configuration;\n    }\n    /**\n     * List of headings.\n     *\n     * @returns table of contents list of headings\n     */\n    get headings() {\n        return this._headings;\n    }\n    /**\n     * Signal emitted when the headings changes.\n     */\n    get headingsChanged() {\n        return this._headingsChanged;\n    }\n    /**\n     * Whether the model is active or not.\n     *\n     * #### Notes\n     * An active model means it is displayed in the table of contents.\n     * This can be used by subclass to limit updating the headings.\n     */\n    get isActive() {\n        return this._isActive;\n    }\n    set isActive(v) {\n        this._isActive = v;\n        // Refresh on activation expect if it is always active\n        //  => a ToC model is always active e.g. when displaying numbering in the document\n        if (this._isActive && !this.isAlwaysActive) {\n            this.refresh().catch(reason => {\n                console.error('Failed to refresh ToC model.', reason);\n            });\n        }\n    }\n    /**\n     * Whether the model gets updated even if the table of contents panel\n     * is hidden or not.\n     *\n     * #### Notes\n     * For example, ToC models use to add title numbering will\n     * set this to true.\n     */\n    get isAlwaysActive() {\n        return false;\n    }\n    /**\n     * List of configuration options supported by the model.\n     */\n    get supportedOptions() {\n        return ['maximalDepth'];\n    }\n    /**\n     * Document title\n     */\n    get title() {\n        return this._title;\n    }\n    set title(v) {\n        if (v !== this._title) {\n            this._title = v;\n            this.stateChanged.emit();\n        }\n    }\n    /**\n     * Refresh the headings list.\n     */\n    async refresh() {\n        if (this._isRefreshing) {\n            // Schedule a refresh if one is in progress\n            this._needsRefreshing = true;\n            return Promise.resolve();\n        }\n        this._isRefreshing = true;\n        try {\n            const newHeadings = await this.getHeadings();\n            if (this._needsRefreshing) {\n                this._needsRefreshing = false;\n                this._isRefreshing = false;\n                return this.refresh();\n            }\n            if (newHeadings &&\n                !Private.areHeadingsEqual(newHeadings, this._headings)) {\n                this._headings = newHeadings;\n                this.stateChanged.emit();\n                this._headingsChanged.emit();\n            }\n        }\n        finally {\n            this._isRefreshing = false;\n        }\n    }\n    /**\n     * Set a new active heading.\n     *\n     * @param heading The new active heading\n     * @param emitSignal Whether to emit the activeHeadingChanged signal or not.\n     */\n    setActiveHeading(heading, emitSignal = true) {\n        if (this._activeHeading !== heading) {\n            this._activeHeading = heading;\n            this.stateChanged.emit();\n            if (emitSignal) {\n                this._activeHeadingChanged.emit(heading);\n            }\n        }\n    }\n    /**\n     * Model configuration setter.\n     *\n     * @param c New configuration\n     */\n    setConfiguration(c) {\n        const newConfiguration = { ...this._configuration, ...c };\n        if (!JSONExt.deepEqual(this._configuration, newConfiguration)) {\n            this._configuration = newConfiguration;\n            this.refresh().catch(reason => {\n                console.error('Failed to update the table of contents.', reason);\n            });\n        }\n    }\n    /**\n     * Callback on heading collapse.\n     *\n     * @param options.heading The heading to change state (all headings if not provided)\n     * @param options.collapsed The new collapsed status (toggle existing status if not provided)\n     */\n    toggleCollapse(options) {\n        var _a, _b;\n        if (options.heading) {\n            options.heading.collapsed =\n                (_a = options.collapsed) !== null && _a !== void 0 ? _a : !options.heading.collapsed;\n            this.stateChanged.emit();\n            this._collapseChanged.emit(options.heading);\n        }\n        else {\n            // Use the provided state or collapsed all except if all are collapsed\n            const newState = (_b = options.collapsed) !== null && _b !== void 0 ? _b : !this.headings.some(h => { var _a; return !((_a = h.collapsed) !== null && _a !== void 0 ? _a : false); });\n            this.headings.forEach(h => (h.collapsed = newState));\n            this.stateChanged.emit();\n            this._collapseChanged.emit(null);\n        }\n    }\n}\n/**\n * Private functions namespace\n */\nvar Private;\n(function (Private) {\n    /**\n     * Test if two list of headings are equal or not.\n     *\n     * @param headings1 First list of headings\n     * @param headings2 Second list of headings\n     * @returns Whether the array are identical or not.\n     */\n    function areHeadingsEqual(headings1, headings2) {\n        if (headings1.length === headings2.length) {\n            for (let i = 0; i < headings1.length; i++) {\n                if (headings1[i].level !== headings2[i].level ||\n                    headings1[i].text !== headings2[i].text ||\n                    headings1[i].prefix !== headings2[i].prefix) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    Private.areHeadingsEqual = areHeadingsEqual;\n})(Private || (Private = {}));\n//# sourceMappingURL=model.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { SidePanel } from '@jupyterlab/ui-components';\nimport { Panel, Widget } from '@lumino/widgets';\nimport { TableOfContentsWidget } from './treeview';\n/**\n * Table of contents sidebar panel.\n */\nexport class TableOfContentsPanel extends SidePanel {\n    /**\n     * Constructor\n     *\n     * @param translator - Translator tool\n     */\n    constructor(translator) {\n        super({ content: new Panel(), translator });\n        this._model = null;\n        this.addClass('jp-TableOfContents');\n        this._title = new Private.Header(this._trans.__('Table of Contents'));\n        this.header.addWidget(this._title);\n        this._treeview = new TableOfContentsWidget({\n            placeholderHeadline: this._trans.__('No Headings'),\n            placeholderText: this._trans.__('The table of contents shows headings in notebooks and supported files.')\n        });\n        this._treeview.addClass('jp-TableOfContents-tree');\n        this.content.addWidget(this._treeview);\n    }\n    /**\n     * Get the current model.\n     */\n    get model() {\n        return this._model;\n    }\n    set model(newValue) {\n        var _a, _b;\n        if (this._model !== newValue) {\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.stateChanged.disconnect(this._onTitleChanged, this);\n            this._model = newValue;\n            if (this._model) {\n                this._model.isActive = this.isVisible;\n            }\n            (_b = this._model) === null || _b === void 0 ? void 0 : _b.stateChanged.connect(this._onTitleChanged, this);\n            this._onTitleChanged();\n            this._treeview.model = this._model;\n        }\n    }\n    onAfterHide(msg) {\n        super.onAfterHide(msg);\n        if (this._model) {\n            this._model.isActive = false;\n        }\n    }\n    onBeforeShow(msg) {\n        super.onBeforeShow(msg);\n        if (this._model) {\n            this._model.isActive = true;\n        }\n    }\n    _onTitleChanged() {\n        var _a, _b;\n        this._title.setTitle((_b = (_a = this._model) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : this._trans.__('Table of Contents'));\n    }\n}\n/**\n * Private helpers namespace\n */\nvar Private;\n(function (Private) {\n    /**\n     * Panel header\n     */\n    class Header extends Widget {\n        /**\n         * Constructor\n         *\n         * @param title - Title text\n         */\n        constructor(title) {\n            const node = document.createElement('h2');\n            node.textContent = title;\n            node.classList.add('jp-text-truncated');\n            super({ node });\n            this._title = node;\n        }\n        /**\n         * Set the header title.\n         */\n        setTitle(title) {\n            this._title.textContent = title;\n        }\n    }\n    Private.Header = Header;\n})(Private || (Private = {}));\n//# sourceMappingURL=panel.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { caretDownIcon, caretRightIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\n/**\n * React component for a table of contents entry.\n */\nexport class TableOfContentsItem extends React.PureComponent {\n    /**\n     * Renders a table of contents entry.\n     *\n     * @returns rendered entry\n     */\n    render() {\n        const { children, isActive, heading, onCollapse, onMouseDown } = this.props;\n        return (React.createElement(\"li\", { className: \"jp-tocItem\" },\n            React.createElement(\"div\", { className: `jp-tocItem-heading ${isActive ? 'jp-tocItem-active' : ''}`, onMouseDown: (event) => {\n                    // React only on deepest item\n                    if (!event.defaultPrevented) {\n                        event.preventDefault();\n                        onMouseDown(heading);\n                    }\n                } },\n                React.createElement(\"button\", { className: \"jp-tocItem-collapser\", onClick: (event) => {\n                        event.preventDefault();\n                        onCollapse(heading);\n                    }, style: { visibility: children ? 'visible' : 'hidden' } }, heading.collapsed ? (React.createElement(caretRightIcon.react, { tag: \"span\", width: \"20px\" })) : (React.createElement(caretDownIcon.react, { tag: \"span\", width: \"20px\" }))),\n                React.createElement(\"span\", { className: \"jp-tocItem-content\", title: heading.text, ...heading.dataset },\n                    heading.prefix,\n                    heading.text)),\n            children && !heading.collapsed && React.createElement(\"ol\", null, children)));\n    }\n}\n//# sourceMappingURL=tocitem.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\nimport { TableOfContentsItem } from './tocitem';\n/**\n * React component for a table of contents tree.\n */\nexport class TableOfContentsTree extends React.PureComponent {\n    /**\n     * Renders a table of contents tree.\n     */\n    render() {\n        const { documentType } = this.props;\n        return (React.createElement(\"ol\", { className: \"jp-TableOfContents-content\", ...{ 'data-document-type': documentType } }, this.buildTree()));\n    }\n    /**\n     * Convert the flat headings list to a nested tree list\n     */\n    buildTree() {\n        if (this.props.headings.length === 0) {\n            return [];\n        }\n        let globalIndex = 0;\n        const getChildren = (items, level) => {\n            const nested = new Array();\n            while (globalIndex < items.length) {\n                const current = items[globalIndex];\n                if (current.level >= level) {\n                    globalIndex += 1;\n                    const next = items[globalIndex];\n                    nested.push(React.createElement(TableOfContentsItem, { key: `${current.level}-${globalIndex}-${current.text}`, isActive: !!this.props.activeHeading &&\n                            current === this.props.activeHeading, heading: current, onMouseDown: this.props.setActiveHeading, onCollapse: this.props.onCollapseChange }, next && next.level > level && getChildren(items, level + 1)));\n                }\n                else {\n                    break;\n                }\n            }\n            return nested;\n        };\n        return getChildren(this.props.headings, this.props.headings[0].level);\n    }\n}\n//# sourceMappingURL=toctree.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomRenderer } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { TableOfContentsTree } from './toctree';\n/**\n * Table of contents widget.\n */\nexport class TableOfContentsWidget extends VDomRenderer {\n    /**\n     * Constructor\n     *\n     * @param options Widget options\n     */\n    constructor(options) {\n        super(options.model);\n        this._placeholderHeadline = options.placeholderHeadline;\n        this._placeholderText = options.placeholderText;\n    }\n    /**\n     * Render the content of this widget using the virtual DOM.\n     *\n     * This method will be called anytime the widget needs to be rendered, which\n     * includes layout triggered rendering.\n     */\n    render() {\n        if (!this.model || this.model.headings.length === 0) {\n            return (React.createElement(\"div\", { className: \"jp-TableOfContents-placeholder\" },\n                React.createElement(\"div\", { className: \"jp-TableOfContents-placeholderContent\" },\n                    React.createElement(\"h3\", null, this._placeholderHeadline),\n                    React.createElement(\"p\", null, this._placeholderText))));\n        }\n        return (React.createElement(TableOfContentsTree, { activeHeading: this.model.activeHeading, documentType: this.model.documentType, headings: this.model.headings, onCollapseChange: (heading) => {\n                this.model.toggleCollapse({ heading });\n            }, setActiveHeading: (heading) => {\n                this.model.setActiveHeading(heading);\n            } }));\n    }\n}\n//# sourceMappingURL=treeview.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { DisposableDelegate } from '@lumino/disposable';\n/**\n * Class for registering table of contents generators.\n */\nexport class TableOfContentsRegistry {\n    constructor() {\n        this._generators = new Map();\n        this._idCounter = 0;\n    }\n    /**\n     * Finds a table of contents model for a widget.\n     *\n     * ## Notes\n     *\n     * -   If unable to find a table of contents model, the method return `undefined`.\n     *\n     * @param widget - widget\n     * @param configuration - Default model configuration\n     * @returns Table of contents model\n     */\n    getModel(widget, configuration) {\n        for (const generator of this._generators.values()) {\n            if (generator.isApplicable(widget)) {\n                return generator.createNew(widget, configuration);\n            }\n        }\n    }\n    /**\n     * Adds a table of contents generator to the registry.\n     *\n     * @param generator - table of contents generator\n     */\n    add(generator) {\n        const id = this._idCounter++;\n        this._generators.set(id, generator);\n        return new DisposableDelegate(() => {\n            this._generators.delete(id);\n        });\n    }\n}\n//# sourceMappingURL=registry.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Table of contents tracker\n */\nexport class TableOfContentsTracker {\n    /**\n     * Constructor\n     */\n    constructor() {\n        this.modelMapping = new WeakMap();\n    }\n    /**\n     * Track a given model.\n     *\n     * @param widget Widget\n     * @param model Table of contents model\n     */\n    add(widget, model) {\n        this.modelMapping.set(widget, model);\n    }\n    /**\n     * Get the table of contents model associated with a given widget.\n     *\n     * @param widget Widget\n     * @returns The table of contents model\n     */\n    get(widget) {\n        const model = this.modelMapping.get(widget);\n        return !model || model.isDisposed ? null : model;\n    }\n}\n//# sourceMappingURL=tracker.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { TableOfContents } from '../tokens';\n/**\n * Class used to mark numbering prefix for headings in a document.\n */\nexport const NUMBERING_CLASS = 'numbering-entry';\n/**\n * Filter headings for table of contents and compute associated prefix\n *\n * @param headings Headings to process\n * @param options Options\n * @param initialLevels Initial levels for prefix computation\n * @returns Extracted headings\n */\nexport function filterHeadings(headings, options, initialLevels = []) {\n    const config = {\n        ...TableOfContents.defaultConfig,\n        ...options\n    };\n    const levels = initialLevels;\n    let previousLevel = levels.length;\n    const filteredHeadings = new Array();\n    for (const heading of headings) {\n        if (heading.skip) {\n            continue;\n        }\n        const level = heading.level;\n        if (level > 0 && level <= config.maximalDepth) {\n            const prefix = getPrefix(level, previousLevel, levels, config);\n            previousLevel = level;\n            filteredHeadings.push({\n                ...heading,\n                prefix\n            });\n        }\n    }\n    return filteredHeadings;\n}\n/**\n * Returns whether a MIME type corresponds to either HTML.\n *\n * @param mime - MIME type string\n * @returns boolean indicating whether a provided MIME type corresponds to either HTML\n *\n * @example\n * const bool = isHTML('text/html');\n * // returns true\n *\n * @example\n * const bool = isHTML('text/plain');\n * // returns false\n */\nexport function isHTML(mime) {\n    return mime === 'text/html';\n}\n/**\n * Parse a HTML string for headings.\n *\n * ### Notes\n * The html string is not sanitized - use with caution\n *\n * @param html HTML string to parse\n * @param force Whether to ignore HTML headings with class jp-toc-ignore and tocSkip or not\n * @returns Extracted headings\n */\nexport function getHTMLHeadings(html, force = true) {\n    var _a;\n    const container = document.createElement('div');\n    container.innerHTML = html;\n    const headings = new Array();\n    const headers = container.querySelectorAll('h1, h2, h3, h4, h5, h6');\n    for (const h of headers) {\n        const level = parseInt(h.tagName[1], 10);\n        headings.push({\n            text: (_a = h.textContent) !== null && _a !== void 0 ? _a : '',\n            level,\n            id: h === null || h === void 0 ? void 0 : h.getAttribute('id'),\n            skip: h.classList.contains('jp-toc-ignore') || h.classList.contains('tocSkip')\n        });\n    }\n    return headings;\n}\n/**\n * Add an heading prefix to a HTML node.\n *\n * @param container HTML node containing the heading\n * @param selector Heading selector\n * @param prefix Title prefix to add\n * @returns The modified HTML element\n */\nexport function addPrefix(container, selector, prefix) {\n    let element = container.querySelector(selector);\n    if (!element) {\n        return null;\n    }\n    if (!element.querySelector(`span.${NUMBERING_CLASS}`)) {\n        addNumbering(element, prefix);\n    }\n    else {\n        // There are likely multiple elements with the same selector\n        //  => use the first one without prefix\n        const allElements = container.querySelectorAll(selector);\n        for (const el of allElements) {\n            if (!el.querySelector(`span.${NUMBERING_CLASS}`)) {\n                element = el;\n                addNumbering(el, prefix);\n                break;\n            }\n        }\n    }\n    return element;\n}\n/**\n * Update the levels and create the numbering prefix\n *\n * @param level Current level\n * @param previousLevel Previous level\n * @param levels Levels list\n * @param options Options\n * @returns The numbering prefix\n */\nexport function getPrefix(level, previousLevel, levels, options) {\n    const { baseNumbering, numberingH1, numberHeaders } = options;\n    let prefix = '';\n    if (numberHeaders) {\n        const highestLevel = numberingH1 ? 1 : 2;\n        if (level > previousLevel) {\n            // Initialize the new levels\n            for (let l = previousLevel; l < level - 1; l++) {\n                levels[l] = 0;\n            }\n            levels[level - 1] = level === highestLevel ? baseNumbering : 1;\n        }\n        else {\n            // Increment the current level\n            levels[level - 1] += 1;\n            // Drop higher levels\n            if (level < previousLevel) {\n                levels.splice(level);\n            }\n        }\n        // If the header list skips some level, replace missing elements by 0\n        if (numberingH1) {\n            prefix = levels.map(level => level !== null && level !== void 0 ? level : 0).join('.') + '. ';\n        }\n        else {\n            if (levels.length > 1) {\n                prefix =\n                    levels\n                        .slice(1)\n                        .map(level => level !== null && level !== void 0 ? level : 0)\n                        .join('.') + '. ';\n            }\n        }\n    }\n    return prefix;\n}\n/**\n * Add a numbering prefix to a HTML element.\n *\n * @param el HTML element\n * @param numbering Numbering prefix to add\n */\nfunction addNumbering(el, numbering) {\n    el.insertAdjacentHTML('afterbegin', `<span class=\"${NUMBERING_CLASS}\">${numbering}</span>`);\n}\n/**\n * Remove all numbering nodes from element\n * @param element Node to clear\n */\nexport function clearNumbering(element) {\n    element === null || element === void 0 ? void 0 : element.querySelectorAll(`span.${NUMBERING_CLASS}`).forEach(el => {\n        el.remove();\n    });\n}\n//# sourceMappingURL=common.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { renderMarkdown } from '@jupyterlab/rendermime';\n/**\n * Build the heading html id.\n *\n * @param raw Raw markdown heading\n * @param level Heading level\n */\nexport async function getHeadingId(parser, raw, level) {\n    try {\n        const innerHTML = await parser.render(raw);\n        if (!innerHTML) {\n            return null;\n        }\n        const container = document.createElement('div');\n        container.innerHTML = innerHTML;\n        const header = container.querySelector(`h${level}`);\n        if (!header) {\n            return null;\n        }\n        return renderMarkdown.createHeaderId(header);\n    }\n    catch (reason) {\n        console.error('Failed to parse a heading.', reason);\n    }\n    return null;\n}\n/**\n * Parses the provided string and returns a list of headings.\n *\n * @param text - Input text\n * @returns List of headings\n */\nexport function getHeadings(text) {\n    // Split the text into lines:\n    const lines = text.split('\\n');\n    // Iterate over the lines to get the header level and text for each line:\n    const headings = new Array();\n    let isCodeBlock;\n    let lineIdx = 0;\n    // Don't check for Markdown headings if in a YAML frontmatter block.\n    // We can only start a frontmatter block on the first line of the file.\n    // At other positions in a markdown file, '---' represents a horizontal rule.\n    if (lines[lineIdx] === '---') {\n        // Search for another '---' and treat that as the end of the frontmatter.\n        // If we don't find one, treat the file as containing no frontmatter.\n        for (let frontmatterEndLineIdx = lineIdx + 1; frontmatterEndLineIdx < lines.length; frontmatterEndLineIdx++) {\n            if (lines[frontmatterEndLineIdx] === '---') {\n                lineIdx = frontmatterEndLineIdx + 1;\n                break;\n            }\n        }\n    }\n    for (; lineIdx < lines.length; lineIdx++) {\n        const line = lines[lineIdx];\n        if (line === '') {\n            // Bail early\n            continue;\n        }\n        // Don't check for Markdown headings if in a code block\n        if (line.startsWith('```')) {\n            isCodeBlock = !isCodeBlock;\n        }\n        if (isCodeBlock) {\n            continue;\n        }\n        const heading = parseHeading(line, lines[lineIdx + 1]); // append the next line to capture alternative style Markdown headings\n        if (heading) {\n            headings.push({\n                ...heading,\n                line: lineIdx\n            });\n        }\n    }\n    return headings;\n}\nconst MARKDOWN_MIME_TYPE = [\n    'text/x-ipythongfm',\n    'text/x-markdown',\n    'text/x-gfm',\n    'text/markdown'\n];\n/**\n * Returns whether a MIME type corresponds to a Markdown flavor.\n *\n * @param mime - MIME type string\n * @returns boolean indicating whether a provided MIME type corresponds to a Markdown flavor\n *\n * @example\n * const bool = isMarkdown('text/markdown');\n * // returns true\n *\n * @example\n * const bool = isMarkdown('text/plain');\n * // returns false\n */\nexport function isMarkdown(mime) {\n    return MARKDOWN_MIME_TYPE.includes(mime);\n}\n/**\n * Parses a heading, if one exists, from a provided string.\n *\n * ## Notes\n *\n * -   Heading examples:\n *\n *     -   Markdown heading:\n *\n *         ```\n *         # Foo\n *         ```\n *\n *     -   Markdown heading (alternative style):\n *\n *         ```\n *         Foo\n *         ===\n *         ```\n *\n *         ```\n *         Foo\n *         ---\n *         ```\n *\n *     -   HTML heading:\n *\n *         ```\n *         <h3>Foo</h3>\n *         ```\n *\n * @private\n * @param line - Line to parse\n * @param nextLine - The line after the one to parse\n * @returns heading info\n *\n * @example\n * const out = parseHeading('### Foo\\n');\n * // returns {'text': 'Foo', 'level': 3}\n *\n * @example\n * const out = parseHeading('Foo\\n===\\n');\n * // returns {'text': 'Foo', 'level': 1}\n *\n * @example\n * const out = parseHeading('<h4>Foo</h4>\\n');\n * // returns {'text': 'Foo', 'level': 4}\n *\n * @example\n * const out = parseHeading('Foo');\n * // returns null\n */\nfunction parseHeading(line, nextLine) {\n    // Case: Markdown heading\n    let match = line.match(/^([#]{1,6}) (.*)/);\n    if (match) {\n        return {\n            text: cleanTitle(match[2]),\n            level: match[1].length,\n            raw: line,\n            skip: skipHeading.test(match[0])\n        };\n    }\n    // Case: Markdown heading (alternative style)\n    if (nextLine) {\n        match = nextLine.match(/^ {0,3}([=]{2,}|[-]{2,})\\s*$/);\n        if (match) {\n            return {\n                text: cleanTitle(line),\n                level: match[1][0] === '=' ? 1 : 2,\n                raw: [line, nextLine].join('\\n'),\n                skip: skipHeading.test(line)\n            };\n        }\n    }\n    // Case: HTML heading (WARNING: this is not particularly robust, as HTML headings can span multiple lines)\n    match = line.match(/<h([1-6]).*>(.*)<\\/h\\1>/i);\n    if (match) {\n        return {\n            text: match[2],\n            level: parseInt(match[1], 10),\n            skip: skipHeading.test(match[0]),\n            raw: line\n        };\n    }\n    return null;\n}\nfunction cleanTitle(heading) {\n    // take special care to parse Markdown links into raw text\n    return heading.replace(/\\[(.+)\\]\\(.+\\)/g, '$1');\n}\n/**\n * Ignore title with html tag with a class name equal to `jp-toc-ignore` or `tocSkip`\n */\nconst skipHeading = /<\\w+\\s(.*?\\s)?class=\"(.*?\\s)?(jp-toc-ignore|tocSkip)(\\s.*?)?\"(\\s.*?)?>/;\n//# sourceMappingURL=markdown.js.map"],"names":["TableOfContentsFactory","constructor","tracker","this","isApplicable","widget","has","createNew","configuration","model","_createNew","context","updateHeadings","refresh","catch","reason","console","error","monitor","ActivityMonitor","signal","contentChanged","timeout","activityStopped","connect","updateTitle","title","PathExt","basename","localPath","pathChanged","ready","then","disposed","disconnect","ITableOfContentsRegistry","Token","ITableOfContentsTracker","TableOfContents","Private","defaultConfig","baseNumbering","maximalDepth","numberingH1","numberHeaders","includeOutput","syncCollapseState","TableOfContentsModel","VDomModel","super","_activeHeading","_activeHeadingChanged","Signal","_collapseChanged","_configuration","_headings","Array","_headingsChanged","_isActive","_isRefreshing","_needsRefreshing","activeHeading","activeHeadingChanged","collapseChanged","headings","headingsChanged","isActive","v","isAlwaysActive","supportedOptions","_title","stateChanged","emit","Promise","resolve","newHeadings","getHeadings","areHeadingsEqual","setActiveHeading","heading","emitSignal","setConfiguration","c","newConfiguration","JSONExt","deepEqual","toggleCollapse","options","_a","_b","collapsed","newState","some","h","forEach","headings1","headings2","length","i","level","text","prefix","TableOfContentsItem","render","children","onCollapse","onMouseDown","props","className","event","defaultPrevented","preventDefault","onClick","style","visibility","caretRightIcon","react","tag","width","caretDownIcon","dataset","TableOfContentsTree","documentType","buildTree","globalIndex","getChildren","items","nested","current","next","push","key","onCollapseChange","TableOfContentsWidget","VDomRenderer","_placeholderHeadline","placeholderHeadline","_placeholderText","placeholderText","TableOfContentsPanel","SidePanel","translator","content","Panel","_model","addClass","Header","_trans","__","header","addWidget","_treeview","newValue","_onTitleChanged","isVisible","onAfterHide","msg","onBeforeShow","setTitle","Widget","node","document","createElement","textContent","classList","add","TableOfContentsRegistry","_generators","Map","_idCounter","getModel","generator","values","id","set","DisposableDelegate","delete","TableOfContentsTracker","modelMapping","WeakMap","get","isDisposed","NUMBERING_CLASS","filterHeadings","initialLevels","config","levels","previousLevel","filteredHeadings","skip","getPrefix","isHTML","mime","getHTMLHeadings","html","force","container","innerHTML","headers","querySelectorAll","parseInt","tagName","getAttribute","contains","addPrefix","selector","element","querySelector","allElements","el","addNumbering","highestLevel","l","splice","map","join","slice","numbering","insertAdjacentHTML","clearNumbering","remove","async","getHeadingId","parser","raw","renderMarkdown","createHeaderId","lines","split","isCodeBlock","lineIdx","frontmatterEndLineIdx","line","startsWith","parseHeading","MARKDOWN_MIME_TYPE","isMarkdown","includes","nextLine","match","cleanTitle","skipHeading","test","replace"],"sourceRoot":""}