{"version":3,"file":"690.bundle.js","mappings":"oRAcA,MAIaA,EAAY,mBAIlB,MAAMC,UAAqB,EAAAC,OAI9B,WAAAC,CAAYC,GACRC,QACAC,KAAKC,SAAW,KAChBD,KAAKE,SAfK,mBAgBVF,KAAKE,SAAS,cACdF,KAAKG,UAAYL,EAAQM,SACzBJ,KAAKK,WAAaP,EAAQO,YAAc,EAAAC,cAC5C,CACA,CAAC,EAAAC,SAASC,UACN,MAAO,IAAM,EAAAD,SAASE,YAAYT,KACtC,CAIA,iBAAMU,CAAYC,GACd,MAAM,UAAEC,SAAoB,gGACtBC,EAAQF,EAAME,KAAKb,KAAKG,YAAc,CAAC,EACvCW,EAAYH,EAAMG,SAASd,KAAKG,YAAc,CAAC,EAIrD,OAHsB,OAAlBH,KAAKC,WACLD,KAAKC,UAAW,OAAWD,KAAKe,OAE7B,IAAIC,SAAQ,CAACC,EAASC,KACzBlB,KAAKC,SAASkB,OAAO,gBAAoBP,EAAW,CAAEC,KAAMA,EAAMC,SAAUA,EAAUT,WAAYL,KAAKK,WAAYe,aAAc,IAAMH,MAAa,GAE5J,CAIA,cAAAI,CAAeC,GAEPtB,KAAKC,WACLD,KAAKC,SAASsB,UACdvB,KAAKC,SAAW,KAExB,EAKG,MAAMuB,EAAkB,CAC3BC,MAAM,EACNC,UAAW,CAAChC,GACZiC,eAAgB7B,GAAW,IAAIH,EAAaG,IAkBhD,EAhBmB,CACf,CACI8B,GAAI,qCACJC,YAAa,kCACbL,kBACAM,KAAM,EACNC,SAAU,OACVC,6BAA8B,CAC1BC,KAAM,OAENC,gBAAiB,OACjBC,UAAW,CAAC,OAAQ,WAAY,WAChCC,WAAY,CAAC,U,sBChFrBC,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAEE,WACDF,EAAEG,W","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/json-extension/lib/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/react-dom/client.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module json-extension\n */\nimport { Printing } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { Widget } from '@lumino/widgets';\nimport * as React from 'react';\nimport { createRoot } from 'react-dom/client';\n/**\n * The CSS class to add to the JSON Widget.\n */\nconst CSS_CLASS = 'jp-RenderedJSON';\n/**\n * The MIME type for JSON.\n */\nexport const MIME_TYPE = 'application/json';\n/**\n * A renderer for JSON data.\n */\nexport class RenderedJSON extends Widget {\n    /**\n     * Create a new widget for rendering JSON.\n     */\n    constructor(options) {\n        super();\n        this._rootDOM = null;\n        this.addClass(CSS_CLASS);\n        this.addClass('CodeMirror');\n        this._mimeType = options.mimeType;\n        this.translator = options.translator || nullTranslator;\n    }\n    [Printing.symbol]() {\n        return () => Printing.printWidget(this);\n    }\n    /**\n     * Render JSON into this widget's node.\n     */\n    async renderModel(model) {\n        const { Component } = await import('./component');\n        const data = (model.data[this._mimeType] || {});\n        const metadata = (model.metadata[this._mimeType] || {});\n        if (this._rootDOM === null) {\n            this._rootDOM = createRoot(this.node);\n        }\n        return new Promise((resolve, reject) => {\n            this._rootDOM.render(React.createElement(Component, { data: data, metadata: metadata, translator: this.translator, forwardedRef: () => resolve() }));\n        });\n    }\n    /**\n     * Called before the widget is detached from the DOM.\n     */\n    onBeforeDetach(msg) {\n        // Unmount the component so it can tear down.\n        if (this._rootDOM) {\n            this._rootDOM.unmount();\n            this._rootDOM = null;\n        }\n    }\n}\n/**\n * A mime renderer factory for JSON data.\n */\nexport const rendererFactory = {\n    safe: true,\n    mimeTypes: [MIME_TYPE],\n    createRenderer: options => new RenderedJSON(options)\n};\nconst extensions = [\n    {\n        id: '@jupyterlab/json-extension:factory',\n        description: 'Adds renderer for JSON content.',\n        rendererFactory,\n        rank: 0,\n        dataType: 'json',\n        documentWidgetFactoryOptions: {\n            name: 'JSON',\n            // TODO: how to translate label of the factory?\n            primaryFileType: 'json',\n            fileTypes: ['json', 'notebook', 'geojson'],\n            defaultFor: ['json']\n        }\n    }\n];\nexport default extensions;\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["MIME_TYPE","RenderedJSON","Widget","constructor","options","super","this","_rootDOM","addClass","_mimeType","mimeType","translator","nullTranslator","Printing","symbol","printWidget","renderModel","model","Component","data","metadata","node","Promise","resolve","reject","render","forwardedRef","onBeforeDetach","msg","unmount","rendererFactory","safe","mimeTypes","createRenderer","id","description","rank","dataType","documentWidgetFactoryOptions","name","primaryFileType","fileTypes","defaultFor","m","exports","createRoot","hydrateRoot"],"sourceRoot":""}