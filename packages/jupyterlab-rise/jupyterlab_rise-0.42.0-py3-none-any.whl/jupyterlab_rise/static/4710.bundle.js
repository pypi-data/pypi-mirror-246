"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[4710],{24710:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var a,r=t(53745),i=t(99079),d=t(52289),l=t(43132);!function(e){e.handleLink="rendermime:handle-local-link"}(a||(a={}));const o={id:"@jupyterlab/rendermime-extension:plugin",description:"Provides the render mime registry.",optional:[i.IDocumentManager,d.ILatexTypesetter,r.ISanitizer,d.IMarkdownParser,l.ITranslator],provides:d.IRenderMimeRegistry,activate:function(e,n,t,r,i,o){const s=(null!=o?o:l.nullTranslator).load("jupyterlab");return n&&e.commands.addCommand(a.handleLink,{label:s.__("Handle Local Link"),execute:e=>{const t=e.path,a=e.id;if(t)return n.services.contents.get(t,{content:!1}).then((()=>{const e=n.registry.defaultRenderedWidgetFactory(t),r=n.openOrReveal(t,e.name);r&&a&&r.setFragment(a)}))}}),new d.RenderMimeRegistry({initialFactories:d.standardRendererFactories,linkHandler:n?{handleLink:(n,t,r)=>{"A"===n.tagName&&n.hasAttribute("download")||e.commandLinker.connectNode(n,a.handleLink,{path:t,id:r})}}:void 0,latexTypesetter:null!=t?t:void 0,markdownParser:null!=i?i:void 0,translator:null!=o?o:void 0,sanitizer:null!=r?r:void 0})},autoStart:!0}}}]);
//# sourceMappingURL=4710.js.map