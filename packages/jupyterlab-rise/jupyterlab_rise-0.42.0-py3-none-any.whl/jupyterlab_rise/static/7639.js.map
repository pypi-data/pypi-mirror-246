{"version":3,"file":"7639.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/group.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/hover.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/components/progressCircle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/statusbar/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(props) {\n    const { spacing, children, className, ...rest } = props;\n    const numChildren = React.Children.count(children);\n    return (React.createElement(\"div\", { className: `jp-StatusBar-GroupItem ${className || ''}`, ...rest }, React.Children.map(children, (child, i) => {\n        if (i === 0) {\n            return React.createElement(\"div\", { style: { marginRight: `${spacing}px` } }, child);\n        }\n        else if (i === numChildren - 1) {\n            return React.createElement(\"div\", { style: { marginLeft: `${spacing}px` } }, child);\n        }\n        else {\n            return React.createElement(\"div\", { style: { margin: `0px ${spacing}px` } }, child);\n        }\n    })));\n}\n//# sourceMappingURL=group.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { HoverBox } from '@jupyterlab/ui-components';\nimport { PanelLayout, Widget } from '@lumino/widgets';\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options) {\n    const dialog = new Popup(options);\n    if (!options.startHidden) {\n        dialog.launch();\n    }\n    return dialog;\n}\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n    /**\n     * Construct a new Popup.\n     */\n    constructor(options) {\n        super();\n        this._body = options.body;\n        this._body.addClass('jp-StatusBar-HoverItem');\n        this._anchor = options.anchor;\n        this._align = options.align;\n        if (options.hasDynamicSize) {\n            this._observer = new ResizeObserver(() => {\n                this.update();\n            });\n        }\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(options.body);\n        this._body.node.addEventListener('resize', () => {\n            this.update();\n        });\n    }\n    /**\n     * Attach the popup widget to the page.\n     */\n    launch() {\n        this._setGeometry();\n        Widget.attach(this, document.body);\n        this.update();\n        this._anchor.addClass('jp-mod-clicked');\n        this._anchor.removeClass('jp-mod-highlight');\n    }\n    /**\n     * Handle `'update'` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        this._setGeometry();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Handle `'after-attach'` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        var _a;\n        document.addEventListener('click', this, false);\n        this.node.addEventListener('keydown', this, false);\n        window.addEventListener('resize', this, false);\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.observe(this._body.node);\n    }\n    /**\n     * Handle `'before-detach'` messages for the widget.\n     */\n    onBeforeDetach(msg) {\n        var _a;\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n        document.removeEventListener('click', this, false);\n        this.node.removeEventListener('keydown', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'resize'` messages for the widget.\n     */\n    onResize() {\n        this.update();\n    }\n    /**\n     * Dispose of the widget.\n     */\n    dispose() {\n        var _a;\n        (_a = this._observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n        super.dispose();\n        this._anchor.removeClass('jp-mod-clicked');\n        this._anchor.addClass('jp-mod-highlight');\n    }\n    /**\n     * Handle DOM events for the widget.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'resize':\n                this.onResize();\n                break;\n            default:\n                break;\n        }\n    }\n    _evtClick(event) {\n        if (!!event.target &&\n            !(this._body.node.contains(event.target) ||\n                this._anchor.node.contains(event.target))) {\n            this.dispose();\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.keyCode) {\n            case 27: // Escape.\n                event.stopPropagation();\n                event.preventDefault();\n                this.dispose();\n                break;\n            default:\n                break;\n        }\n    }\n    _setGeometry() {\n        let aligned = 0;\n        const anchorRect = this._anchor.node.getBoundingClientRect();\n        const bodyRect = this._body.node.getBoundingClientRect();\n        if (this._align === 'right') {\n            aligned = -(bodyRect.width - anchorRect.width);\n        }\n        const style = window.getComputedStyle(this._body.node);\n        HoverBox.setGeometry({\n            anchor: anchorRect,\n            host: document.body,\n            maxHeight: 500,\n            minHeight: 20,\n            node: this._body.node,\n            offset: {\n                horizontal: aligned\n            },\n            privilege: 'forceAbove',\n            style\n        });\n    }\n}\n//# sourceMappingURL=hover.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props) {\n    const { width, percentage, ...rest } = props;\n    return (React.createElement(\"div\", { className: 'jp-Statusbar-ProgressBar-progress-bar', role: \"progressbar\", \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-valuenow\": percentage },\n        React.createElement(Filler, { ...{ percentage, ...rest }, contentWidth: width })));\n}\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props) {\n    return (React.createElement(\"div\", { style: {\n            width: `${props.percentage}%`\n        } },\n        React.createElement(\"p\", null, props.content)));\n}\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(props) {\n    const { title, source, className, ...rest } = props;\n    return (React.createElement(\"span\", { className: `jp-StatusBar-TextItem ${className}`, title: title, ...rest }, source));\n}\n//# sourceMappingURL=text.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport React from 'react';\nexport function ProgressCircle(props) {\n    const radius = 104;\n    const d = (progress) => {\n        const angle = Math.max(progress * 3.6, 0.1);\n        const rad = (angle * Math.PI) / 180, x = Math.sin(rad) * radius, y = Math.cos(rad) * -radius, mid = angle < 180 ? 1 : 0, shape = `M 0 0 v -${radius} A ${radius} ${radius} 1 ` +\n            mid +\n            ' 0 ' +\n            x.toFixed(4) +\n            ' ' +\n            y.toFixed(4) +\n            ' z';\n        return shape;\n    };\n    return (React.createElement(\"div\", { className: 'jp-Statusbar-ProgressCircle', role: \"progressbar\", \"aria-label\": props.label || 'Unlabelled progress circle', \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-valuenow\": props.progress },\n        React.createElement(\"svg\", { viewBox: \"0 0 250 250\" },\n            React.createElement(\"circle\", { cx: \"125\", cy: \"125\", r: `${radius}`, stroke: \"var(--jp-inverse-layout-color3)\", strokeWidth: \"20\", fill: \"none\" }),\n            React.createElement(\"path\", { transform: \"translate(125,125) scale(.9)\", d: d(props.progress), fill: 'var(--jp-inverse-layout-color3)' }))));\n}\n//# sourceMappingURL=progressCircle.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate, DisposableSet } from '@lumino/disposable';\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget {\n    constructor() {\n        super();\n        this._leftRankItems = [];\n        this._rightRankItems = [];\n        this._statusItems = {};\n        this._disposables = new DisposableSet();\n        this.addClass('jp-StatusBar-Widget');\n        const rootLayout = (this.layout = new PanelLayout());\n        const leftPanel = (this._leftSide = new Panel());\n        const middlePanel = (this._middlePanel = new Panel());\n        const rightPanel = (this._rightSide = new Panel());\n        leftPanel.addClass('jp-StatusBar-Left');\n        middlePanel.addClass('jp-StatusBar-Middle');\n        rightPanel.addClass('jp-StatusBar-Right');\n        rootLayout.addWidget(leftPanel);\n        rootLayout.addWidget(middlePanel);\n        rootLayout.addWidget(rightPanel);\n    }\n    /**\n     * Register a new status item.\n     *\n     * @param id - a unique id for the status item.\n     *\n     * @param statusItem - The item to add to the status bar.\n     */\n    registerStatusItem(id, statusItem) {\n        if (id in this._statusItems) {\n            throw new Error(`Status item ${id} already registered.`);\n        }\n        // Populate defaults for the optional properties of the status item.\n        const fullStatusItem = {\n            ...Private.statusItemDefaults,\n            ...statusItem\n        };\n        const { align, item, rank } = fullStatusItem;\n        // Connect the activeStateChanged signal to refreshing the status item,\n        // if the signal was provided.\n        const onActiveStateChanged = () => {\n            this._refreshItem(id);\n        };\n        if (fullStatusItem.activeStateChanged) {\n            fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n        }\n        const rankItem = { id, rank };\n        fullStatusItem.item.addClass('jp-StatusBar-Item');\n        this._statusItems[id] = fullStatusItem;\n        if (align === 'left') {\n            const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._leftSide.addWidget(item);\n                this._leftRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n                this._leftSide.insertWidget(insertIndex, item);\n            }\n        }\n        else if (align === 'right') {\n            const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._rightSide.addWidget(item);\n                this._rightRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n                this._rightSide.insertWidget(insertIndex, item);\n            }\n        }\n        else {\n            this._middlePanel.addWidget(item);\n        }\n        this._refreshItem(id); // Initially refresh the status item.\n        const disposable = new DisposableDelegate(() => {\n            delete this._statusItems[id];\n            if (fullStatusItem.activeStateChanged) {\n                fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n            }\n            item.parent = null;\n            item.dispose();\n        });\n        this._disposables.add(disposable);\n        return disposable;\n    }\n    /**\n     * Dispose of the status bar.\n     */\n    dispose() {\n        this._leftRankItems.length = 0;\n        this._rightRankItems.length = 0;\n        this._disposables.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle an 'update-request' message to the status bar.\n     */\n    onUpdateRequest(msg) {\n        this._refreshAll();\n        super.onUpdateRequest(msg);\n    }\n    _findInsertIndex(side, newItem) {\n        return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n    }\n    _refreshItem(id) {\n        const statusItem = this._statusItems[id];\n        if (statusItem.isActive()) {\n            statusItem.item.show();\n            statusItem.item.update();\n        }\n        else {\n            statusItem.item.hide();\n        }\n    }\n    _refreshAll() {\n        Object.keys(this._statusItems).forEach(id => {\n            this._refreshItem(id);\n        });\n    }\n}\n/**\n * A namespace for private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Default options for a status item, less the item itself.\n     */\n    Private.statusItemDefaults = {\n        align: 'left',\n        rank: 0,\n        isActive: () => true,\n        activeStateChanged: undefined\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token('@jupyterlab/statusbar:IStatusBar', 'A service for the status bar on the application. Use this if you want to add new status bar items.');\n//# sourceMappingURL=tokens.js.map"],"names":["GroupItem","props","spacing","children","className","rest","numChildren","count","map","child","i","style","marginRight","marginLeft","margin","showPopup","options","dialog","Popup","startHidden","launch","Widget","constructor","super","this","_body","body","addClass","_anchor","anchor","_align","align","hasDynamicSize","_observer","ResizeObserver","update","layout","PanelLayout","addWidget","node","addEventListener","_setGeometry","attach","document","removeClass","onUpdateRequest","msg","onAfterAttach","_a","window","observe","onBeforeDetach","disconnect","removeEventListener","onResize","dispose","handleEvent","event","type","_evtKeydown","_evtClick","target","contains","keyCode","stopPropagation","preventDefault","aligned","anchorRect","getBoundingClientRect","bodyRect","width","getComputedStyle","HoverBox","setGeometry","host","maxHeight","minHeight","offset","horizontal","privilege","ProgressBar","percentage","role","Filler","contentWidth","content","TextItem","title","source","ProgressCircle","label","progress","viewBox","cx","cy","r","stroke","strokeWidth","fill","transform","d","angle","Math","max","rad","PI","x","sin","y","cos","toFixed","Private","StatusBar","_leftRankItems","_rightRankItems","_statusItems","_disposables","DisposableSet","rootLayout","leftPanel","_leftSide","Panel","middlePanel","_middlePanel","rightPanel","_rightSide","registerStatusItem","id","statusItem","Error","fullStatusItem","statusItemDefaults","item","rank","onActiveStateChanged","_refreshItem","activeStateChanged","connect","rankItem","insertIndex","_findInsertIndex","push","ArrayExt","insert","insertWidget","disposable","DisposableDelegate","parent","add","length","_refreshAll","side","newItem","findFirstIndex","isActive","show","hide","Object","keys","forEach","undefined","IStatusBar","Token"],"sourceRoot":""}