# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Codra - Pierre Raybaut
# This file is distributed under the same license as the DataLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-06 17:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../features/image/menu/processing.rst:2
msgid "\"Processing\" menu"
msgstr "Menu \"Traitement\""

#: ../../features/image/menu/processing.rst:15
#: ../../features/image/menu/processing.rst:17
msgid "Linear calibration"
msgstr "Étalonnage linéaire"

#: ../../features/image/menu/processing.rst:7
msgid ""
"Create a new image which is a linear calibration of each selected image "
"with respect to Z axis:"
msgstr ""
"Crée une image à partir de l'étalonnage linéaire (par rapport à l'axe des"
" Z) de chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:14
msgid "Parameter"
msgstr "Paramètre"

#: ../../features/image/menu/processing.rst:16
msgid "Z-axis"
msgstr "Axe des Z"

#: ../../features/image/menu/processing.rst:17
msgid ":math:`z_{1} = a.z_{0} + b`"
msgstr ""

#: ../../features/image/menu/processing.rst:20
msgid "Thresholding"
msgstr "Seuillage"

#: ../../features/image/menu/processing.rst:20
msgid "Apply the thresholding to each selected image."
msgstr "Applique un seuillage sur chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:23
msgid "Clipping"
msgstr "Ecrêtage"

#: ../../features/image/menu/processing.rst:23
msgid "Apply the clipping to each selected image."
msgstr "Applique un écrêtage sur chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:27
msgid "Moving average"
msgstr "Moyenne mobile"

#: ../../features/image/menu/processing.rst:26
msgid ""
"Compute moving average of each selected image (implementation based on "
"`scipy.ndimage.uniform_filter "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.uniform_filter.html>`_)."
msgstr ""
"Calcule le résultat de la moyenne mobile de chaque image sélectionnée "
"(implémentation basée sur `scipy.ndimage.uniform_filter "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.uniform_filter.html>`_)."

#: ../../features/image/menu/processing.rst:31
msgid "Moving median"
msgstr "Médiane mobile"

#: ../../features/image/menu/processing.rst:30
msgid ""
"Compute moving median of each selected image (implementation based on "
"`scipy.signal.medfilt "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.medfilt.html>`_)."
msgstr ""
"Calcule le résultat de la médiane mobile de chaque image sélectionnée "
"(implémentation basée sur `scipy.signal.medfilt "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.medfilt.html>`_)."

#: ../../features/image/menu/processing.rst:35
msgid "Wiener filter"
msgstr "Filtre de Wiener"

#: ../../features/image/menu/processing.rst:34
msgid ""
"Compute Wiener filter of each selected image (implementation based on "
"`scipy.signal.wiener "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.wiener.html>`_)."
msgstr ""
"Calcule le résultat du filtre de Wiener sur chaque image sélectionnée "
"(implémentation basée sur `scipy.signal.wiener "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.wiener.html>`_)."

#: ../../features/image/menu/processing.rst:39
msgid "FFT"
msgstr "FFT"

#: ../../features/image/menu/processing.rst:38
msgid ""
"Create a new image which is the Fast Fourier Transform (FFT) of each "
"selected image."
msgstr ""
"Crée une image à partir de la transformée de Fourier rapide (FFT) de "
"chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:42
msgid "Inverse FFT"
msgstr "FFT inverse"

#: ../../features/image/menu/processing.rst:42
msgid "Create a new image which is the inverse FFT of each selected image."
msgstr ""
"Crée une image à partir de la transformée de Fourier rapide inverse (FFT "
"inverse) de chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:46
msgid "Butterworth filter"
msgstr "Filtre de Butterworth"

#: ../../features/image/menu/processing.rst:45
msgid ""
"Perform Butterworth filter on an image (implementation based on "
"`skimage.filters.butterworth <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.butterworth>`_)"
msgstr ""
"Calcule le résultat d'un filtre de Butterworth sur l'image "
"(implémentation basée sur `skimage.filters.butterworth <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.butterworth>`_)"

#: ../../features/image/menu/processing.rst:71
msgid "Exposure"
msgstr "Exposition"

#: ../../features/image/menu/processing.rst:51
msgid "Gamma correction"
msgstr "Correction gamma"

#: ../../features/image/menu/processing.rst:50
msgid ""
"Apply gamma correction to each selected image (implementation based on "
"`skimage.exposure.adjust_gamma <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_gamma>`_)"
msgstr ""
"Applique une correction gamma sur chaque image sélectionnée "
"(implémentation basée sur `skimage.exposure.adjust_gamma <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_gamma>`_)"

#: ../../features/image/menu/processing.rst:55
msgid "Logarithmic correction"
msgstr "Correction logarithmique"

#: ../../features/image/menu/processing.rst:54
msgid ""
"Apply logarithmic correction to each selected image (implementation based"
" on `skimage.exposure.adjust_log <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_log>`_)"
msgstr ""
"Applique une correction logarithmique sur chaque image sélectionnée "
"(implémentation basée sur `skimage.exposure.adjust_log <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_log>`_)"

#: ../../features/image/menu/processing.rst:59
msgid "Sigmoid correction"
msgstr "Correction sigmoïde"

#: ../../features/image/menu/processing.rst:58
msgid ""
"Apply sigmoid correction to each selected image (implementation based on "
"`skimage.exposure.adjust_sigmoid <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_sigmoid>`_)"
msgstr ""
"Applique une correction sigmoïde sur chaque image sélectionnée "
"(implémentation basée sur `skimage.exposure.adjust_sigmoid <https"
"://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.adjust_sigmoid>`_)"

#: ../../features/image/menu/processing.rst:63
msgid "Histogram equalization"
msgstr "Egalisation d'histogramme"

#: ../../features/image/menu/processing.rst:62
msgid ""
"Equalize image histogram levels (implementation based on "
"`skimage.exposure.equalize_hist <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.equalize_hist>`_)"
msgstr ""
"Egalise les niveaux de l'histogramme de l'image (implémentation basée sur"
" `skimage.exposure.equalize_hist <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.equalize_hist>`_)"

#: ../../features/image/menu/processing.rst:67
msgid "Adaptive histogram equalization"
msgstr "Egalisation d'histogramme adaptative"

#: ../../features/image/menu/processing.rst:66
msgid ""
"Equalize image histogram levels using Contrast Limited Adaptive Histogram"
" Equalization (CLAHE) algorithm (implementation based on "
"`skimage.exposure.equalize_adapthist <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.equalize_adapthist>`_)"
msgstr ""
"Egalise les niveaux de l'histogramme de l'image, en utilisant "
"l'algorithme Contrast Limited Adaptive Histogram Equalization (CLAHE) "
"(implémentation basée sur `skimage.exposure.equalize_adapthist <https"
"://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.equalize_adapthist>`_)"

#: ../../features/image/menu/processing.rst:71
msgid "Intensity rescaling"
msgstr "Ajustement des niveaux"

#: ../../features/image/menu/processing.rst:70
msgid ""
"Stretch or shrink image intensity levels (implementation based on "
"`skimage.exposure.rescale_intensity <https://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.rescale_intensity>`_)"
msgstr ""
"Réduit ou étend la plage de répartition des niveaux de l'image "
"(implémentation basée sur `skimage.exposure.rescale_intensity <https"
"://scikit-"
"image.org/docs/stable/api/skimage.exposure.html#skimage.exposure.rescale_intensity>`_)"

#: ../../features/image/menu/processing.rst:93
msgid "Restoration"
msgstr "Restauration"

#: ../../features/image/menu/processing.rst:76
msgid "Total variation denoising"
msgstr "Filtrage variationnel (débruitage)"

#: ../../features/image/menu/processing.rst:75
msgid ""
"Denoise image using Total Variation algorithm (implementation based on "
"`skimage.restoration.denoise_tv_chambolle <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-tv-"
"chambolle>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par filtrage variationnel selon "
"l'algorithme de Chambolle (implémentation basée sur "
"`skimage.restoration.denoise_tv_chambolle <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-tv-"
"chambolle>`_)"

#: ../../features/image/menu/processing.rst:80
msgid "Bilateral filter denoising"
msgstr "Filtrage bilatéral (débruitage)"

#: ../../features/image/menu/processing.rst:79
msgid ""
"Denoise image using bilateral filter (implementation based on "
"`skimage.restoration.denoise_bilateral <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-bilateral>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par filtrage bilatéral "
"(implémentation basée sur `skimage.restoration.denoise_bilateral <https"
"://scikit-image.org/docs/stable/api/skimage.restoration.html#denoise-"
"bilateral>`_)"

#: ../../features/image/menu/processing.rst:84
msgid "Wavelet denoising"
msgstr "Débruitage par ondelettes"

#: ../../features/image/menu/processing.rst:83
msgid ""
"Perform wavelet denoising on image (implementation based on "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-wavelet>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par ondelettes (implémentation basée "
"sur `skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-wavelet>`_)"

#: ../../features/image/menu/processing.rst:88
msgid "White Top-Hat denoising"
msgstr "Débruitage par Top-Hat"

#: ../../features/image/menu/processing.rst:87
msgid ""
"Denoise image by subtracting its white top hat transform (using a disk "
"footprint)"
msgstr ""
"Débruitage de l'image par soustraction de la transformée Top-Hat avec "
"ouverture circulaire de rayon paramétrabl"

#: ../../features/image/menu/processing.rst:93
msgid "All denoising methods"
msgstr "Tous les débruitages"

#: ../../features/image/menu/processing.rst:91
msgid ""
"Perform all denoising methods on image. Combined with the \"distribute on"
" a grid\" option, this allows to compare the different denoising methods "
"on the same image."
msgstr "Applique tous les débruitages à l'image. Combiné avec l'option \"distribuer sur une grille\", cela permet de comparer les différents débruitages sur la même image."

#: ../../features/image/menu/processing.rst:123
msgid "Morphology"
msgstr "Morphologie"

#: ../../features/image/menu/processing.rst:98
msgid "White Top-Hat (disk)"
msgstr "Top-Hat (disque)"

#: ../../features/image/menu/processing.rst:97
msgid ""
"Perform white top hat transform of an image, using a disk footprint "
"(implementation based on `skimage.morphology.white_tophat <https"
"://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.white_tophat>`_)"
msgstr ""
"Calcule le résultat d'un Top-Hat de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.white_tophat>`_)"

#: ../../features/image/menu/processing.rst:102
msgid "Black Top-Hat (disk)"
msgstr "Top-Hat dual (disque)"

#: ../../features/image/menu/processing.rst:101
msgid ""
"Perform black top hat transform of an image, using a disk footprint "
"(implementation based on `skimage.morphology.black_tophat <https"
"://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.black_tophat>`_)"
msgstr ""
"Calcule le résultat d'un Top-Hat dual de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.black_tophat>`_)"

#: ../../features/image/menu/processing.rst:106
msgid "Erosion (disk)"
msgstr "Erosion (disque)"

#: ../../features/image/menu/processing.rst:105
msgid ""
"Perform morphological erosion on an image, using a disk footprint "
"(implementation based on `skimage.morphology.erosion <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.erosion>`_)"
msgstr ""
"Calcule le résultat d'une érosion de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.morphology.erosion <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.erosion>`_)"

#: ../../features/image/menu/processing.rst:110
msgid "Dilation (disk)"
msgstr "Dilatation (disque)"

#: ../../features/image/menu/processing.rst:109
msgid ""
"Perform morphological dilation on an image, using a disk footprint "
"(implementation based on `skimage.morphology.dilation <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.dilation>`_)"
msgstr ""
"Calcule le résultat d'une dilatation de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.morphology.dilation <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.dilation>`_)"

#: ../../features/image/menu/processing.rst:114
msgid "Opening (disk)"
msgstr "Ouverture (disque)"

#: ../../features/image/menu/processing.rst:113
msgid ""
"Perform morphological opening on an image, using a disk footprint "
"(implementation based on `skimage.morphology.opening <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.opening>`_)"
msgstr ""
"Calcule le résultat d'une ouverture morphologique de l'image, avec une "
"forme circulaire (disque) de rayon paramétrable (implémentation basée sur"
" `skimage.morphology.opening <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.opening>`_)"

#: ../../features/image/menu/processing.rst:118
msgid "Closing (disk)"
msgstr "Fermeture (disque)"

#: ../../features/image/menu/processing.rst:117
msgid ""
"Perform morphological closing on an image, using a disk footprint "
"(implementation based on `skimage.morphology.closing <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.closing>`_)"
msgstr ""
"Calcule le résultat d'une fermeture morphologique de l'image, avec une "
"forme circulaire (disque) de rayon paramétrable (implémentation basée sur"
" `skimage.morphology.closing <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.closing>`_)"

#: ../../features/image/menu/processing.rst:123
msgid "All morphological operations"
msgstr "Toutes les opérations morphologiques"

#: ../../features/image/menu/processing.rst:121
msgid ""
"Perform all morphological operations on an image, using a disk footprint."
" Combined with the \"distribute on a grid\" option, this allows to "
"compare the different morphological operations on the same image."
msgstr "Applique toutes les opérations morphologiques à une image. Combiné avec l'option \"distribuer sur une grille\", cela permet de comparer les différentes opérations morphologiques sur la même image."

#: ../../features/image/menu/processing.rst:188
msgid "Edges"
msgstr "Contours"

#: ../../features/image/menu/processing.rst:128
msgid "Roberts filter"
msgstr "Filtre de Roberts"

#: ../../features/image/menu/processing.rst:127
msgid ""
"Perform edge filtering on an image, using the Roberts algorithm "
"(implementation based on `skimage.filters.roberts <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.roberts>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Roberts (implémentation basée sur `skimage.filters.roberts <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.roberts>`_)"

#: ../../features/image/menu/processing.rst:132
msgid "Prewitt filter"
msgstr "Filtre de Prewitt"

#: ../../features/image/menu/processing.rst:131
msgid ""
"Perform edge filtering on an image, using the Prewitt algorithm "
"(implementation based on `skimage.filters.prewitt <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Prewitt (implémentation basée sur `skimage.filters.prewitt <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt>`_)"

#: ../../features/image/menu/processing.rst:136
msgid "Prewitt filter (horizontal)"
msgstr "Filtre de Prewitt (horizontal)"

#: ../../features/image/menu/processing.rst:135
msgid ""
"Find the horizontal edges of an image, using the Prewitt algorithm "
"(implementation based on `skimage.filters.prewitt_h <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt_h>`_)"
msgstr ""
"Recherche les contours horizontaux d'une image, à l'aide de l'algorithme "
"de Prewitt (implémentation basée sur `skimage.filters.prewitt_h <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt_h>`_)"

#: ../../features/image/menu/processing.rst:140
msgid "Prewitt filter (vertical)"
msgstr "Filtre de Prewitt (vertical)"

#: ../../features/image/menu/processing.rst:139
msgid ""
"Find the vertical edges of an image, using the Prewitt algorithm "
"(implementation based on `skimage.filters.prewitt_v <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt_v>`_)"
msgstr ""
"Recherche les contours verticaux d'une image, à l'aide de l'algorithme de"
" Prewitt (implémentation basée sur `skimage.filters.prewitt_v <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.prewitt_v>`_)"

#: ../../features/image/menu/processing.rst:144
msgid "Sobel filter"
msgstr "Filtre de Sobel"

#: ../../features/image/menu/processing.rst:143
msgid ""
"Perform edge filtering on an image, using the Sobel algorithm "
"(implementation based on `skimage.filters.sobel <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Sobel (implémentation basée sur `skimage.filters.sobel <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel>`_)"

#: ../../features/image/menu/processing.rst:148
msgid "Sobel filter (horizontal)"
msgstr "Filtre de Sobel (horizontal)"

#: ../../features/image/menu/processing.rst:147
msgid ""
"Find the horizontal edges of an image, using the Sobel algorithm "
"(implementation based on `skimage.filters.sobel_h <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel_h>`_)"
msgstr ""
"Recherche les contours horizontaux d'une image, à l'aide de l'algorithme "
"de Sobel (implémentation basée sur `skimage.filters.sobel_h <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel_h>`_)"

#: ../../features/image/menu/processing.rst:152
msgid "Sobel filter (vertical)"
msgstr "Filtre de Sobel (vertical)"

#: ../../features/image/menu/processing.rst:151
msgid ""
"Find the vertical edges of an image, using the Sobel algorithm "
"(implementation based on `skimage.filters.sobel_v <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel_v>`_)"
msgstr ""
"Recherche les contours verticaux d'une image, à l'aide de l'algorithme de"
" Sobel (implémentation basée sur `skimage.filters.sobel_v <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.sobel_v>`_)"

#: ../../features/image/menu/processing.rst:156
msgid "Scharr filter"
msgstr "Filtre de Scharr"

#: ../../features/image/menu/processing.rst:155
msgid ""
"Perform edge filtering on an image, using the Scharr algorithm "
"(implementation based on `skimage.filters.scharr <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Scharr (implémentation basée sur `skimage.filters.scharr <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr>`_)"

#: ../../features/image/menu/processing.rst:160
msgid "Scharr filter (horizontal)"
msgstr "Filtre de Scharr (horizontal)"

#: ../../features/image/menu/processing.rst:159
msgid ""
"Find the horizontal edges of an image, using the Scharr algorithm "
"(implementation based on `skimage.filters.scharr_h <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr_h>`_)"
msgstr ""
"Recherche les contours horizontaux d'une image, à l'aide de l'algorithme "
"de Scharr (implémentation basée sur `skimage.filters.scharr_h <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr_h>`_)"

#: ../../features/image/menu/processing.rst:164
msgid "Scharr filter (vertical)"
msgstr "Filtre de Scharr (vertical)"

#: ../../features/image/menu/processing.rst:163
msgid ""
"Find the vertical edges of an image, using the Scharr algorithm "
"(implementation based on `skimage.filters.scharr_v <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr_v>`_)"
msgstr ""
"Recherche les contours verticaux d'une image, à l'aide de l'algorithme de"
" Scharr (implémentation basée sur `skimage.filters.scharr_v <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.scharr_v>`_)"

#: ../../features/image/menu/processing.rst:168
msgid "Farid filter"
msgstr "Filtre de Farid"

#: ../../features/image/menu/processing.rst:167
msgid ""
"Perform edge filtering on an image, using the Farid algorithm "
"(implementation based on `skimage.filters.farid <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Farid (implémentation basée sur `skimage.filters.farid <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid>`_)"

#: ../../features/image/menu/processing.rst:172
msgid "Farid filter (horizontal)"
msgstr "Filtre de Farid (horizontal)"

#: ../../features/image/menu/processing.rst:171
msgid ""
"Find the horizontal edges of an image, using the Farid algorithm "
"(implementation based on `skimage.filters.farid_h <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid_h>`_)"
msgstr ""
"Recherche les contours horizontaux d'une image, à l'aide de l'algorithme "
"de Farid (implémentation basée sur `skimage.filters.farid_h <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid_h>`_)"

#: ../../features/image/menu/processing.rst:176
msgid "Farid filter (vertical)"
msgstr "Filtre de Farid (vertical)"

#: ../../features/image/menu/processing.rst:175
msgid ""
"Find the vertical edges of an image, using the Farid algorithm "
"(implementation based on `skimage.filters.farid_v <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid_v>`_)"
msgstr ""
"Recherche les contours verticaux d'une image, à l'aide de l'algorithme de"
" Farid (implémentation basée sur `skimage.filters.farid_v <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.farid_v>`_)"

#: ../../features/image/menu/processing.rst:180
msgid "Laplace filter"
msgstr "Filtre de Laplace"

#: ../../features/image/menu/processing.rst:179
msgid ""
"Perform edge filtering on an image, using the Laplace algorithm "
"(implementation based on `skimage.filters.laplace <https://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.laplace>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Laplace (implémentation basée sur `skimage.filters.laplace <https"
"://scikit-"
"image.org/docs/stable/api/skimage.filters.html#skimage.filters.laplace>`_)"

#: ../../features/image/menu/processing.rst:185
msgid "All edges filters"
msgstr "Tous les filtres de contours"

#: ../../features/image/menu/processing.rst:183
msgid ""
"Perform all edge filtering algorithms (see above) on an image. Combined "
"with the \"distribute on a grid\" option, this allows to compare the "
"different edge filters on the same image."
msgstr "Applique tous les algorithmes de détection de contours (voir ci-dessus) à une image. Combiné avec l'option \"distribuer sur une grille\", cela permet de comparer les différents filtres de contours sur la même image."

#: ../../features/image/menu/processing.rst:188
msgid "Canny filter"
msgstr "Filtre de Canny"

#: ../../features/image/menu/processing.rst:188
msgid ""
"Perform edge filtering on an image, using the Canny algorithm "
"(implementation based on `skimage.feature.canny <https://scikit-"
"image.org/docs/stable/api/skimage.feature.html#skimage.feature.canny>`_)"
msgstr ""
"Calcule le résultat d'une détection de contours à l'aide l'algorithme de "
"Canny (implémentation basée sur `skimage.feature.canny <https://scikit-"
"image.org/docs/stable/api/skimage.feature.html#skimage.feature.canny>`_)"
