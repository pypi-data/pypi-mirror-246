# Generated by Django 4.0.10 on 2023-08-21 10:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="body",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Body")),
            ],
        ),
        migrations.CreateModel(
            name="enumeration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Enumeration")),
                ("last_enumtype_index", models.IntegerField(default=0)),
                ("this_enumtype_index", models.IntegerField(default=0)),
                ("last_textline_bigroman", models.TextField(default="")),
                ("last_textline_smallroman", models.TextField(default="")),
                ("last_textline_bigletter", models.TextField(default="")),
                ("last_textline_smallletter", models.TextField(default="")),
                ("last_textline_digit", models.TextField(default="")),
                ("last_textline_signmark", models.TextField(default="")),
            ],
        ),
        migrations.CreateModel(
            name="footer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Footer")),
            ],
        ),
        migrations.CreateModel(
            name="headlines",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Headlines")),
            ],
        ),
        migrations.CreateModel(
            name="textpart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Textpart")),
                ("documentpath", models.TextField(default="./")),
                ("documentname", models.TextField(default="")),
                ("outputpath", models.TextField(default="./")),
                ("histogramsize", models.IntegerField(default=100)),
                ("headerboundary", models.FloatField(default=1000.0)),
                ("footerboundary", models.FloatField(default=55.0)),
                ("ruleverbosity", models.IntegerField(default=0)),
                ("verbosetextline", models.TextField(default="")),
                ("nr_bold_chars", models.IntegerField(default=0)),
                ("nr_total_chars", models.IntegerField(default=0)),
                ("boldchars_ratio", models.FloatField(default=0.0)),
                ("boldratio_threshold", models.FloatField(default=0.05)),
                ("max_vertpos", models.FloatField(default=0.0)),
                ("min_vertpos", models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name="title",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Title")),
                (
                    "textpart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="textsplitter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("documentname", models.TextField(default="", unique=True)),
                ("labelname", models.TextField(default="TextSplitter")),
                ("VERSION", models.TextField(default="")),
                ("ratelimit_timeunit", models.FloatField(default=0.0)),
                ("ratelimit_calls", models.IntegerField(default=0)),
                ("ratelimit_tokens", models.IntegerField(default=0)),
                ("Costs_price", models.FloatField(default=0.0)),
                ("Costs_tokenportion", models.IntegerField(default=0)),
                ("api_rate_starttime", models.FloatField(default=0.0)),
                ("api_rate_currenttime", models.FloatField(default=0.0)),
                ("api_rate_currenttokens", models.IntegerField(default=0)),
                ("api_rate_currentcalls", models.IntegerField(default=0)),
                ("callcounter", models.IntegerField(default=0)),
                ("api_totalprice", models.FloatField(default=0.0)),
                ("api_wrongcalls_duetomaxwhile", models.IntegerField(default=0)),
                ("html_visualization", models.TextField(default="")),
                ("MaxSummaryLength", models.IntegerField(default=50)),
                ("summarization_threshold", models.IntegerField(default=50)),
                ("UseDummySummary", models.BooleanField(default=False)),
                ("LanguageModel", models.TextField(default="gpt-3.5-turbo")),
                ("LanguageChoice", models.TextField(default="Default")),
                ("LanguageTemperature", models.FloatField(default=0.1)),
                ("MaxCallRepeat", models.IntegerField(default=20)),
                ("doc_metadata_author", models.TextField(default="None")),
                ("doc_metadata_creator", models.TextField(default="None")),
                ("doc_metadata_producer", models.TextField(default="None")),
                ("doc_metadata_subject", models.TextField(default="None")),
                ("doc_metadata_title", models.TextField(default="None")),
                ("doc_metadata_fullstring", models.TextField(default="")),
                (
                    "body",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.body"
                    ),
                ),
                (
                    "enumeration",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.enumeration",
                    ),
                ),
                (
                    "footer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.footer"
                    ),
                ),
                (
                    "headlines",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.headlines",
                    ),
                ),
                (
                    "textpart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
                (
                    "title",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.title"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="textalinea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("labelname", models.TextField(default="Alinea")),
                ("textlevel", models.IntegerField(default=0)),
                ("typelevel", models.IntegerField(default=0)),
                ("texttitle", models.TextField(default="")),
                ("nativeID", models.IntegerField(default=-1)),
                ("parentID", models.IntegerField(default=-1)),
                ("horizontal_ordering", models.IntegerField(default=-1)),
                ("summary", models.TextField(default="")),
                ("sum_CanbeEmpty", models.BooleanField(default=False)),
                ("alineatype", models.IntegerField(default=0)),
                ("enumtype", models.IntegerField(default=0)),
                ("html_visualization", models.TextField(default="")),
                ("summarized_wordcount", models.IntegerField(default=0)),
                ("total_wordcount", models.IntegerField(default=0)),
                ("nr_decendants", models.IntegerField(default=0)),
                ("nr_children", models.IntegerField(default=0)),
                ("nr_depths", models.IntegerField(default=0)),
                ("nr_pages", models.IntegerField(default=0)),
                (
                    "textpart",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
                (
                    "textsplitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textsplitter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="readingline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("textcontent", models.TextField(default="")),
                ("pagenumbers", models.IntegerField(default=0)),
                ("positioncontent", models.FloatField(default=0.0)),
                ("horposcontent", models.FloatField(default=0.0)),
                ("whitelinesize", models.FloatField(default=0.0)),
                ("fontsize_perline", models.FloatField(default=0.0)),
                ("is_italic", models.BooleanField(default=False)),
                ("is_bold", models.BooleanField(default=False)),
                ("is_highlighted", models.BooleanField(default=False)),
                (
                    "textpart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="readinghistogram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("Histogram_Name", models.TextField(default="")),
                ("Histogram_content", models.FloatField(default=0.0)),
                ("Histogram_Boundary", models.FloatField(default=0.0)),
                (
                    "textpart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Native_TOC_Element",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("cascadelevel", models.IntegerField(default=0)),
                ("title", models.TextField(default="")),
                ("page", models.IntegerField(default=0)),
                ("Xpos", models.FloatField(default=0.0)),
                ("Ypos", models.FloatField(default=0.0)),
                ("Zpos", models.FloatField(default=0.0)),
                (
                    "textsplitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textsplitter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="lineregion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("left", models.FloatField(default=0.0)),
                ("right", models.FloatField(default=0.0)),
                ("value", models.FloatField(default=0.0)),
                ("frequency", models.FloatField(default=0.0)),
                ("isregular", models.BooleanField(default=False)),
                ("issmall", models.BooleanField(default=False)),
                ("isbig", models.BooleanField(default=False)),
                ("iszero", models.BooleanField(default=False)),
                ("isvalid", models.BooleanField(default=False)),
                (
                    "textpart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="headlines_hierarchy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("enum_field", models.IntegerField(default=0)),
                (
                    "headlines",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.headlines",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="headlines",
            name="textpart",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.textpart"
            ),
        ),
        migrations.AddField(
            model_name="footer",
            name="textpart",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.textpart"
            ),
        ),
        migrations.CreateModel(
            name="fontregion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("left", models.FloatField(default=0.001)),
                ("right", models.FloatField(default=10000.0)),
                ("value", models.FloatField(default=10.0)),
                ("frequency", models.FloatField(default=1.0)),
                ("cascadelevel", models.IntegerField(default=-1)),
                ("isregular", models.BooleanField(default=False)),
                (
                    "textpart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textpart",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="enumeration_hierarchy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("enum_field", models.IntegerField(default=0)),
                (
                    "enumeration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.enumeration",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="enumeration",
            name="textpart",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.textpart"
            ),
        ),
        migrations.CreateModel(
            name="breakdown_decisions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("textline", models.TextField(default="")),
                (
                    "textsplitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="djangotextsplitter.textsplitter",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="body",
            name="textpart",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="djangotextsplitter.textpart"
            ),
        ),
    ]
