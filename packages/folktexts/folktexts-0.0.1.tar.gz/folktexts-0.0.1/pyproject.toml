[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "folktexts"
description = "A multi-lingual, multi-country Q&A dataset of social facts."
authors = [
    { name = "AndreFCruz" }
]

# PyPI classifiers, see https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

version = "0.0.1"
requires-python = ">=3.8"
dynamic = [
    "readme",
    "dependencies",
    "optional-dependencies",
]   # these are defined below dynamically

[tool.setuptools.dynamic]
readme = { file = "README.md", content-type="text/markdown" }

# Main package dependencies
dependencies = {file = "requirements/main.txt"}

# Optional dependencies
optional-dependencies.tests = {file = "requirements/tests.txt"}
optional-dependencies.docs = {file = "requirements/docs.txt"}

[project.urls]
Homepage = "https://github.com/AndreFCruz/folktexts"    # TODO: eventually point to github pages (docs)
Documentation = "https://andrefcruz.github.io/folktexts/"
Repository = "https://github.com/AndreFCruz/folktexts"

[tool.setuptools.packages.find]
include = ["folktexts"]

# Autopep8
[tool.autopep8]
max_line_length = 100
aggressive = 1

# isort
[tool.isort]
profile = "hug"
force_single_line = false
src_paths = ["folktexts", "tests"]

# Pylint
[tool.pylint.MASTER]
[tool.pylint.FORMAT]
max-line-length = 100
extension-pkg-whitelist = "numpy"

[tool.pylint.MESSAGES_CONTROL]
disable = "invalid-name"

# Coverage
[tool.coverage.run]
branch = true
source = ["folktexts"]
omit = ["folktexts/_version.py", "tests"]

[tool.coverage.report]
show_missing = true

# MyPy
[tool.mypy]
ignore_missing_imports = true
exclude = ["build", "doc"]

# Tox
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310

[testenv]
description = run unit tests
commands = python -m pytest tests
"""
