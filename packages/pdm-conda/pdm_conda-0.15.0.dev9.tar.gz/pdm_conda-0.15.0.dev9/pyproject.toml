[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "pdm-conda"
description = "A PDM plugin to resolve/install/uninstall project dependencies with Conda"
requires-python = ">=3.10,<3.13"
authors = [
    { name = "Marcos Pastorini" },
]
keywords = [
    "pdm",
    "plugin",
    "conda",
]
readme = "README.md"
dynamic = []
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "asyncpg~=0.28.0",
]
version = "0.15.0-dev9"

[project.urls]
Homepage = "https://github.com/macro128/pdm-conda"
Changelog = "https://github.com/macro128/pdm-conda/blob/main/CHANGELOG.md"

[project.entry-points.pdm]
conda = "pdm_conda:main"

[project.license]
text = "MIT"

[project.optional-dependencies]
db = [
    "python-dotenv~=1.0.0",
    "psycopg2-binary~=2.9.7",
]
services = [
    "pdm-conda[db]",
]
prefect-agent = [
    "pdm-conda[services]",
]
api = [
    "pdm-conda[services]",
]

[tool.pdm]
package-type = "application"
plugins = [
    "pdm-backend",
]

[tool.pdm.dev-dependencies]
s3-server = [
    "moto[server]",
]
dev = [
    "moto[s3]~=4.2.9",
]

[tool.pdm.conda]
runner = "micromamba"
channels = [
    "conda-forge",
]
as-default-manager = true
batched-commands = true
excludes = [
    "prefect-client",
    "streamlink",
    "moto",
    "python-telegram-bot",
    "aiolimiter",
    "py-partiql-parser",
    "fastapi-crudrouter",
    "ormar",
    "databases",
    "pytest-random-num",
    "python-ffmpeg",
]

[tool.pdm.conda.optional-dependencies]
prefect-agent = [
    "ffmpeg~=6.0.0",
]

[tool.pdm.version]
source = "file"
path = "src/pdm_conda/__init__.py"

[tool.pdm.build]
package-dir = "src"
includes = [
    "src",
    "data/*.json",
]
excludes = [
    "tests",
]

[tool.pdm.scripts]
test = "pytest --cov=src/ tests/{args} --cov-report xml --cov-report term"
fix-report = "python scripts/fix_report.py"

[tool.pdm.scripts.test-cov]
composite = [
    "test {args}",
    "fix-report",
]

[tool.pytest.ini_options]
addopts = "--random-order"
filterwarnings = [
    "ignore::pytest.PytestReturnNotNoneWarning",
]

[tool.mypy]
python_version = "3.10"
pretty = true

[tool.isort]
honor_noqa = true
profile = "black"
combine_star = true
remove_redundant_aliases = true
multi_line_output = 3

[tool.black]
line-length = 120

[tool.flake8]
inline-quotes = "double"
max-line-length = 120
extend-ignore = [
    "E203",
    "W503",
    "E722",
    "D107",
    "WPS412",
    "WPS326",
]
per-file-ignores = [
    "__init__.py:",
    "F401",
    "F403",
    "WPS410",
    "test_*.py,tests.py,tests_*.py,*/tests/*,conftest.py:",
    "S101",
    "WPS442",
    "WPS210",
    "WPS432",
    "DAR101",
    "WPS211",
]
exclude = [
    "./.git",
    "./venv",
    "migrations",
    "./var",
]
