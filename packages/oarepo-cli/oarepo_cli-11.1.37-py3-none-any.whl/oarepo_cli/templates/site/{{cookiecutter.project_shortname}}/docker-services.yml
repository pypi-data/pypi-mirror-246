version: '2.2'
services:
  app:
    build:
      context: ./
      args:
        - ENVIRONMENT=DEV
    image: {{cookiecutter.project_shortname}}
    restart: "unless-stopped"
    # environment goes from the .env file
  frontend:
    build: ./docker/nginx/
    image: {{cookiecutter.project_shortname}}-frontend
    restart: "unless-stopped"
  cache:
    image: redis:7
    restart: "unless-stopped"
    read_only: true
  db:
    image: postgres:15-alpine
    restart: "unless-stopped"
    environment:
      - "POSTGRES_USER=${INVENIO_DATABASE_USER}"
      - "POSTGRES_PASSWORD=${INVENIO_DATABASE_PASSWORD}"
      - "POSTGRES_DB=${INVENIO_DATABASE_DBNAME}"
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: "unless-stopped"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${INVENIO_PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${INVENIO_PGADMIN_PASSWORD}"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
  mq:
    image: rabbitmq:3-management
    restart: "unless-stopped"
    environment:
      RABBITMQ_DEFAULT_USER: "${INVENIO_RABBIT_USER}"
      RABBITMQ_DEFAULT_PASS: "${INVENIO_RABBIT_PASSWORD}"
  search:
    image: opensearchproject/opensearch:2
    restart: "unless-stopped"
    environment:
      # settings only for development. DO NOT use in production!
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    expose:
      - "5601"
    environment:
      # settings only for development. DO NOT use in production!
      - 'OPENSEARCH_HOSTS=["http://search:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
  s3:
    image: minio/minio:latest
    restart: "unless-stopped"
    environment:
      MINIO_ROOT_USER: ${INVENIO_S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${INVENIO_S3_SECRET_KEY}
    volumes:
      - ./data:/data
    command: server /data --console-address :9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
