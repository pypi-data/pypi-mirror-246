from typing import List, Tuple
from .ChipNode import ChipNode

class ChipError:
    H : int
    W : int
    nodes : List[ChipNode]
    n_available_nodes : int

    xy_crosstalk : List[List[float]]
    error_arr : List[List[List[float]]]
    alpha_list : List[float]
    mu_list : List[float]
    detune_list : List[float]

    def __init__(self) -> None: ...

    def qubit_name_idx(i : int, j : int) -> int: ...
    def qubit_idx(i : int, j : int) -> int: ...
    def check_available_pair(i : int, j : int) -> bool: ...
    def get_neighbors(i : int, j : int) -> List[Tuple[int, int]]: ...
    def get_neighbors_distance_sqrt2(i : int, j : int) -> List[Tuple[int, int]]: ...
    def get_neighbors_distance_2(i : int, j : int) -> List[Tuple[int, int]]: ...

    def load_file(qubit_data_filename : str, 
                  xy_crosstalk_sim_filename : str) -> None: ...

    def initialize_all_nodes() -> None: ...
    def list_all_unallocated() -> List[Tuple[int, int]]: ...
    def list_all_allocated() -> List[Tuple[int, int]]: ...
    def assign_frequencies(frequencies : List[float]) -> None : ...
    def list_freq_ranges() -> List[Tuple[float, float]]: ...


